<exports>
    <class>        <name>ActionMap</name>
        <base>SimObject</base>
        <method>            <name>bind</name>
            <args> device, action, [modifier spec, mod...], command </args>
        </method>
        <method>            <name>bindCmd</name>
            <args> device, action, makeCmd, breakCmd </args>
        </method>
        <method>            <name>getBinding</name>
            <args> command </args>
        </method>
        <method>            <name>getCommand</name>
            <args> device, action </args>
        </method>
        <method>            <name>getDeadZone</name>
            <args> device, action </args>
        </method>
        <method>            <name>getScale</name>
            <args> device, action </args>
        </method>
        <method>            <name>isInverted</name>
            <args> device, action </args>
        </method>
        <method>            <name>pop</name>
        </method>
        <method>            <name>push</name>
        </method>
        <method>            <name>save</name>
            <args> [fileName], [append] </args>
        </method>
        <method>            <name>unbind</name>
            <args> device, action </args>
        </method>
    </class>
    <class>        <name>AIClient</name>
        <base>AIConnection</base>
    </class>
    <class>        <name>AIConnection</name>
        <base>GameConnection</base>
        <method>            <name>getAddress</name>
        </method>
        <method>            <name>getAimLocation</name>
        </method>
        <method>            <name>getFreeLook</name>
            <desc>Is freelook on for the current move?</desc>
        </method>
        <method>            <name>getLocation</name>
        </method>
        <method>            <name>getMove</name>
            <args>string field</args>
            <desc>Get the given field of a move.

@param field One of {'x','y','z','yaw','pitch','roll'}
@returns The requested field on the current move.</desc>
        </method>
        <method>            <name>getMoveDestination</name>
        </method>
        <method>            <name>getTargetObject</name>
        </method>
        <method>            <name>getTrigger</name>
            <args>int trigger</args>
            <desc>Is the given trigger set?</desc>
        </method>
        <method>            <name>missionCycleCleanup</name>
        </method>
        <method>            <name>move</name>
        </method>
        <method>            <name>moveForward</name>
        </method>
        <method>            <name>setAimLocation</name>
            <args> x y z </args>
        </method>
        <method>            <name>setFreeLook</name>
            <args>bool isFreeLook</args>
            <desc>Enable/disable freelook on the current move.</desc>
        </method>
        <method>            <name>setMove</name>
            <args>string field, float value</args>
            <desc>Set a field on the current move.

@param   field One of {'x','y','z','yaw','pitch','roll'}
@param   value Value to set field to.</desc>
        </method>
        <method>            <name>setMoveDestination</name>
            <args> x y z </args>
        </method>
        <method>            <name>setMoveSpeed</name>
            <args> float </args>
        </method>
        <method>            <name>setTargetObject</name>
            <args> obj </args>
        </method>
        <method>            <name>setTrigger</name>
            <args>int trigger, bool set</args>
            <desc>Set a trigger.</desc>
        </method>
        <method>            <name>stop</name>
        </method>
    </class>
    <class>        <name>AIPlayer</name>
        <base>Player</base>
        <method>            <name>clearAim</name>
            <desc>Stop aiming at anything.</desc>
        </method>
        <method>            <name>getAimLocation</name>
            <desc>Returns the point the AI is aiming at.</desc>
        </method>
        <method>            <name>getAimObject</name>
            <desc>Gets the object the AI is targeting.</desc>
        </method>
        <method>            <name>getMoveDestination</name>
            <desc>Returns the point the AI is set to move to.</desc>
        </method>
        <method>            <name>setAimLocation</name>
            <args> Point3F target </args>
            <desc>Tells the AI to aim at the location provided.</desc>
        </method>
        <method>            <name>setAimObject</name>
            <args> GameBase obj, [Point3F offset] </args>
            <desc>Sets the bot's target object. Optionally set an offset from target location.</desc>
        </method>
        <method>            <name>setMoveDestination</name>
            <args>Point3F goal, bool slowDown=true</args>
            <desc>Tells the AI to move to the location provided.</desc>
        </method>
        <method>            <name>setMoveSpeed</name>
            <args> float speed </args>
            <desc>Sets the move speed for an AI object.</desc>
        </method>
        <method>            <name>stop</name>
            <desc>Stop moving.</desc>
        </method>
    </class>
    <class>        <name>AtlasInstance</name>
        <base>SceneObject</base>
        <method>            <name>purge</name>
            <desc>- Purge all loaded chunks.</desc>
        </method>
        <field>            <name>chunkFile</name>
            <desc>Path to the file we will be loading geometry data from.</desc>
        </field>
        <field>            <name>detailTexture</name>
            <desc>Detail texture.</desc>
        </field>
        <field>            <name>materialName</name>
            <desc>Name of our Material. Must be specialized for terrain usage.</desc>
        </field>
        <field>            <name>tqtFile</name>
            <desc>Path to the file we will be loading texture data from.</desc>
        </field>
    </class>
    <class>        <name>AtlasInstance2</name>
        <base>SceneObject</base>
        <method>            <name>purgeClipmap</name>
            <desc>- Refill clipmap from image cache.</desc>
        </method>
        <method>            <name>purgeClipmapTimed</name>
            <desc>- Refill clipmap from image cache, time test.</desc>
        </method>
        <field>            <name>atlasFile</name>
            <desc>filename atlasFile</desc>
        </field>
        <field>            <name>detailTex</name>
            <desc>filename detailTex</desc>
        </field>
        <field>            <name>lightMapSize</name>
            <desc>int lightMapSize</desc>
        </field>
    </class>
    <class>        <name>BanList</name>
        <base>SimObject</base>
        <method>            <name>add</name>
            <args> int ID, TransportAddress TA, int banLength </args>
            <desc>Ban a user for banLength seconds.

@param   ID       Unique ID of the player.
@param   TA       Address from which the player connected.
@param   banTime  Time at which they will be allowed back in.</desc>
        </method>
        <method>            <name>addAbsolute</name>
            <args> int ID, TransportAddress TA, int banTime </args>
            <desc>Ban a user until a given time.

@param   ID       Unique ID of the player.
@param   TA       Address from which the player connected.
@param   banTime  Time at which they will be allowed back in.</desc>
        </method>
        <method>            <name>export</name>
            <args>string filename</args>
            <desc>Dump the banlist to a file.</desc>
        </method>
        <method>            <name>isBanned</name>
            <args> int ID, TransportAddress TA </args>
            <desc>Is someone banned?

@param   ID       Unique ID of the player.
@param   TA       Address from which the player connected.</desc>
        </method>
        <method>            <name>removeBan</name>
            <args> int ID, TransportAddress TA </args>
            <desc>Unban someone.

@param   ID       Unique ID of the player.
@param   TA       Address from which the player connected.</desc>
        </method>
    </class>
    <class>        <name>Camera</name>
        <base>ShapeBase</base>
        <method>            <name>getPosition</name>
            <desc>Get the position of the camera.

@returns A string of form "x y z".</desc>
        </method>
        <method>            <name>setFlyMode</name>
            <desc>Set the camera to be able to fly freely.</desc>
        </method>
        <method>            <name>setOrbitMode</name>
            <args>GameBase orbitObject, transform mat, float minDistance, float maxDistance, float curDistance, bool ownClientObject</args>
            <desc>Set the camera to orbit around some given object.

@param   orbitObject  Object we want to orbit.
@param   mat          A set of fields: posX posY posZ aaX aaY aaZ aaTheta
@param   minDistance  Minimum distance to keep from object.
@param   maxDistance  Maximum distance to keep from object.
@param   curDistance  Distance to set initially from object.
@param   ownClientObj Are we observing an object owned by us?</desc>
        </method>
    </class>
    <class>        <name>CameraData</name>
        <base>ShapeBaseData</base>
    </class>
    <class>        <name>ConnectionMessageEvent</name>
    </class>
    <class>        <name>ConsoleLogger</name>
        <base>SimObject</base>
        <method>            <name>attach</name>
            <desc>Attaches this object to the console and begins logging</desc>
        </method>
        <method>            <name>detach</name>
            <desc>Detaches this object from the console and stops logging</desc>
        </method>
        <field>            <name>level</name>
            <desc>enumval level</desc>
        </field>
    </class>
    <class>        <name>CreatorTree</name>
        <base>GuiArrayCtrl</base>
        <method>            <name>addGroup</name>
            <args>string group, string name, string value</args>
        </method>
        <method>            <name>addItem</name>
            <args>Node group, string name, string value</args>
        </method>
        <method>            <name>clear</name>
            <desc>Clear the tree.</desc>
        </method>
        <method>            <name>fileNameMatch</name>
            <args>string world, string type, string filename</args>
        </method>
        <method>            <name>getName</name>
            <args>Node item</args>
        </method>
        <method>            <name>getParent</name>
            <args>Node n</args>
        </method>
        <method>            <name>getSelected</name>
            <desc>Return a handle to the currently selected item.</desc>
        </method>
        <method>            <name>getValue</name>
            <args>Node n</args>
        </method>
        <method>            <name>isGroup</name>
            <args>Group g</args>
        </method>
    </class>
    <class>        <name>CubemapData</name>
        <base>SimObject</base>
        <field>            <name>cubeFace</name>
            <desc>filename cubeFace</desc>
        </field>
        <field>            <name>dynamic</name>
            <desc>bool dynamic</desc>
        </field>
    </class>
    <class>        <name>CustomMaterial</name>
        <base>Material</base>
        <field>            <name>blendOp</name>
            <desc>enumval blendOp</desc>
        </field>
        <field>            <name>dynamicLightingMaterial</name>
            <desc>SimObjectPtr dynamicLightingMaterial</desc>
        </field>
        <field>            <name>fallback</name>
            <desc>SimObjectPtr fallback</desc>
        </field>
        <field>            <name>pass</name>
            <desc>SimObjectPtr pass</desc>
        </field>
        <field>            <name>refract</name>
            <desc>bool refract</desc>
        </field>
        <field>            <name>shader</name>
            <desc>string shader</desc>
        </field>
        <field>            <name>texture</name>
            <desc>filename texture</desc>
        </field>
        <field>            <name>version</name>
            <desc>float version</desc>
        </field>
    </class>
    <class>        <name>DbgFileView</name>
        <base>GuiArrayCtrl</base>
        <method>            <name>clearBreakPositions</name>
            <desc>Clear all break points in the current file.</desc>
        </method>
        <method>            <name>findString</name>
            <args>string findThis</args>
            <desc>Find the specified string in the currently viewed file and scroll it into view.</desc>
        </method>
        <method>            <name>getCurrentLine</name>
            <desc>Get the currently executing file and line, if any.

@returns A string containing the file, a tab, and then the line number. Use getField() with this.</desc>
        </method>
        <method>            <name>open</name>
            <args>string filename</args>
            <desc>Open a file for viewing.

@note This loads the file from the local system.</desc>
        </method>
        <method>            <name>removeBreak</name>
            <args>int line</args>
            <desc>Remove a breakpoint from the specified line.</desc>
        </method>
        <method>            <name>setBreak</name>
            <args>int line</args>
            <desc>Set a breakpoint at the specified line.</desc>
        </method>
        <method>            <name>setBreakPosition</name>
            <args>int line</args>
            <desc>Set a breakpoint at the specified line.</desc>
        </method>
        <method>            <name>setCurrentLine</name>
            <args>int line, bool selected</args>
            <desc>Set the current highlighted line.</desc>
        </method>
    </class>
    <class>        <name>Debris</name>
        <base>GameBase</base>
        <method>            <name>init</name>
            <args>Point3F position, Point3F velocity</args>
            <desc>Set this piece of debris at the given position with the given velocity.</desc>
        </method>
        <field>            <name>lifetime</name>
            <desc>float lifetime</desc>
        </field>
    </class>
    <class>        <name>DebrisData</name>
        <base>GameBaseData</base>
        <field>            <name>baseRadius</name>
            <desc>float baseRadius</desc>
        </field>
        <field>            <name>bounceVariance</name>
            <desc>int bounceVariance</desc>
        </field>
        <field>            <name>elasticity</name>
            <desc>float elasticity</desc>
        </field>
        <field>            <name>emitters</name>
            <desc>ParticleEmitterData emitters</desc>
        </field>
        <field>            <name>explodeOnMaxBounce</name>
            <desc>bool explodeOnMaxBounce</desc>
        </field>
        <field>            <name>Explosion</name>
            <desc>ExplosionData Explosion</desc>
        </field>
        <field>            <name>fade</name>
            <desc>bool fade</desc>
        </field>
        <field>            <name>friction</name>
            <desc>float friction</desc>
        </field>
        <field>            <name>gravModifier</name>
            <desc>float gravModifier</desc>
        </field>
        <field>            <name>ignoreWater</name>
            <desc>bool ignoreWater</desc>
        </field>
        <field>            <name>lifetime</name>
            <desc>float lifetime</desc>
        </field>
        <field>            <name>lifetimeVariance</name>
            <desc>float lifetimeVariance</desc>
        </field>
        <field>            <name>maxSpinSpeed</name>
            <desc>float maxSpinSpeed</desc>
        </field>
        <field>            <name>minSpinSpeed</name>
            <desc>float minSpinSpeed</desc>
        </field>
        <field>            <name>numBounces</name>
            <desc>int numBounces</desc>
        </field>
        <field>            <name>render2D</name>
            <desc>bool render2D</desc>
        </field>
        <field>            <name>shapeFile</name>
            <desc>filename shapeFile</desc>
        </field>
        <field>            <name>snapOnMaxBounce</name>
            <desc>bool snapOnMaxBounce</desc>
        </field>
        <field>            <name>staticOnMaxBounce</name>
            <desc>bool staticOnMaxBounce</desc>
        </field>
        <field>            <name>terminalVelocity</name>
            <desc>float terminalVelocity</desc>
        </field>
        <field>            <name>texture</name>
            <desc>string texture</desc>
        </field>
        <field>            <name>useRadiusMass</name>
            <desc>bool useRadiusMass</desc>
        </field>
        <field>            <name>velocity</name>
            <desc>float velocity</desc>
        </field>
        <field>            <name>velocityVariance</name>
            <desc>float velocityVariance</desc>
        </field>
    </class>
    <class>        <name>DebugDrawer</name>
        <base>SimObject</base>
        <method>            <name>drawLine</name>
            <args>Point3F a, Point3F b</args>
        </method>
        <method>            <name>setLastTTL</name>
            <args>U32 ms</args>
        </method>
        <method>            <name>setLastZTest</name>
            <args>bool enabled</args>
        </method>
        <method>            <name>toggleDrawing</name>
            <desc>- Enabled/disable drawing.</desc>
        </method>
        <method>            <name>toggleFreeze</name>
            <desc>- Toggle freeze mode.</desc>
        </method>
    </class>
    <class>        <name>DebugView</name>
        <base>GuiTextCtrl</base>
        <method>            <name>addLine</name>
            <args> Point3F start, Point3F end, Color3F color</args>
            <desc>Cause a line to be drawn persistently by the DebugView.</desc>
        </method>
        <method>            <name>clearLines</name>
            <desc>Clear all lines added by addLine.</desc>
        </method>
        <method>            <name>clearText</name>
            <args>int line=-1</args>
            <desc>Clears all lines, or if a line is specified, that specific line.</desc>
        </method>
        <method>            <name>setText</name>
            <args>int line, string text, Color3F color=NULL</args>
            <desc>Set one of the lines in the DebugView to contain the specified text at the specified color.</desc>
        </method>
    </class>
    <class>        <name>DecalData</name>
        <base>GameBaseData</base>
        <field>            <name>lifeSpan</name>
            <desc>int lifeSpan</desc>
        </field>
        <field>            <name>selfIlluminated</name>
            <desc>bool selfIlluminated</desc>
        </field>
        <field>            <name>sizeX</name>
            <desc>float sizeX</desc>
        </field>
        <field>            <name>sizeY</name>
            <desc>float sizeY</desc>
        </field>
        <field>            <name>textureName</name>
            <desc>filename textureName</desc>
        </field>
    </class>
    <class>        <name>DecalManager</name>
        <base>SceneObject</base>
    </class>
    <class>        <name>EditManager</name>
        <base>GuiControl</base>
        <method>            <name>gotoBookmark</name>
            <args>int slot</args>
        </method>
        <method>            <name>setBookmark</name>
            <args>int slot</args>
        </method>
    </class>
    <class>        <name>EditTSCtrl</name>
        <base>GuiTSCtrl</base>
        <method>            <name>renderCircle</name>
            <args>Point3F pos, Point3F normal, float radius, int segments=NULL</args>
        </method>
        <method>            <name>renderLine</name>
            <args>Point3F start, Point3F end, int width</args>
        </method>
        <method>            <name>renderSphere</name>
            <args>Point3F pos, float radius, int subdivisions=NULL</args>
        </method>
        <method>            <name>renderTriangle</name>
            <args>Point3F a, Point3F b, Point3F c</args>
        </method>
        <field>            <name>consoleCircleSegments</name>
            <desc>int consoleCircleSegments</desc>
        </field>
        <field>            <name>consoleFillColor</name>
            <desc>ColorI consoleFillColor</desc>
        </field>
        <field>            <name>consoleFrameColor</name>
            <desc>ColorI consoleFrameColor</desc>
        </field>
        <field>            <name>consoleLineWidth</name>
            <desc>int consoleLineWidth</desc>
        </field>
        <field>            <name>consoleSphereLevel</name>
            <desc>int consoleSphereLevel</desc>
        </field>
        <field>            <name>missionAreaFillColor</name>
            <desc>ColorI missionAreaFillColor</desc>
        </field>
        <field>            <name>missionAreaFrameColor</name>
            <desc>ColorI missionAreaFrameColor</desc>
        </field>
        <field>            <name>renderMissionArea</name>
            <desc>bool renderMissionArea</desc>
        </field>
    </class>
    <class>        <name>Explosion</name>
        <base>GameBase</base>
    </class>
    <class>        <name>ExplosionData</name>
        <base>GameBaseData</base>
        <field>            <name>camShakeAmp</name>
            <desc>Point3F camShakeAmp</desc>
        </field>
        <field>            <name>camShakeDuration</name>
            <desc>float camShakeDuration</desc>
        </field>
        <field>            <name>camShakeFalloff</name>
            <desc>float camShakeFalloff</desc>
        </field>
        <field>            <name>camShakeFreq</name>
            <desc>Point3F camShakeFreq</desc>
        </field>
        <field>            <name>camShakeRadius</name>
            <desc>float camShakeRadius</desc>
        </field>
        <field>            <name>Debris</name>
            <desc>DebrisData Debris</desc>
        </field>
        <field>            <name>debrisNum</name>
            <desc>int debrisNum</desc>
        </field>
        <field>            <name>debrisNumVariance</name>
            <desc>int debrisNumVariance</desc>
        </field>
        <field>            <name>debrisPhiMax</name>
            <desc>float debrisPhiMax</desc>
        </field>
        <field>            <name>debrisPhiMin</name>
            <desc>float debrisPhiMin</desc>
        </field>
        <field>            <name>debrisThetaMax</name>
            <desc>float debrisThetaMax</desc>
        </field>
        <field>            <name>debrisThetaMin</name>
            <desc>float debrisThetaMin</desc>
        </field>
        <field>            <name>debrisVelocity</name>
            <desc>float debrisVelocity</desc>
        </field>
        <field>            <name>debrisVelocityVariance</name>
            <desc>float debrisVelocityVariance</desc>
        </field>
        <field>            <name>delayMS</name>
            <desc>int delayMS</desc>
        </field>
        <field>            <name>delayVariance</name>
            <desc>int delayVariance</desc>
        </field>
        <field>            <name>emitter</name>
            <desc>ParticleEmitterData emitter</desc>
        </field>
        <field>            <name>explosionScale</name>
            <desc>Point3F explosionScale</desc>
        </field>
        <field>            <name>explosionShape</name>
            <desc>filename explosionShape</desc>
        </field>
        <field>            <name>faceViewer</name>
            <desc>bool faceViewer</desc>
        </field>
        <field>            <name>lifetimeMS</name>
            <desc>int lifetimeMS</desc>
        </field>
        <field>            <name>lifetimeVariance</name>
            <desc>int lifetimeVariance</desc>
        </field>
        <field>            <name>lightEndColor</name>
            <desc>ColorF lightEndColor</desc>
        </field>
        <field>            <name>lightEndRadius</name>
            <desc>float lightEndRadius</desc>
        </field>
        <field>            <name>lightStartColor</name>
            <desc>ColorF lightStartColor</desc>
        </field>
        <field>            <name>lightStartRadius</name>
            <desc>float lightStartRadius</desc>
        </field>
        <field>            <name>offset</name>
            <desc>float offset</desc>
        </field>
        <field>            <name>particleDensity</name>
            <desc>int particleDensity</desc>
        </field>
        <field>            <name>particleEmitter</name>
            <desc>ParticleEmitterData particleEmitter</desc>
        </field>
        <field>            <name>particleRadius</name>
            <desc>float particleRadius</desc>
        </field>
        <field>            <name>playSpeed</name>
            <desc>float playSpeed</desc>
        </field>
        <field>            <name>shakeCamera</name>
            <desc>bool shakeCamera</desc>
        </field>
        <field>            <name>sizes</name>
            <desc>Point3F sizes</desc>
        </field>
        <field>            <name>soundProfile</name>
            <desc>SFXProfile soundProfile</desc>
        </field>
        <field>            <name>subExplosion</name>
            <desc>ExplosionData subExplosion</desc>
        </field>
        <field>            <name>times</name>
            <desc>float times</desc>
        </field>
    </class>
    <class>        <name>FileChunkEvent</name>
    </class>
    <class>        <name>FileDownloadRequestEvent</name>
    </class>
    <class>        <name>FileObject</name>
        <base>SimObject</base>
        <method>            <name>close</name>
            <desc>Close the file.</desc>
        </method>
        <method>            <name>isEOF</name>
            <desc>Are we at the end of the file?</desc>
        </method>
        <method>            <name>openForAppend</name>
            <args>string filename</args>
        </method>
        <method>            <name>openForRead</name>
            <args>string filename</args>
        </method>
        <method>            <name>openForWrite</name>
            <args>string filename</args>
        </method>
        <method>            <name>readLine</name>
            <desc>Read a line from the file.</desc>
        </method>
        <method>            <name>writeLine</name>
            <args>string text</args>
            <desc>Write a line to the file, if it was opened for writing.</desc>
        </method>
    </class>
    <class>        <name>FlyingVehicle</name>
        <base>Vehicle</base>
        <method>            <name>useCreateHeight</name>
            <args>bool enabled</args>
            <desc>Should the vehicle temporarily use the create height specified in the datablock? This can help avoid problems with spawning.</desc>
        </method>
    </class>
    <class>        <name>FlyingVehicleData</name>
        <base>VehicleData</base>
        <field>            <name>autoAngularForce</name>
            <desc>float autoAngularForce</desc>
        </field>
        <field>            <name>autoInputDamping</name>
            <desc>float autoInputDamping</desc>
        </field>
        <field>            <name>autoLinearForce</name>
            <desc>float autoLinearForce</desc>
        </field>
        <field>            <name>backwardJetEmitter</name>
            <desc>ParticleEmitterData backwardJetEmitter</desc>
        </field>
        <field>            <name>createHoverHeight</name>
            <desc>float createHoverHeight</desc>
        </field>
        <field>            <name>downJetEmitter</name>
            <desc>ParticleEmitterData downJetEmitter</desc>
        </field>
        <field>            <name>engineSound</name>
            <desc>SFXProfile engineSound</desc>
        </field>
        <field>            <name>forwardJetEmitter</name>
            <desc>ParticleEmitterData forwardJetEmitter</desc>
        </field>
        <field>            <name>horizontalSurfaceForce</name>
            <desc>float horizontalSurfaceForce</desc>
        </field>
        <field>            <name>hoverHeight</name>
            <desc>float hoverHeight</desc>
        </field>
        <field>            <name>jetSound</name>
            <desc>SFXProfile jetSound</desc>
        </field>
        <field>            <name>maneuveringForce</name>
            <desc>float maneuveringForce</desc>
        </field>
        <field>            <name>maxAutoSpeed</name>
            <desc>float maxAutoSpeed</desc>
        </field>
        <field>            <name>minTrailSpeed</name>
            <desc>float minTrailSpeed</desc>
        </field>
        <field>            <name>rollForce</name>
            <desc>float rollForce</desc>
        </field>
        <field>            <name>rotationalDrag</name>
            <desc>float rotationalDrag</desc>
        </field>
        <field>            <name>steeringForce</name>
            <desc>float steeringForce</desc>
        </field>
        <field>            <name>steeringRollForce</name>
            <desc>float steeringRollForce</desc>
        </field>
        <field>            <name>trailEmitter</name>
            <desc>ParticleEmitterData trailEmitter</desc>
        </field>
        <field>            <name>verticalSurfaceForce</name>
            <desc>float verticalSurfaceForce</desc>
        </field>
        <field>            <name>vertThrustMultiple</name>
            <desc>float vertThrustMultiple</desc>
        </field>
    </class>
    <class>        <name>fxFoliageReplicator</name>
        <base>SceneObject</base>
        <field>            <name>AllowedTerrainSlope</name>
            <desc>int AllowedTerrainSlope</desc>
        </field>
        <field>            <name>AllowOnInteriors</name>
            <desc>bool AllowOnInteriors</desc>
        </field>
        <field>            <name>AllowOnStatics</name>
            <desc>bool AllowOnStatics</desc>
        </field>
        <field>            <name>AllowOnTerrain</name>
            <desc>bool AllowOnTerrain</desc>
        </field>
        <field>            <name>AllowOnWater</name>
            <desc>bool AllowOnWater</desc>
        </field>
        <field>            <name>AllowWaterSurface</name>
            <desc>bool AllowWaterSurface</desc>
        </field>
        <field>            <name>AlphaCutoff</name>
            <desc>float AlphaCutoff</desc>
        </field>
        <field>            <name>CullResolution</name>
            <desc>int CullResolution</desc>
        </field>
        <field>            <name>DebugBoxHeight</name>
            <desc>float DebugBoxHeight</desc>
        </field>
        <field>            <name>FadeInRegion</name>
            <desc>float FadeInRegion</desc>
        </field>
        <field>            <name>FadeOutRegion</name>
            <desc>float FadeOutRegion</desc>
        </field>
        <field>            <name>FixAspectRatio</name>
            <desc>bool FixAspectRatio</desc>
        </field>
        <field>            <name>FixSizeToMax</name>
            <desc>bool FixSizeToMax</desc>
        </field>
        <field>            <name>FoliageCount</name>
            <desc>int FoliageCount</desc>
        </field>
        <field>            <name>FoliageFile</name>
            <desc>filename FoliageFile</desc>
        </field>
        <field>            <name>FoliageRetries</name>
            <desc>int FoliageRetries</desc>
        </field>
        <field>            <name>GroundAlpha</name>
            <desc>float GroundAlpha</desc>
        </field>
        <field>            <name>HideFoliage</name>
            <desc>bool HideFoliage</desc>
        </field>
        <field>            <name>InnerRadiusX</name>
            <desc>int InnerRadiusX</desc>
        </field>
        <field>            <name>InnerRadiusY</name>
            <desc>int InnerRadiusY</desc>
        </field>
        <field>            <name>LightOn</name>
            <desc>bool LightOn</desc>
        </field>
        <field>            <name>LightSync</name>
            <desc>bool LightSync</desc>
        </field>
        <field>            <name>LightTime</name>
            <desc>float LightTime</desc>
        </field>
        <field>            <name>MaxHeight</name>
            <desc>float MaxHeight</desc>
        </field>
        <field>            <name>MaxLuminance</name>
            <desc>float MaxLuminance</desc>
        </field>
        <field>            <name>MaxSwayTime</name>
            <desc>float MaxSwayTime</desc>
        </field>
        <field>            <name>MaxWidth</name>
            <desc>float MaxWidth</desc>
        </field>
        <field>            <name>MinHeight</name>
            <desc>float MinHeight</desc>
        </field>
        <field>            <name>MinLuminance</name>
            <desc>float MinLuminance</desc>
        </field>
        <field>            <name>MinSwayTime</name>
            <desc>float MinSwayTime</desc>
        </field>
        <field>            <name>MinWidth</name>
            <desc>float MinWidth</desc>
        </field>
        <field>            <name>OffsetZ</name>
            <desc>float OffsetZ</desc>
        </field>
        <field>            <name>OuterRadiusX</name>
            <desc>int OuterRadiusX</desc>
        </field>
        <field>            <name>OuterRadiusY</name>
            <desc>int OuterRadiusY</desc>
        </field>
        <field>            <name>PlacementAreaHeight</name>
            <desc>int PlacementAreaHeight</desc>
        </field>
        <field>            <name>PlacementColour</name>
            <desc>ColorF PlacementColour</desc>
        </field>
        <field>            <name>RandomFlip</name>
            <desc>bool RandomFlip</desc>
        </field>
        <field>            <name>Seed</name>
            <desc>int Seed</desc>
        </field>
        <field>            <name>ShowPlacementArea</name>
            <desc>bool ShowPlacementArea</desc>
        </field>
        <field>            <name>SwayMagFront</name>
            <desc>float SwayMagFront</desc>
        </field>
        <field>            <name>SwayMagSide</name>
            <desc>float SwayMagSide</desc>
        </field>
        <field>            <name>SwayOn</name>
            <desc>bool SwayOn</desc>
        </field>
        <field>            <name>SwaySync</name>
            <desc>bool SwaySync</desc>
        </field>
        <field>            <name>UseCulling</name>
            <desc>bool UseCulling</desc>
        </field>
        <field>            <name>UseDebugInfo</name>
            <desc>bool UseDebugInfo</desc>
        </field>
        <field>            <name>ViewClosest</name>
            <desc>float ViewClosest</desc>
        </field>
        <field>            <name>ViewDistance</name>
            <desc>float ViewDistance</desc>
        </field>
    </class>
    <class>        <name>fxLight</name>
        <base>GameBase</base>
        <method>            <name>reset</name>
            <desc>Reset the light.</desc>
        </method>
        <method>            <name>setEnable</name>
            <args>bool enabled</args>
        </method>
        <field>            <name>Enable</name>
            <desc>bool Enable</desc>
        </field>
        <field>            <name>IconSize</name>
            <desc>float IconSize</desc>
        </field>
    </class>
    <class>        <name>fxLightData</name>
        <base>GameBaseData</base>
        <field>            <name>AnimBrightness</name>
            <desc>bool AnimBrightness</desc>
        </field>
        <field>            <name>AnimColour</name>
            <desc>bool AnimColour</desc>
        </field>
        <field>            <name>AnimOffsets</name>
            <desc>bool AnimOffsets</desc>
        </field>
        <field>            <name>AnimRadius</name>
            <desc>bool AnimRadius</desc>
        </field>
        <field>            <name>AnimRotation</name>
            <desc>bool AnimRotation</desc>
        </field>
        <field>            <name>BlendMode</name>
            <desc>int BlendMode</desc>
        </field>
        <field>            <name>BlueKeys</name>
            <desc>string BlueKeys</desc>
        </field>
        <field>            <name>Brightness</name>
            <desc>float Brightness</desc>
        </field>
        <field>            <name>BrightnessKeys</name>
            <desc>string BrightnessKeys</desc>
        </field>
        <field>            <name>BrightnessTime</name>
            <desc>float BrightnessTime</desc>
        </field>
        <field>            <name>Colour</name>
            <desc>ColorF Colour</desc>
        </field>
        <field>            <name>ColourTime</name>
            <desc>float ColourTime</desc>
        </field>
        <field>            <name>ConstantSize</name>
            <desc>float ConstantSize</desc>
        </field>
        <field>            <name>ConstantSizeOn</name>
            <desc>bool ConstantSizeOn</desc>
        </field>
        <field>            <name>EndOffset</name>
            <desc>Point3F EndOffset</desc>
        </field>
        <field>            <name>FadeTime</name>
            <desc>float FadeTime</desc>
        </field>
        <field>            <name>FarDistance</name>
            <desc>float FarDistance</desc>
        </field>
        <field>            <name>FarSize</name>
            <desc>float FarSize</desc>
        </field>
        <field>            <name>FlareBitmap</name>
            <desc>filename FlareBitmap</desc>
        </field>
        <field>            <name>FlareColour</name>
            <desc>ColorF FlareColour</desc>
        </field>
        <field>            <name>FlareOn</name>
            <desc>bool FlareOn</desc>
        </field>
        <field>            <name>FlareTP</name>
            <desc>bool FlareTP</desc>
        </field>
        <field>            <name>GreenKeys</name>
            <desc>string GreenKeys</desc>
        </field>
        <field>            <name>LerpBrightness</name>
            <desc>bool LerpBrightness</desc>
        </field>
        <field>            <name>LerpColour</name>
            <desc>bool LerpColour</desc>
        </field>
        <field>            <name>LerpOffset</name>
            <desc>bool LerpOffset</desc>
        </field>
        <field>            <name>LerpRadius</name>
            <desc>bool LerpRadius</desc>
        </field>
        <field>            <name>LerpRotation</name>
            <desc>bool LerpRotation</desc>
        </field>
        <field>            <name>LightOn</name>
            <desc>bool LightOn</desc>
        </field>
        <field>            <name>LinkFlare</name>
            <desc>bool LinkFlare</desc>
        </field>
        <field>            <name>LinkFlareSize</name>
            <desc>bool LinkFlareSize</desc>
        </field>
        <field>            <name>MaxBrightness</name>
            <desc>float MaxBrightness</desc>
        </field>
        <field>            <name>MaxColour</name>
            <desc>ColorF MaxColour</desc>
        </field>
        <field>            <name>MaxRadius</name>
            <desc>float MaxRadius</desc>
        </field>
        <field>            <name>MaxRotation</name>
            <desc>float MaxRotation</desc>
        </field>
        <field>            <name>MinBrightness</name>
            <desc>float MinBrightness</desc>
        </field>
        <field>            <name>MinColour</name>
            <desc>ColorF MinColour</desc>
        </field>
        <field>            <name>MinRadius</name>
            <desc>float MinRadius</desc>
        </field>
        <field>            <name>MinRotation</name>
            <desc>float MinRotation</desc>
        </field>
        <field>            <name>NearDistance</name>
            <desc>float NearDistance</desc>
        </field>
        <field>            <name>NearSize</name>
            <desc>float NearSize</desc>
        </field>
        <field>            <name>OffsetKeys</name>
            <desc>string OffsetKeys</desc>
        </field>
        <field>            <name>OffsetTime</name>
            <desc>float OffsetTime</desc>
        </field>
        <field>            <name>Radius</name>
            <desc>float Radius</desc>
        </field>
        <field>            <name>RadiusKeys</name>
            <desc>string RadiusKeys</desc>
        </field>
        <field>            <name>RadiusTime</name>
            <desc>float RadiusTime</desc>
        </field>
        <field>            <name>RedKeys</name>
            <desc>string RedKeys</desc>
        </field>
        <field>            <name>RotationKeys</name>
            <desc>string RotationKeys</desc>
        </field>
        <field>            <name>RotationTime</name>
            <desc>float RotationTime</desc>
        </field>
        <field>            <name>SingleColourKeys</name>
            <desc>bool SingleColourKeys</desc>
        </field>
        <field>            <name>StartOffset</name>
            <desc>Point3F StartOffset</desc>
        </field>
    </class>
    <class>        <name>fxSunLight</name>
        <base>SceneObject</base>
        <method>            <name>reset</name>
        </method>
        <method>            <name>setAzimuthKeys</name>
            <args>keys</args>
        </method>
        <method>            <name>setAzimuthTime</name>
            <args>time</args>
        </method>
        <method>            <name>setBlendMode</name>
            <args>mode</args>
        </method>
        <method>            <name>setBlueKeys</name>
            <args>keys</args>
        </method>
        <method>            <name>setBrightnessKeys</name>
            <args>keys</args>
        </method>
        <method>            <name>setBrightnessTime</name>
            <args>time</args>
        </method>
        <method>            <name>setColourTime</name>
            <args>time</args>
        </method>
        <method>            <name>setElevationKeys</name>
            <args>keys</args>
        </method>
        <method>            <name>setElevationTime</name>
            <args>time</args>
        </method>
        <method>            <name>setEnable</name>
            <args>status</args>
        </method>
        <method>            <name>setFadeTime</name>
            <args>time</args>
        </method>
        <method>            <name>setFlareBitmaps</name>
            <args>local, remote</args>
        </method>
        <method>            <name>setFlareBrightness</name>
            <args>brightness</args>
        </method>
        <method>            <name>setFlareColour</name>
            <args>r,g,b</args>
        </method>
        <method>            <name>setFlareSize</name>
            <args>size</args>
        </method>
        <method>            <name>setFlareTP</name>
            <args>status</args>
        </method>
        <method>            <name>setGreenKeys</name>
            <args>keys</args>
        </method>
        <method>            <name>setLerpAzimuth</name>
            <args>status</args>
        </method>
        <method>            <name>setLerpBrightness</name>
            <args>status</args>
        </method>
        <method>            <name>setLerpColour</name>
            <args>status</args>
        </method>
        <method>            <name>setLerpElevation</name>
            <args>status</args>
        </method>
        <method>            <name>setLerpRotation</name>
            <args>status</args>
        </method>
        <method>            <name>setLerpSize</name>
            <args>status</args>
        </method>
        <method>            <name>setLinkFlareSize</name>
            <args>status</args>
        </method>
        <method>            <name>setLocalScale</name>
            <args>size</args>
        </method>
        <method>            <name>setMaxAzimuth</name>
            <args>azimuth</args>
        </method>
        <method>            <name>setMaxBrightness</name>
            <args>brightness</args>
        </method>
        <method>            <name>setMaxColour</name>
            <args>r,g,b</args>
        </method>
        <method>            <name>setMaxElevation</name>
            <args>elevation</args>
        </method>
        <method>            <name>setMaxRotation</name>
            <args>rotation</args>
        </method>
        <method>            <name>setMaxSize</name>
            <args>size</args>
        </method>
        <method>            <name>setMinAzimuth</name>
            <args>azimuth</args>
        </method>
        <method>            <name>setMinBrightness</name>
            <args>brightness</args>
        </method>
        <method>            <name>setMinColour</name>
            <args>r,g,b</args>
        </method>
        <method>            <name>setMinElevation</name>
            <args>elevation</args>
        </method>
        <method>            <name>setMinRotation</name>
            <args>rotation</args>
        </method>
        <method>            <name>setMinSize</name>
            <args>size</args>
        </method>
        <method>            <name>setRedKeys</name>
            <args>keys</args>
        </method>
        <method>            <name>setRotationKeys</name>
            <args>keys</args>
        </method>
        <method>            <name>setRotationTime</name>
            <args>time</args>
        </method>
        <method>            <name>setSingleColourKeys</name>
            <args>status</args>
        </method>
        <method>            <name>setSizeKeys</name>
            <args>keys</args>
        </method>
        <method>            <name>setSizeTime</name>
            <args>time</args>
        </method>
        <method>            <name>setSunAzimuth</name>
            <args>azimuth</args>
        </method>
        <method>            <name>setSunElevation</name>
            <args>elevation</args>
        </method>
        <method>            <name>setUseAzimuth</name>
            <args>status</args>
        </method>
        <method>            <name>setUseBrightness</name>
            <args>status</args>
        </method>
        <method>            <name>setUseColour</name>
            <args>status</args>
        </method>
        <method>            <name>setUseElevation</name>
            <args>status</args>
        </method>
        <method>            <name>setUseRotation</name>
            <args>status</args>
        </method>
        <method>            <name>setUseSize</name>
            <args>status</args>
        </method>
        <field>            <name>AnimAzimuth</name>
            <desc>bool AnimAzimuth</desc>
        </field>
        <field>            <name>AnimBrightness</name>
            <desc>bool AnimBrightness</desc>
        </field>
        <field>            <name>AnimColour</name>
            <desc>bool AnimColour</desc>
        </field>
        <field>            <name>AnimElevation</name>
            <desc>bool AnimElevation</desc>
        </field>
        <field>            <name>AnimRotation</name>
            <desc>bool AnimRotation</desc>
        </field>
        <field>            <name>AnimSize</name>
            <desc>bool AnimSize</desc>
        </field>
        <field>            <name>AzimuthKeys</name>
            <desc>string AzimuthKeys</desc>
        </field>
        <field>            <name>AzimuthTime</name>
            <desc>float AzimuthTime</desc>
        </field>
        <field>            <name>BlendMode</name>
            <desc>int BlendMode</desc>
        </field>
        <field>            <name>BlueKeys</name>
            <desc>string BlueKeys</desc>
        </field>
        <field>            <name>Brightness</name>
            <desc>float Brightness</desc>
        </field>
        <field>            <name>BrightnessKeys</name>
            <desc>string BrightnessKeys</desc>
        </field>
        <field>            <name>BrightnessTime</name>
            <desc>float BrightnessTime</desc>
        </field>
        <field>            <name>Colour</name>
            <desc>ColorF Colour</desc>
        </field>
        <field>            <name>ColourTime</name>
            <desc>float ColourTime</desc>
        </field>
        <field>            <name>ElevationKeys</name>
            <desc>string ElevationKeys</desc>
        </field>
        <field>            <name>ElevationTime</name>
            <desc>float ElevationTime</desc>
        </field>
        <field>            <name>Enable</name>
            <desc>bool Enable</desc>
        </field>
        <field>            <name>FadeTime</name>
            <desc>float FadeTime</desc>
        </field>
        <field>            <name>FlareSize</name>
            <desc>float FlareSize</desc>
        </field>
        <field>            <name>FlareTP</name>
            <desc>bool FlareTP</desc>
        </field>
        <field>            <name>GreenKeys</name>
            <desc>string GreenKeys</desc>
        </field>
        <field>            <name>LerpAzimuth</name>
            <desc>bool LerpAzimuth</desc>
        </field>
        <field>            <name>LerpBrightness</name>
            <desc>bool LerpBrightness</desc>
        </field>
        <field>            <name>LerpColour</name>
            <desc>bool LerpColour</desc>
        </field>
        <field>            <name>LerpElevation</name>
            <desc>bool LerpElevation</desc>
        </field>
        <field>            <name>LerpRotation</name>
            <desc>bool LerpRotation</desc>
        </field>
        <field>            <name>LerpSize</name>
            <desc>bool LerpSize</desc>
        </field>
        <field>            <name>LinkFlareSize</name>
            <desc>bool LinkFlareSize</desc>
        </field>
        <field>            <name>LocalFlareBitmap</name>
            <desc>filename LocalFlareBitmap</desc>
        </field>
        <field>            <name>LocalScale</name>
            <desc>float LocalScale</desc>
        </field>
        <field>            <name>LockToRealSun</name>
            <desc>bool LockToRealSun</desc>
        </field>
        <field>            <name>MaxAzimuth</name>
            <desc>float MaxAzimuth</desc>
        </field>
        <field>            <name>MaxBrightness</name>
            <desc>float MaxBrightness</desc>
        </field>
        <field>            <name>MaxColour</name>
            <desc>ColorF MaxColour</desc>
        </field>
        <field>            <name>MaxElevation</name>
            <desc>float MaxElevation</desc>
        </field>
        <field>            <name>MaxRotation</name>
            <desc>float MaxRotation</desc>
        </field>
        <field>            <name>MaxSize</name>
            <desc>float MaxSize</desc>
        </field>
        <field>            <name>MinAzimuth</name>
            <desc>float MinAzimuth</desc>
        </field>
        <field>            <name>MinBrightness</name>
            <desc>float MinBrightness</desc>
        </field>
        <field>            <name>MinColour</name>
            <desc>ColorF MinColour</desc>
        </field>
        <field>            <name>MinElevation</name>
            <desc>float MinElevation</desc>
        </field>
        <field>            <name>MinRotation</name>
            <desc>float MinRotation</desc>
        </field>
        <field>            <name>minSize</name>
            <desc>float minSize</desc>
        </field>
        <field>            <name>RedKeys</name>
            <desc>string RedKeys</desc>
        </field>
        <field>            <name>RemoteFlareBitmap</name>
            <desc>filename RemoteFlareBitmap</desc>
        </field>
        <field>            <name>RotationKeys</name>
            <desc>string RotationKeys</desc>
        </field>
        <field>            <name>RotationTime</name>
            <desc>float RotationTime</desc>
        </field>
        <field>            <name>SingleColourKeys</name>
            <desc>bool SingleColourKeys</desc>
        </field>
        <field>            <name>SizeKeys</name>
            <desc>string SizeKeys</desc>
        </field>
        <field>            <name>SizeTime</name>
            <desc>float SizeTime</desc>
        </field>
        <field>            <name>SunAzimuth</name>
            <desc>float SunAzimuth</desc>
        </field>
        <field>            <name>SunElevation</name>
            <desc>float SunElevation</desc>
        </field>
    </class>
    <class>        <name>GameBase</name>
        <base>SceneObject</base>
        <method>            <name>getDataBlock</name>
            <desc>Return the datablock this GameBase is using.</desc>
        </method>
        <method>            <name>setDataBlock</name>
            <args>DataBlock db</args>
            <desc>Assign this GameBase to use the specified datablock.</desc>
        </method>
        <field>            <name>dataBlock</name>
            <desc>GameBaseData dataBlock</desc>
        </field>
        <field>            <name>nameTag</name>
            <desc>caseString nameTag</desc>
        </field>
    </class>
    <class>        <name>GameBaseData</name>
        <base>SimDataBlock</base>
        <field>            <name>category</name>
            <desc>caseString category</desc>
        </field>
        <field>            <name>className</name>
            <desc>string className</desc>
        </field>
    </class>
    <class>        <name>GameConnection</name>
        <base>NetConnection</base>
        <method>            <name>activateGhosting</name>
        </method>
        <method>            <name>chaseCam</name>
            <args>int size</args>
        </method>
        <method>            <name>clearCameraObject</name>
        </method>
        <method>            <name>delete</name>
            <args>string reason=NULL</args>
            <desc>Disconnect a client; reason is sent as part of the disconnect packet.</desc>
        </method>
        <method>            <name>getCameraObject</name>
        </method>
        <method>            <name>getControlCameraFov</name>
        </method>
        <method>            <name>getControlObject</name>
        </method>
        <method>            <name>getServerConnection</name>
            <desc>Get the server connection if any.</desc>
        </method>
        <method>            <name>isAIControlled</name>
        </method>
        <method>            <name>isDemoPlaying</name>
        </method>
        <method>            <name>isDemoRecording</name>
        </method>
        <method>            <name>isFirstPerson</name>
            <desc>True if this connection is in first person mode.</desc>
        </method>
        <method>            <name>listClassIDs</name>
            <desc>List all of the classes that this connection knows about, and what their IDs are. Useful for debugging network problems.</desc>
        </method>
        <method>            <name>play2D</name>
            <args>SFXProfile ap</args>
        </method>
        <method>            <name>play3D</name>
            <args>SFXProfile ap, Transform pos</args>
        </method>
        <method>            <name>playDemo</name>
            <args>string demoFileName</args>
            <desc>plays a previously recorded demo.</desc>
        </method>
        <method>            <name>resetGhosting</name>
        </method>
        <method>            <name>setBlackOut</name>
            <args>bool doFade, int timeMS</args>
        </method>
        <method>            <name>setCameraObject</name>
        </method>
        <method>            <name>setConnectArgs</name>
        </method>
        <method>            <name>setControlCameraFov</name>
            <args>int newFOV</args>
            <desc>Set new FOV in degrees.</desc>
        </method>
        <method>            <name>setControlObject</name>
            <args>ShapeBase object</args>
        </method>
        <method>            <name>setFirstPerson</name>
            <args>bool firstPerson</args>
            <desc>Sets this connection into or out of first person mode.</desc>
        </method>
        <method>            <name>setJoinPassword</name>
        </method>
        <method>            <name>setMissionCRC</name>
            <args>int CRC</args>
        </method>
        <method>            <name>startRecording</name>
            <args>string fileName</args>
            <desc>records the network connection to a demo file.</desc>
        </method>
        <method>            <name>stopRecording</name>
            <desc>stops the demo recording.</desc>
        </method>
        <method>            <name>transmitDataBlocks</name>
            <args>int sequence</args>
        </method>
    </class>
    <class>        <name>GameTSCtrl</name>
        <base>GuiTSCtrl</base>
    </class>
    <class>        <name>GammaBuffer</name>
        <base>SimObject</base>
        <field>            <name>bitmap</name>
            <desc>filename bitmap</desc>
        </field>
        <field>            <name>shader</name>
            <desc>string shader</desc>
        </field>
    </class>
    <class>        <name>GFXCardProfiler</name>
        <method>            <name>getCard</name>
            <desc>- Returns the card name (GeforceFX 5950 Ultra).</desc>
        </method>
        <method>            <name>getRenderer</name>
            <desc>- Returns the renderer name (D3D9, for instance).</desc>
        </method>
        <method>            <name>getVendor</name>
            <desc>- Returns the vendor name (nVidia, ATI).</desc>
        </method>
        <method>            <name>getVersion</name>
            <desc>- Returns the driver version (59.72).</desc>
        </method>
        <method>            <name>setCapability</name>
            <args>name, true/false</args>
            <desc>- Set a specific card capability.</desc>
        </method>
    </class>
    <class>        <name>GhostAlwaysObjectEvent</name>
    </class>
    <class>        <name>GlowBuffer</name>
        <base>SimObject</base>
        <field>            <name>kernel</name>
            <desc>Point4F kernel</desc>
        </field>
        <field>            <name>maxGlowPasses</name>
            <desc>int maxGlowPasses</desc>
        </field>
        <field>            <name>pixelOffsets</name>
            <desc>Point4F pixelOffsets</desc>
        </field>
        <field>            <name>shader</name>
            <desc>string shader</desc>
        </field>
    </class>
    <class>        <name>GuiArrayCtrl</name>
        <base>GuiControl</base>
    </class>
    <class>        <name>GuiAutoScrollCtrl</name>
        <base>GuiTickCtrl</base>
        <field>            <name>childBorder</name>
            <desc>int childBorder</desc>
        </field>
        <field>            <name>resetDelay</name>
            <desc>float resetDelay</desc>
        </field>
        <field>            <name>scrollInterval</name>
            <desc>float scrollInterval</desc>
        </field>
        <field>            <name>startDelay</name>
            <desc>float startDelay</desc>
        </field>
        <field>            <name>tickCallback</name>
            <desc>bool tickCallback</desc>
        </field>
    </class>
    <class>        <name>GuiAviBitmapCtrl</name>
        <base>GuiControl</base>
        <field>            <name>done</name>
            <desc>bool done</desc>
        </field>
    </class>
    <class>        <name>GuiBackgroundCtrl</name>
        <base>GuiControl</base>
    </class>
    <class>        <name>GuiBarCtrl</name>
        <base>GuiControl</base>
        <field>            <name>direction</name>
            <desc>enumval direction</desc>
        </field>
        <field>            <name>endColor</name>
            <desc>ColorI endColor</desc>
        </field>
        <field>            <name>startColor</name>
            <desc>ColorI startColor</desc>
        </field>
        <field>            <name>texture</name>
            <desc>filename texture</desc>
        </field>
        <field>            <name>value</name>
            <desc>float value</desc>
        </field>
    </class>
    <class>        <name>GuiBitmapAnimation</name>
        <base>GuiControl</base>
        <field>            <name>animationFrameDelay</name>
            <desc>int animationFrameDelay</desc>
        </field>
        <field>            <name>boundsCorrect</name>
            <desc>bool boundsCorrect</desc>
        </field>
    </class>
    <class>        <name>GuiBitmapBorderCtrl</name>
        <base>GuiControl</base>
    </class>
    <class>        <name>GuiBitmapButtonCtrl</name>
        <base>GuiButtonCtrl</base>
        <method>            <name>setBitmap</name>
            <args>filepath name</args>
        </method>
        <field>            <name>bitmap</name>
            <desc>filename bitmap</desc>
        </field>
    </class>
    <class>        <name>GuiBitmapButtonTextCtrl</name>
        <base>GuiBitmapButtonCtrl</base>
    </class>
    <class>        <name>GuiBitmapCtrl</name>
        <base>GuiControl</base>
        <method>            <name>setBitmap</name>
            <args>string filename, bool resize=false</args>
            <desc>Set the bitmap displayed in the control. Note that it is limited in size, to 256x256.</desc>
        </method>
        <method>            <name>setValue</name>
            <args>int xAxis, int yAxis</args>
            <desc>Set the offset of the bitmap.</desc>
        </method>
        <field>            <name>bitmap</name>
            <desc>filename bitmap</desc>
        </field>
        <field>            <name>onMouseUp</name>
            <desc>string onMouseUp</desc>
        </field>
        <field>            <name>wrap</name>
            <desc>bool wrap</desc>
        </field>
    </class>
    <class>        <name>GuiBorderButtonCtrl</name>
        <base>GuiButtonBaseCtrl</base>
    </class>
    <class>        <name>GuiBubbleTextCtrl</name>
        <base>GuiTextCtrl</base>
    </class>
    <class>        <name>GuiButtonBaseCtrl</name>
        <base>GuiControl</base>
        <method>            <name>getText</name>
            <desc>- returns the text of the button.</desc>
        </method>
        <method>            <name>performClick</name>
            <desc>- simulates a button click from script.</desc>
        </method>
        <method>            <name>setText</name>
            <args>string text</args>
            <desc>- sets the text of the button to the string.</desc>
        </method>
        <method>            <name>setTextID</name>
            <args>string id</args>
            <desc>- sets the text of the button to the localized string.</desc>
        </method>
        <field>            <name>buttonType</name>
            <desc>enumval buttonType</desc>
        </field>
        <field>            <name>groupNum</name>
            <desc>int groupNum</desc>
        </field>
        <field>            <name>text</name>
            <desc>caseString text</desc>
        </field>
        <field>            <name>textID</name>
            <desc>string textID</desc>
        </field>
        <field>            <name>useMouseEvents</name>
            <desc>bool useMouseEvents</desc>
        </field>
    </class>
    <class>        <name>GuiButtonCtrl</name>
        <base>GuiButtonBaseCtrl</base>
    </class>
    <class>        <name>GuiCanvas</name>
        <base>GuiControl</base>
        <method>            <name>cursorOff</name>
        </method>
        <method>            <name>cursorOn</name>
        </method>
        <method>            <name>getContent</name>
            <desc>Get the GuiControl which is being used as the content.</desc>
        </method>
        <method>            <name>getCursorPos</name>
            <desc>Get the current position of the cursor.</desc>
        </method>
        <method>            <name>hideCursor</name>
        </method>
        <method>            <name>isCursorOn</name>
        </method>
        <method>            <name>popDialog</name>
            <args>GuiControl ctrl=NULL</args>
        </method>
        <method>            <name>popLayer</name>
            <args>int layer</args>
        </method>
        <method>            <name>pushDialog</name>
            <args>GuiControl ctrl, int layer</args>
        </method>
        <method>            <name>renderFront</name>
            <args>bool enable</args>
        </method>
        <method>            <name>repaint</name>
            <desc>Force canvas to redraw.</desc>
        </method>
        <method>            <name>reset</name>
            <desc>Reset the update regions for the canvas.</desc>
        </method>
        <method>            <name>setContent</name>
            <args>GuiControl ctrl</args>
            <desc>Set the content of the canvas.</desc>
        </method>
        <method>            <name>setCursor</name>
            <args>bool visible</args>
        </method>
        <method>            <name>setCursorPos</name>
            <args>Point2I pos</args>
        </method>
        <method>            <name>setDefaultFirstResponder</name>
        </method>
        <method>            <name>showCursor</name>
        </method>
    </class>
    <class>        <name>GuiCheckBoxCtrl</name>
        <base>GuiButtonBaseCtrl</base>
    </class>
    <class>        <name>GuiChunkedBitmapCtrl</name>
        <base>GuiControl</base>
        <method>            <name>setBitmap</name>
            <args>string filename</args>
            <desc>Set the bitmap contained in this control.</desc>
        </method>
        <field>            <name>bitmap</name>
            <desc>filename bitmap</desc>
        </field>
        <field>            <name>tile</name>
            <desc>bool tile</desc>
        </field>
        <field>            <name>useVariable</name>
            <desc>bool useVariable</desc>
        </field>
    </class>
    <class>        <name>GuiClockHud</name>
        <base>GuiControl</base>
        <method>            <name>getTime</name>
            <desc>Returns current time in secs.</desc>
        </method>
        <method>            <name>setTime</name>
            <args>time in sec</args>
            <desc>Sets the current base time for the clock</desc>
        </method>
        <field>            <name>fillColor</name>
            <desc>ColorF fillColor</desc>
        </field>
        <field>            <name>frameColor</name>
            <desc>ColorF frameColor</desc>
        </field>
        <field>            <name>showFill</name>
            <desc>bool showFill</desc>
        </field>
        <field>            <name>showFrame</name>
            <desc>bool showFrame</desc>
        </field>
        <field>            <name>textColor</name>
            <desc>ColorF textColor</desc>
        </field>
    </class>
    <class>        <name>GuiConsole</name>
        <base>GuiArrayCtrl</base>
    </class>
    <class>        <name>GuiConsoleEditCtrl</name>
        <base>GuiTextEditCtrl</base>
        <field>            <name>useSiblingScroller</name>
            <desc>bool useSiblingScroller</desc>
        </field>
    </class>
    <class>        <name>GuiConsoleTextCtrl</name>
        <base>GuiControl</base>
        <field>            <name>expression</name>
            <desc>caseString expression</desc>
        </field>
    </class>
    <class>        <name>GuiControl</name>
        <base>SimGroup</base>
        <method>            <name>getExtent</name>
            <desc>Get the width and height of the control.</desc>
        </method>
        <method>            <name>getMinExtent</name>
            <desc>Get the minimum allowed size of the control.</desc>
        </method>
        <method>            <name>getPosition</name>
        </method>
        <method>            <name>getValue</name>
        </method>
        <method>            <name>isActive</name>
        </method>
        <method>            <name>isAwake</name>
        </method>
        <method>            <name>isVisible</name>
        </method>
        <method>            <name>makeFirstResponder</name>
            <args>bool isFirst</args>
        </method>
        <method>            <name>resize</name>
            <args>int x, int y, int w, int h</args>
        </method>
        <method>            <name>setActive</name>
            <args>bool active</args>
        </method>
        <method>            <name>setProfile</name>
            <args>GuiControlProfile p</args>
        </method>
        <method>            <name>setValue</name>
            <args>string value</args>
        </method>
        <method>            <name>setVisible</name>
            <args>bool visible</args>
        </method>
        <field>            <name>Accelerator</name>
            <desc>string Accelerator</desc>
        </field>
        <field>            <name>AltCommand</name>
            <desc>string AltCommand</desc>
        </field>
        <field>            <name>Command</name>
            <desc>string Command</desc>
        </field>
        <field>            <name>eventControl</name>
            <desc>SimObjectPtr eventControl</desc>
        </field>
        <field>            <name>Extent</name>
            <desc>Point2I Extent</desc>
        </field>
        <field>            <name>HorizSizing</name>
            <desc>enumval HorizSizing</desc>
        </field>
        <field>            <name>langTableMod</name>
            <desc>string langTableMod</desc>
        </field>
        <field>            <name>MinExtent</name>
            <desc>Point2I MinExtent</desc>
        </field>
        <field>            <name>Modal</name>
            <desc>@deprecated This member is deprecated, which means that its value is always undefined.</desc>
        </field>
        <field>            <name>position</name>
            <desc>Point2I position</desc>
        </field>
        <field>            <name>Profile</name>
            <desc>GuiProfile Profile</desc>
        </field>
        <field>            <name>SetFirstResponder</name>
            <desc>@deprecated This member is deprecated, which means that its value is always undefined.</desc>
        </field>
        <field>            <name>tooltip</name>
            <desc>string tooltip</desc>
        </field>
        <field>            <name>tooltipprofile</name>
            <desc>GuiProfile tooltipprofile</desc>
        </field>
        <field>            <name>Variable</name>
            <desc>string Variable</desc>
        </field>
        <field>            <name>VertSizing</name>
            <desc>enumval VertSizing</desc>
        </field>
        <field>            <name>Visible</name>
            <desc>bool Visible</desc>
        </field>
    </class>
    <class>        <name>GuiControlArrayControl</name>
        <base>GuiControl</base>
        <field>            <name>colCount</name>
            <desc>int colCount</desc>
        </field>
        <field>            <name>colSizes</name>
            <desc>intList colSizes</desc>
        </field>
        <field>            <name>colSpacing</name>
            <desc>int colSpacing</desc>
        </field>
        <field>            <name>rowSize</name>
            <desc>int rowSize</desc>
        </field>
        <field>            <name>rowSpacing</name>
            <desc>int rowSpacing</desc>
        </field>
    </class>
    <class>        <name>GuiControlListPopUp</name>
        <base>GuiPopUpMenuCtrl</base>
    </class>
    <class>        <name>GuiControlProfile</name>
        <base>SimObject</base>
        <field>            <name>autoSizeHeight</name>
            <desc>bool autoSizeHeight</desc>
        </field>
        <field>            <name>autoSizeWidth</name>
            <desc>bool autoSizeWidth</desc>
        </field>
        <field>            <name>bevelColorHL</name>
            <desc>ColorI bevelColorHL</desc>
        </field>
        <field>            <name>bevelColorLL</name>
            <desc>ColorI bevelColorLL</desc>
        </field>
        <field>            <name>bitmap</name>
            <desc>filename bitmap</desc>
        </field>
        <field>            <name>border</name>
            <desc>int border</desc>
        </field>
        <field>            <name>borderColor</name>
            <desc>ColorI borderColor</desc>
        </field>
        <field>            <name>borderColorHL</name>
            <desc>ColorI borderColorHL</desc>
        </field>
        <field>            <name>borderColorNA</name>
            <desc>ColorI borderColorNA</desc>
        </field>
        <field>            <name>borderThickness</name>
            <desc>int borderThickness</desc>
        </field>
        <field>            <name>canKeyFocus</name>
            <desc>bool canKeyFocus</desc>
        </field>
        <field>            <name>cursorColor</name>
            <desc>ColorI cursorColor</desc>
        </field>
        <field>            <name>fillColor</name>
            <desc>ColorI fillColor</desc>
        </field>
        <field>            <name>fillColorHL</name>
            <desc>ColorI fillColorHL</desc>
        </field>
        <field>            <name>fillColorNA</name>
            <desc>ColorI fillColorNA</desc>
        </field>
        <field>            <name>fontCharset</name>
            <desc>enumval fontCharset</desc>
        </field>
        <field>            <name>fontColor</name>
            <desc>ColorI fontColor</desc>
        </field>
        <field>            <name>fontColorHL</name>
            <desc>ColorI fontColorHL</desc>
        </field>
        <field>            <name>fontColorLink</name>
            <desc>ColorI fontColorLink</desc>
        </field>
        <field>            <name>fontColorLinkHL</name>
            <desc>ColorI fontColorLinkHL</desc>
        </field>
        <field>            <name>fontColorNA</name>
            <desc>ColorI fontColorNA</desc>
        </field>
        <field>            <name>fontColors</name>
            <desc>ColorI fontColors</desc>
        </field>
        <field>            <name>fontColorSEL</name>
            <desc>ColorI fontColorSEL</desc>
        </field>
        <field>            <name>fontSize</name>
            <desc>int fontSize</desc>
        </field>
        <field>            <name>fontType</name>
            <desc>string fontType</desc>
        </field>
        <field>            <name>hitArea</name>
            <desc>intList hitArea</desc>
        </field>
        <field>            <name>iconPosition</name>
            <desc>Point2I iconPosition</desc>
        </field>
        <field>            <name>justify</name>
            <desc>enumval justify</desc>
        </field>
        <field>            <name>Modal</name>
            <desc>bool Modal</desc>
        </field>
        <field>            <name>mouseOverSelected</name>
            <desc>bool mouseOverSelected</desc>
        </field>
        <field>            <name>numbersOnly</name>
            <desc>bool numbersOnly</desc>
        </field>
        <field>            <name>opaque</name>
            <desc>bool opaque</desc>
        </field>
        <field>            <name>returnTab</name>
            <desc>bool returnTab</desc>
        </field>
        <field>            <name>rowHeight</name>
            <desc>int rowHeight</desc>
        </field>
        <field>            <name>shadow</name>
            <desc>int shadow</desc>
        </field>
        <field>            <name>soundButtonDown</name>
            <desc>SFXProfile soundButtonDown</desc>
        </field>
        <field>            <name>soundButtonOver</name>
            <desc>SFXProfile soundButtonOver</desc>
        </field>
        <field>            <name>soundOptionChanged</name>
            <desc>SFXProfile soundOptionChanged</desc>
        </field>
        <field>            <name>tab</name>
            <desc>bool tab</desc>
        </field>
        <field>            <name>textOffset</name>
            <desc>Point2I textOffset</desc>
        </field>
    </class>
    <class>        <name>GuiCrossHairHud</name>
        <base>GuiBitmapCtrl</base>
        <field>            <name>damageFillColor</name>
            <desc>ColorF damageFillColor</desc>
        </field>
        <field>            <name>damageFrameColor</name>
            <desc>ColorF damageFrameColor</desc>
        </field>
        <field>            <name>damageOffset</name>
            <desc>Point2I damageOffset</desc>
        </field>
        <field>            <name>damageRect</name>
            <desc>Point2I damageRect</desc>
        </field>
    </class>
    <class>        <name>GuiCursor</name>
        <base>SimObject</base>
        <field>            <name>bitmapName</name>
            <desc>filename bitmapName</desc>
        </field>
        <field>            <name>hotSpot</name>
            <desc>Point2I hotSpot</desc>
        </field>
        <field>            <name>renderOffset</name>
            <desc>Point2F renderOffset</desc>
        </field>
    </class>
    <class>        <name>GuiEditCtrl</name>
        <base>GuiControl</base>
        <method>            <name>addNewCtrl</name>
            <args>GuiControl ctrl</args>
        </method>
        <method>            <name>addSelection</name>
            <desc>selects a control.</desc>
        </method>
        <method>            <name>bringToFront</name>
        </method>
        <method>            <name>clearSelection</name>
            <desc>Clear selected controls list.</desc>
        </method>
        <method>            <name>deleteSelection</name>
            <desc>Delete the selected text.</desc>
        </method>
        <method>            <name>getSelected</name>
            <desc>- Gets the GUI control(s) the editor is currently selecting</desc>
        </method>
        <method>            <name>justify</name>
            <args>int mode</args>
        </method>
        <method>            <name>loadSelection</name>
            <args>string fileName</args>
        </method>
        <method>            <name>moveSelection</name>
            <args>int deltax, int deltay</args>
        </method>
        <method>            <name>pushToBack</name>
        </method>
        <method>            <name>removeSelection</name>
            <desc>deselects a control.</desc>
        </method>
        <method>            <name>saveSelection</name>
            <args>string fileName</args>
        </method>
        <method>            <name>select</name>
            <args>GuiControl ctrl</args>
        </method>
        <method>            <name>selectAll</name>
        </method>
        <method>            <name>setCurrentAddSet</name>
            <args>GuiControl ctrl</args>
        </method>
        <method>            <name>setRoot</name>
            <args>GuiControl root</args>
        </method>
        <method>            <name>toggle</name>
            <desc>Toggle activation.</desc>
        </method>
    </class>
    <class>        <name>GuiEditorRuler</name>
        <base>GuiControl</base>
        <field>            <name>refCtrl</name>
            <desc>string refCtrl</desc>
        </field>
    </class>
    <class>        <name>GuiEnergyBarCtrl</name>
        <base>GuiBarCtrl</base>
        <field>            <name>activeColor</name>
            <desc>ColorI activeColor</desc>
        </field>
        <field>            <name>inactiveColor</name>
            <desc>ColorI inactiveColor</desc>
        </field>
        <field>            <name>minActiveValue</name>
            <desc>float minActiveValue</desc>
        </field>
        <field>            <name>ultraColor</name>
            <desc>ColorI ultraColor</desc>
        </field>
    </class>
    <class>        <name>GuiFadeinBitmapCtrl</name>
        <base>GuiBitmapCtrl</base>
        <field>            <name>done</name>
            <desc>bool done</desc>
        </field>
        <field>            <name>fadeinTime</name>
            <desc>int fadeinTime</desc>
        </field>
        <field>            <name>fadeoutTime</name>
            <desc>int fadeoutTime</desc>
        </field>
        <field>            <name>waitTime</name>
            <desc>int waitTime</desc>
        </field>
    </class>
    <class>        <name>GuiFilterCtrl</name>
        <base>GuiControl</base>
        <method>            <name>getValue</name>
            <desc>Return a tuple containing all the values in the filter.</desc>
        </method>
        <method>            <name>identity</name>
            <desc>Reset the filtering.</desc>
        </method>
        <method>            <name>setValue</name>
            <args>f1, f2, ...</args>
            <desc>Reset the filter to use the specified points, spread equidistantly across the domain.</desc>
        </method>
        <field>            <name>controlPoints</name>
            <desc>int controlPoints</desc>
        </field>
        <field>            <name>filter</name>
            <desc>floatList filter</desc>
        </field>
    </class>
    <class>        <name>GuiFrameSetCtrl</name>
        <base>GuiControl</base>
        <method>            <name>addColumn</name>
        </method>
        <method>            <name>addRow</name>
        </method>
        <method>            <name>frameBorder</name>
            <args>int index, bool enable=true</args>
        </method>
        <method>            <name>frameMinExtent</name>
            <args>int index, int w, int h</args>
        </method>
        <method>            <name>frameMovable</name>
            <args>int index, bool enable=true</args>
        </method>
        <method>            <name>getColumnCount</name>
        </method>
        <method>            <name>getColumnOffset</name>
            <args>int index</args>
        </method>
        <method>            <name>getRowCount</name>
        </method>
        <method>            <name>getRowOffset</name>
            <args>int index</args>
        </method>
        <method>            <name>removeColumn</name>
        </method>
        <method>            <name>removeRow</name>
        </method>
        <method>            <name>setColumnOffset</name>
            <args>int index, int offset</args>
        </method>
        <method>            <name>setRowOffset</name>
            <args>int index, int offset</args>
        </method>
        <field>            <name>autoBalance</name>
            <desc>bool autoBalance</desc>
        </field>
        <field>            <name>borderColor</name>
            <desc>ColorI borderColor</desc>
        </field>
        <field>            <name>borderEnable</name>
            <desc>enumval borderEnable</desc>
        </field>
        <field>            <name>borderMovable</name>
            <desc>enumval borderMovable</desc>
        </field>
        <field>            <name>borderWidth</name>
            <desc>int borderWidth</desc>
        </field>
        <field>            <name>columns</name>
            <desc>intList columns</desc>
        </field>
        <field>            <name>fudgeFactor</name>
            <desc>int fudgeFactor</desc>
        </field>
        <field>            <name>rows</name>
            <desc>intList rows</desc>
        </field>
    </class>
    <class>        <name>GuiGraphCtrl</name>
        <base>GuiControl</base>
        <method>            <name>addAutoPlot</name>
            <args>int plotID, string variable, int update</args>
            <desc>Adds a data point with value variable, every update ms.</desc>
        </method>
        <method>            <name>addDatum</name>
            <args>int plotID, float v</args>
            <desc>Add a data point to the given plot.</desc>
        </method>
        <method>            <name>getDatum</name>
            <args>int plotID, int samples</args>
            <desc>Get a data point from the plot specified, samples from the start of the graph.</desc>
        </method>
        <method>            <name>matchScale</name>
            <args>int plotID, int plotID, ...</args>
            <desc>Sets the scale of all specified plots to the maximum scale among them.</desc>
        </method>
        <method>            <name>removeAutoPlot</name>
            <args>int plotID</args>
            <desc>Stops automatic pointing over set interval.</desc>
        </method>
        <method>            <name>setGraphType</name>
            <args>int plotID, string graphType</args>
            <desc>Change GraphType of plot plotID.</desc>
        </method>
    </class>
    <class>        <name>GuiHealthBarHud</name>
        <base>GuiControl</base>
        <field>            <name>damageFillColor</name>
            <desc>ColorF damageFillColor</desc>
        </field>
        <field>            <name>displayEnergy</name>
            <desc>bool displayEnergy</desc>
        </field>
        <field>            <name>fillColor</name>
            <desc>ColorF fillColor</desc>
        </field>
        <field>            <name>frameColor</name>
            <desc>ColorF frameColor</desc>
        </field>
        <field>            <name>pulseRate</name>
            <desc>int pulseRate</desc>
        </field>
        <field>            <name>pulseThreshold</name>
            <desc>float pulseThreshold</desc>
        </field>
        <field>            <name>showFill</name>
            <desc>bool showFill</desc>
        </field>
        <field>            <name>showFrame</name>
            <desc>bool showFrame</desc>
        </field>
    </class>
    <class>        <name>GuiInputCtrl</name>
        <base>GuiControl</base>
    </class>
    <class>        <name>GuiInspector</name>
        <base>GuiStackControl</base>
        <method>            <name>getInspectObject</name>
            <desc>- Returns currently inspected object</desc>
        </method>
        <method>            <name>inspect</name>
            <desc>Inspect(Object)</desc>
        </method>
        <method>            <name>setName</name>
            <args>NewObjectName</args>
        </method>
    </class>
    <class>        <name>GuiInspectorDatablockField</name>
        <base>GuiInspectorField</base>
    </class>
    <class>        <name>GuiInspectorDynamicField</name>
        <base>GuiInspectorField</base>
        <method>            <name>renameField</name>
            <args>newDynamicFieldName</args>
        </method>
    </class>
    <class>        <name>GuiInspectorDynamicGroup</name>
        <method>            <name>addDynamicField</name>
        </method>
    </class>
    <class>        <name>GuiInspectorField</name>
        <base>GuiControl</base>
        <method>            <name>apply</name>
            <args>newValue</args>
        </method>
    </class>
    <class>        <name>GuiInspectorGroup</name>
        <base>GuiControl</base>
        <field>            <name>Caption</name>
            <desc>string Caption</desc>
        </field>
    </class>
    <class>        <name>GuiInspectorTypeCheckBox</name>
        <base>GuiInspectorField</base>
    </class>
    <class>        <name>GuiInspectorTypeColor</name>
        <base>GuiInspectorField</base>
    </class>
    <class>        <name>GuiInspectorTypeColorF</name>
        <base>GuiInspectorTypeColor</base>
    </class>
    <class>        <name>GuiInspectorTypeColorI</name>
        <base>GuiInspectorTypeColor</base>
    </class>
    <class>        <name>GuiInspectorTypeEnum</name>
        <base>GuiInspectorField</base>
    </class>
    <class>        <name>GuiInspectorTypeFileName</name>
        <base>GuiInspectorField</base>
    </class>
    <class>        <name>GuiInspectorTypeGuiProfile</name>
        <base>GuiInspectorTypeEnum</base>
    </class>
    <class>        <name>GuiMenuBar</name>
        <base>GuiControl</base>
        <method>            <name>addMenu</name>
            <args>string menuText, int menuId</args>
            <desc>- adds a new menu to the menu bar.</desc>
        </method>
        <method>            <name>addMenuItem</name>
            <args>string menu, string menuItemText, int menuItemId, string accelerator = NULL, int checkGroup = -1</args>
            <desc>- adds a menu item to the specified menu.  The menu argument can be either the text of a menu or its id.</desc>
        </method>
        <method>            <name>clearMenuItems</name>
            <args>string menu</args>
            <desc>- removes all the menu items from the specified menu.</desc>
        </method>
        <method>            <name>clearMenus</name>
            <desc>- clears all the menus from the menu bar.</desc>
        </method>
        <method>            <name>removeMenu</name>
            <args>string menu</args>
            <desc>- removes the specified menu from the menu bar.</desc>
        </method>
        <method>            <name>removeMenuItem</name>
            <args>string menu, string menuItem</args>
            <desc>- removes the specified menu item from the menu.</desc>
        </method>
        <method>            <name>setMenuItemBitmap</name>
            <args>string menu, string menuItem, int bitmapIndex</args>
            <desc>- sets the specified menu item bitmap index in the bitmap array.  Setting the item's index to -1 will remove any bitmap.</desc>
        </method>
        <method>            <name>setMenuItemChecked</name>
            <args>string menu, string menuItem, bool checked</args>
            <desc>- sets the menu item bitmap to a check mark, which must be the first element in the bitmap array.  Any other menu items in the menu with the same check group become unchecked if they are checked.</desc>
        </method>
        <method>            <name>setMenuItemEnable</name>
            <args>string menu, string menuItem, bool enabled</args>
            <desc>- sets the menu item to enabled or disabled based on the enable parameter.  The specified menu and menu item can either be text or ids.</desc>
        </method>
        <method>            <name>setMenuItemText</name>
            <args>string menu, string menuItem, string newMenuItemText</args>
            <desc>- sets the text of the specified menu item to the new string.</desc>
        </method>
        <method>            <name>setMenuItemVisible</name>
            <args>string menu, string menuItem, bool isVisible</args>
            <desc>- sets the specified menu item to be either visible or not.</desc>
        </method>
        <method>            <name>setMenuText</name>
            <args>string menu, string newMenuText</args>
            <desc>- sets the text of the specified menu to the new string.</desc>
        </method>
        <method>            <name>setMenuVisible</name>
            <args>string menu, bool visible</args>
            <desc>- sets the whether or not to display the specified menu.</desc>
        </method>
    </class>
    <class>        <name>GuiMessageVectorCtrl</name>
        <base>GuiControl</base>
        <method>            <name>attach</name>
            <args>MessageVector item</args>
            <desc>Make this gui control display messages from the specified MessageVector</desc>
        </method>
        <method>            <name>detach</name>
            <desc>Stop listing messages from the MessageVector previously attached to, if any.</desc>
        </method>
        <field>            <name>allowedMatches</name>
            <desc>string allowedMatches</desc>
        </field>
        <field>            <name>lineContinuedIndex</name>
            <desc>int lineContinuedIndex</desc>
        </field>
        <field>            <name>lineSpacing</name>
            <desc>int lineSpacing</desc>
        </field>
        <field>            <name>matchColor</name>
            <desc>ColorI matchColor</desc>
        </field>
        <field>            <name>maxColorIndex</name>
            <desc>int maxColorIndex</desc>
        </field>
    </class>
    <class>        <name>GuiMLTextCtrl</name>
        <base>GuiControl</base>
        <method>            <name>addText</name>
            <args>string text, bool reformat</args>
        </method>
        <method>            <name>forceReflow</name>
            <desc>forces the text control to reflow the text after new text is added, possibly resizing the control.</desc>
        </method>
        <method>            <name>getText</name>
            <desc>Returns the text from the control, including ML.</desc>
        </method>
        <method>            <name>scrollToBottom</name>
            <desc>Scroll to the top of the text.</desc>
        </method>
        <method>            <name>scrollToTag</name>
            <args>int tagID</args>
            <desc>Scroll down to a specified tag.</desc>
        </method>
        <method>            <name>scrollToTop</name>
            <desc>Scroll to the top of the text.</desc>
        </method>
        <method>            <name>setAlpha</name>
        </method>
        <method>            <name>setCursorPosition</name>
            <args>int newPos</args>
            <desc>Offset in characters to set cursor's position to.</desc>
        </method>
        <method>            <name>setText</name>
            <args>string text</args>
            <desc>Set the text contained in the control.</desc>
        </method>
        <field>            <name>allowColorChars</name>
            <desc>bool allowColorChars</desc>
        </field>
        <field>            <name>deniedSound</name>
            <desc>SFXProfile deniedSound</desc>
        </field>
        <field>            <name>lineSpacing</name>
            <desc>int lineSpacing</desc>
        </field>
        <field>            <name>maxChars</name>
            <desc>int maxChars</desc>
        </field>
        <field>            <name>text</name>
            <desc>caseString text</desc>
        </field>
    </class>
    <class>        <name>GuiMLTextEditCtrl</name>
        <base>GuiMLTextCtrl</base>
        <field>            <name>escapeCommand</name>
            <desc>string escapeCommand</desc>
        </field>
    </class>
    <class>        <name>GuiMouseEventCtrl</name>
        <base>GuiControl</base>
        <field>            <name>lockMouse</name>
            <desc>bool lockMouse</desc>
        </field>
    </class>
    <class>        <name>GuiNoMouseCtrl</name>
        <base>GuiControl</base>
    </class>
    <class>        <name>GuiPaneControl</name>
        <base>GuiControl</base>
        <method>            <name>setCollapsed</name>
            <args>bool</args>
        </method>
        <field>            <name>barBehindText</name>
            <desc>bool barBehindText</desc>
        </field>
        <field>            <name>Caption</name>
            <desc>string Caption</desc>
        </field>
        <field>            <name>captionID</name>
            <desc>string captionID</desc>
        </field>
        <field>            <name>collapsable</name>
            <desc>bool collapsable</desc>
        </field>
    </class>
    <class>        <name>GuiPlayerView</name>
        <base>GuiTSCtrl</base>
        <method>            <name>setModel</name>
            <args> raceGender, skin </args>
        </method>
        <method>            <name>setSeq</name>
            <args> index </args>
        </method>
    </class>
    <class>        <name>GuiPopUpMenuCtrl</name>
        <base>GuiTextCtrl</base>
        <method>            <name>add</name>
            <args>string name, int idNum, int scheme=0</args>
        </method>
        <method>            <name>addScheme</name>
            <args>int id, ColorI fontColor, ColorI fontColorHL, ColorI fontColorSEL</args>
        </method>
        <method>            <name>clear</name>
            <desc>Clear the popup list.</desc>
        </method>
        <method>            <name>findText</name>
            <args>string text</args>
            <desc>Returns the position of the first entry containing the specified text.</desc>
        </method>
        <method>            <name>forceClose</name>
        </method>
        <method>            <name>forceOnAction</name>
        </method>
        <method>            <name>getSelected</name>
        </method>
        <method>            <name>getText</name>
        </method>
        <method>            <name>getTextById</name>
            <args>int id</args>
        </method>
        <method>            <name>replaceText</name>
            <args>bool doReplaceText</args>
        </method>
        <method>            <name>setEnumContent</name>
            <args>string class, string enum</args>
            <desc>This fills the popup with a classrep's field enumeration type info.

More of a helper function than anything.   If console access to the field list is added, at least for the enumerated types, then this should go away..</desc>
        </method>
        <method>            <name>setSelected</name>
            <args>int id</args>
        </method>
        <method>            <name>setText</name>
            <args>string text</args>
        </method>
        <method>            <name>size</name>
            <desc>Get the size of the menu - the number of entries in it.</desc>
        </method>
        <method>            <name>sort</name>
            <desc>Sort the list alphabetically.</desc>
        </method>
        <field>            <name>maxPopupHeight</name>
            <desc>int maxPopupHeight</desc>
        </field>
    </class>
    <class>        <name>GuiProgressCtrl</name>
        <base>GuiControl</base>
    </class>
    <class>        <name>GuiRadioCtrl</name>
        <base>GuiCheckBoxCtrl</base>
    </class>
    <class>        <name>GuiScoreCountHud</name>
        <base>GuiControl</base>
        <method>            <name>addScore</name>
            <args>score, foreColor, backColor</args>
        </method>
        <field>            <name>acceleration</name>
            <desc>float acceleration</desc>
        </field>
        <field>            <name>time</name>
            <desc>int time</desc>
        </field>
        <field>            <name>velocity</name>
            <desc>float velocity</desc>
        </field>
        <field>            <name>verticalOffset</name>
            <desc>float verticalOffset</desc>
        </field>
    </class>
    <class>        <name>GuiScrollCtrl</name>
        <base>GuiControl</base>
        <method>            <name>scrollToBottom</name>
            <desc>- scrolls the scroll control to the bottom of the child content area.</desc>
        </method>
        <method>            <name>scrollToTop</name>
            <desc>- scrolls the scroll control to the top of the child content area.</desc>
        </method>
        <field>            <name>childMargin</name>
            <desc>Point2I childMargin</desc>
        </field>
        <field>            <name>constantThumbHeight</name>
            <desc>bool constantThumbHeight</desc>
        </field>
        <field>            <name>hScrollBar</name>
            <desc>enumval hScrollBar</desc>
        </field>
        <field>            <name>vScrollBar</name>
            <desc>enumval vScrollBar</desc>
        </field>
        <field>            <name>willFirstRespond</name>
            <desc>bool willFirstRespond</desc>
        </field>
    </class>
    <class>        <name>GuiShapeNameHud</name>
        <base>GuiControl</base>
        <field>            <name>distanceFade</name>
            <desc>float distanceFade</desc>
        </field>
        <field>            <name>ellipseScreenFraction</name>
            <desc>Point2F ellipseScreenFraction</desc>
        </field>
        <field>            <name>fillColor</name>
            <desc>ColorF fillColor</desc>
        </field>
        <field>            <name>frameColor</name>
            <desc>ColorF frameColor</desc>
        </field>
        <field>            <name>fullArrowLength</name>
            <desc>float fullArrowLength</desc>
        </field>
        <field>            <name>fullArrowWidth</name>
            <desc>float fullArrowWidth</desc>
        </field>
        <field>            <name>maxArrowAlpha</name>
            <desc>float maxArrowAlpha</desc>
        </field>
        <field>            <name>maxTargetAlpha</name>
            <desc>float maxTargetAlpha</desc>
        </field>
        <field>            <name>minArrowFraction</name>
            <desc>float minArrowFraction</desc>
        </field>
        <field>            <name>showFill</name>
            <desc>bool showFill</desc>
        </field>
        <field>            <name>showFrame</name>
            <desc>bool showFrame</desc>
        </field>
        <field>            <name>textColor</name>
            <desc>ColorF textColor</desc>
        </field>
        <field>            <name>verticalOffset</name>
            <desc>float verticalOffset</desc>
        </field>
    </class>
    <class>        <name>GuiSliderCtrl</name>
        <base>GuiControl</base>
        <method>            <name>getValue</name>
            <desc>Get the position of the slider.</desc>
        </method>
        <field>            <name>range</name>
            <desc>Point2F range</desc>
        </field>
        <field>            <name>ticks</name>
            <desc>int ticks</desc>
        </field>
        <field>            <name>value</name>
            <desc>float value</desc>
        </field>
    </class>
    <class>        <name>GuiSpeedometerHud</name>
        <base>GuiBitmapCtrl</base>
        <field>            <name>center</name>
            <desc>Point2F center</desc>
        </field>
        <field>            <name>color</name>
            <desc>ColorF color</desc>
        </field>
        <field>            <name>length</name>
            <desc>float length</desc>
        </field>
        <field>            <name>maxAngle</name>
            <desc>float maxAngle</desc>
        </field>
        <field>            <name>maxSpeed</name>
            <desc>float maxSpeed</desc>
        </field>
        <field>            <name>minAngle</name>
            <desc>float minAngle</desc>
        </field>
        <field>            <name>tail</name>
            <desc>float tail</desc>
        </field>
        <field>            <name>width</name>
            <desc>float width</desc>
        </field>
    </class>
    <class>        <name>GuiStackControl</name>
        <base>GuiControl</base>
        <method>            <name>updateStack</name>
            <desc>- Restacks controls it owns</desc>
        </method>
        <field>            <name>HorizStacking</name>
            <desc>enumval HorizStacking</desc>
        </field>
        <field>            <name>Padding</name>
            <desc>int Padding</desc>
        </field>
        <field>            <name>StackingType</name>
            <desc>enumval StackingType</desc>
        </field>
        <field>            <name>VertStacking</name>
            <desc>enumval VertStacking</desc>
        </field>
    </class>
    <class>        <name>GuiTerrPreviewCtrl</name>
        <base>GuiControl</base>
        <method>            <name>getOrigin</name>
            <desc>Return a Point2F containing the position of the origin.</desc>
        </method>
        <method>            <name>getRoot</name>
            <desc>Return a Point2F representing the position of the root.</desc>
        </method>
        <method>            <name>getValue</name>
            <desc>Returns a 4-tuple containing: root_x root_y origin_x origin_y</desc>
        </method>
        <method>            <name>reset</name>
            <desc>Reset the view of the terrain.</desc>
        </method>
        <method>            <name>setOrigin</name>
            <args>float x, float y</args>
            <desc>Set the origin of the view.</desc>
        </method>
        <method>            <name>setRoot</name>
            <desc>Add the origin to the root and reset the origin.</desc>
        </method>
        <method>            <name>setValue</name>
        </method>
    </class>
    <class>        <name>GuiTextCtrl</name>
        <base>GuiControl</base>
        <method>            <name>setText</name>
            <args> newText </args>
        </method>
        <method>            <name>setTextID</name>
            <args> newText </args>
        </method>
        <field>            <name>maxLength</name>
            <desc>int maxLength</desc>
        </field>
        <field>            <name>text</name>
            <desc>caseString text</desc>
        </field>
        <field>            <name>textID</name>
            <desc>string textID</desc>
        </field>
    </class>
    <class>        <name>GuiTextEditCtrl</name>
        <base>GuiTextCtrl</base>
        <method>            <name>forceValidateText</name>
        </method>
        <method>            <name>getCursorPos</name>
        </method>
        <method>            <name>getText</name>
        </method>
        <method>            <name>selectAllText</name>
        </method>
        <method>            <name>setCursorPos</name>
            <args> newPos </args>
        </method>
        <field>            <name>deniedSound</name>
            <desc>SFXProfile deniedSound</desc>
        </field>
        <field>            <name>escapeCommand</name>
            <desc>string escapeCommand</desc>
        </field>
        <field>            <name>historySize</name>
            <desc>int historySize</desc>
        </field>
        <field>            <name>password</name>
            <desc>bool password</desc>
        </field>
        <field>            <name>passwordMask</name>
            <desc>string passwordMask</desc>
        </field>
        <field>            <name>sinkAllKeyEvents</name>
            <desc>bool sinkAllKeyEvents</desc>
        </field>
        <field>            <name>tabComplete</name>
            <desc>bool tabComplete</desc>
        </field>
        <field>            <name>validate</name>
            <desc>string validate</desc>
        </field>
    </class>
    <class>        <name>GuiTextEditSliderCtrl</name>
        <base>GuiTextEditCtrl</base>
        <field>            <name>format</name>
            <desc>string format</desc>
        </field>
        <field>            <name>increment</name>
            <desc>float increment</desc>
        </field>
        <field>            <name>range</name>
            <desc>Point2F range</desc>
        </field>
    </class>
    <class>        <name>GuiTextListCtrl</name>
        <base>GuiArrayCtrl</base>
        <method>            <name>addRow</name>
            <args>int id, string text, int index=0</args>
            <desc>Returns row number of the new item.</desc>
        </method>
        <method>            <name>clear</name>
            <desc>Clear the list.</desc>
        </method>
        <method>            <name>clearSelection</name>
            <desc>Set the selection to nothing.</desc>
        </method>
        <method>            <name>findTextIndex</name>
            <args>string needle</args>
            <desc>Find needle in the list, and return the row number it was found in.</desc>
        </method>
        <method>            <name>getRowId</name>
            <args>int index</args>
            <desc>Get the row ID for an index.</desc>
        </method>
        <method>            <name>getRowNumById</name>
            <args>int id</args>
            <desc>Get the row number for a specified id.</desc>
        </method>
        <method>            <name>getRowText</name>
            <args>int index</args>
            <desc>Get the text of the row with the specified index.</desc>
        </method>
        <method>            <name>getRowTextById</name>
            <args>int id</args>
            <desc>Get the text of a row with the specified id.</desc>
        </method>
        <method>            <name>getSelectedId</name>
            <desc>Get the ID of the currently selected item.</desc>
        </method>
        <method>            <name>isRowActive</name>
            <args>int rowNum</args>
            <desc>Is the specified row currently active?</desc>
        </method>
        <method>            <name>removeRow</name>
            <args>int index</args>
            <desc>Remove a row from the table, based on its index.</desc>
        </method>
        <method>            <name>removeRowById</name>
            <args>int id</args>
            <desc>Remove row with the specified id.</desc>
        </method>
        <method>            <name>rowCount</name>
            <desc>Get the number of rows.</desc>
        </method>
        <method>            <name>scrollVisible</name>
            <args>int rowNum</args>
            <desc>Scroll so the specified row is visible.</desc>
        </method>
        <method>            <name>setRowActive</name>
            <args>int rowNum, bool active</args>
            <desc>Mark a specified row as active/not.</desc>
        </method>
        <method>            <name>setRowById</name>
            <args>int id, string text</args>
        </method>
        <method>            <name>setSelectedById</name>
            <args>int id</args>
            <desc>Finds the specified entry by id, then marks its row as selected.</desc>
        </method>
        <method>            <name>setSelectedRow</name>
            <args>int rowNum</args>
            <desc>Selects the specified row.</desc>
        </method>
        <method>            <name>sort</name>
            <args>int columnID, bool increasing=false</args>
            <desc>Performs a standard (alphabetical) sort on the values in the specified column.</desc>
        </method>
        <method>            <name>sortNumerical</name>
            <args>int columnID, bool increasing=false</args>
            <desc>Perform a numerical sort on the values in the specified column.</desc>
        </method>
        <field>            <name>alternatingRows</name>
            <desc>bool alternatingRows</desc>
        </field>
        <field>            <name>autoResize</name>
            <desc>bool autoResize</desc>
        </field>
        <field>            <name>centerBmpsHoriz</name>
            <desc>bool centerBmpsHoriz</desc>
        </field>
        <field>            <name>centerBmpsVert</name>
            <desc>bool centerBmpsVert</desc>
        </field>
        <field>            <name>clipColumnText</name>
            <desc>bool clipColumnText</desc>
        </field>
        <field>            <name>columnAligns</name>
            <desc>intList columnAligns</desc>
        </field>
        <field>            <name>columnBmps</name>
            <desc>boolList columnBmps</desc>
        </field>
        <field>            <name>columns</name>
            <desc>intList columns</desc>
        </field>
        <field>            <name>enumerate</name>
            <desc>bool enumerate</desc>
        </field>
        <field>            <name>fitParentWidth</name>
            <desc>bool fitParentWidth</desc>
        </field>
        <field>            <name>resizeCell</name>
            <desc>bool resizeCell</desc>
        </field>
        <field>            <name>rowHeightOffset</name>
            <desc>int rowHeightOffset</desc>
        </field>
    </class>
    <class>        <name>GuiTickCtrl</name>
        <base>GuiControl</base>
        <method>            <name>setProcessTicks</name>
            <args> [tick = true] </args>
            <desc>- This will set this object to either be processing ticks or not</desc>
        </method>
    </class>
    <class>        <name>GuiTreeViewCtrl</name>
        <base>GuiArrayCtrl</base>
        <method>            <name>addSelection</name>
            <args>selects an item</args>
        </method>
        <method>            <name>buildIconTable</name>
            <args>builds an icon table</args>
        </method>
        <method>            <name>buildVisibleTree</name>
            <desc>Build the visible tree</desc>
        </method>
        <method>            <name>clear</name>
            <desc>- empty tree</desc>
        </method>
        <method>            <name>clearSelection</name>
            <args>clears selection</args>
        </method>
        <method>            <name>deleteSelection</name>
            <args>deletes the selected items</args>
        </method>
        <method>            <name>editItem</name>
            <args>TreeItemId item, string newText, string newValue</args>
        </method>
        <method>            <name>expandItem</name>
            <args>TreeItemId item, bool expand=true</args>
        </method>
        <method>            <name>findItemByName</name>
            <args>find item by name and returns the mId</args>
        </method>
        <method>            <name>findItemByObjectId</name>
            <args>find item by object id and returns the mId</args>
        </method>
        <method>            <name>getChild</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>getFirstRootItem</name>
            <desc>Get id for root item.</desc>
        </method>
        <method>            <name>getItemCount</name>
        </method>
        <method>            <name>getItemText</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>getItemValue</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>getNextSibling</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>getParent</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>getPrevSibling</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>getSelectedItem</name>
        </method>
        <method>            <name>getSelectedItemList</name>
            <desc>returns a space seperated list of mulitple item ids</desc>
        </method>
        <method>            <name>getSelectedObject</name>
        </method>
        <method>            <name>getTextToRoot</name>
            <args>TreeItemId item,Delimiter=none</args>
            <desc>gets the text from the current node to the root, concatenating at each branch upward, with a specified delimiter optionally</desc>
        </method>
        <method>            <name>insertItem</name>
            <args>TreeItemId parent, name, value, icon, normalImage=0, expandedImage=0</args>
        </method>
        <method>            <name>lockSelection</name>
            <args>locks selections</args>
        </method>
        <method>            <name>moveItemDown</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>moveItemUp</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>open</name>
            <args>SimSet obj, bool okToEdit=true</args>
            <desc>Set the root of the tree view to the specified object, or to the root set.</desc>
        </method>
        <method>            <name>removeItem</name>
            <args>TreeItemId item</args>
        </method>
        <method>            <name>removeSelection</name>
            <args>deselects an item</args>
        </method>
        <method>            <name>selectItem</name>
            <args>TreeItemId item, bool select=true</args>
        </method>
        <field>            <name>destroyTreeOnSleep</name>
            <desc>bool destroyTreeOnSleep</desc>
        </field>
        <field>            <name>fullRowSelect</name>
            <desc>bool fullRowSelect</desc>
        </field>
        <field>            <name>itemHeight</name>
            <desc>int itemHeight</desc>
        </field>
        <field>            <name>MouseDragging</name>
            <desc>bool MouseDragging</desc>
        </field>
        <field>            <name>MultipleSelections</name>
            <desc>bool MultipleSelections</desc>
        </field>
        <field>            <name>tabSize</name>
            <desc>int tabSize</desc>
        </field>
        <field>            <name>textOffset</name>
            <desc>int textOffset</desc>
        </field>
    </class>
    <class>        <name>GuiTSCtrl</name>
        <base>GuiControl</base>
        <field>            <name>cameraZRot</name>
            <desc>float cameraZRot</desc>
        </field>
        <field>            <name>forceFOV</name>
            <desc>float forceFOV</desc>
        </field>
    </class>
    <class>        <name>GuiWindowCtrl</name>
        <base>GuiTextCtrl</base>
        <field>            <name>canClose</name>
            <desc>bool canClose</desc>
        </field>
        <field>            <name>canMaximize</name>
            <desc>bool canMaximize</desc>
        </field>
        <field>            <name>canMinimize</name>
            <desc>bool canMinimize</desc>
        </field>
        <field>            <name>canMove</name>
            <desc>bool canMove</desc>
        </field>
        <field>            <name>closeCommand</name>
            <desc>string closeCommand</desc>
        </field>
        <field>            <name>minSize</name>
            <desc>Point2I minSize</desc>
        </field>
        <field>            <name>resizeHeight</name>
            <desc>bool resizeHeight</desc>
        </field>
        <field>            <name>resizeWidth</name>
            <desc>bool resizeWidth</desc>
        </field>
    </class>
    <class>        <name>GuiXboxListCtrl</name>
        <base>GuiControl</base>
        <method>            <name>addRow</name>
            <args>text, [data], [addedHeight], [bitmapIndex]</args>
        </method>
        <method>            <name>clear</name>
        </method>
        <method>            <name>getBottomRow</name>
        </method>
        <method>            <name>getRowCount</name>
        </method>
        <method>            <name>getRowEnabled</name>
            <args>idx</args>
        </method>
        <method>            <name>getSelectedData</name>
        </method>
        <method>            <name>getSelectedIndex</name>
        </method>
        <method>            <name>getSelectedText</name>
        </method>
        <method>            <name>getTopRow</name>
        </method>
        <method>            <name>setRowEnabled</name>
            <args>idx, enabled</args>
        </method>
        <method>            <name>setSelectedIndex</name>
            <args>selected</args>
        </method>
        <field>            <name>rows</name>
            <desc>string rows</desc>
        </field>
    </class>
    <class>        <name>GuiXboxOptionListCtrl</name>
        <base>GuiControl</base>
        <method>            <name>addRow</name>
            <args>text, [data], [bitmapIndex]</args>
        </method>
        <method>            <name>clear</name>
        </method>
        <method>            <name>getBottomRow</name>
        </method>
        <method>            <name>getOptionIndex</name>
            <args>row</args>
        </method>
        <method>            <name>getRowCount</name>
        </method>
        <method>            <name>getSelectedData</name>
        </method>
        <method>            <name>getSelectedIndex</name>
        </method>
        <method>            <name>getSelectedText</name>
        </method>
        <method>            <name>getTopRow</name>
        </method>
        <method>            <name>setOptionIndex</name>
            <args>row, idx</args>
        </method>
        <method>            <name>setOptionWrap</name>
            <args>row, wrap</args>
        </method>
        <field>            <name>border</name>
            <desc>bool border</desc>
        </field>
        <field>            <name>columnMargins</name>
            <desc>intList columnMargins</desc>
        </field>
        <field>            <name>columns</name>
            <desc>intList columns</desc>
        </field>
        <field>            <name>showRects</name>
            <desc>bool showRects</desc>
        </field>
    </class>
    <class>        <name>HoverVehicle</name>
        <base>Vehicle</base>
    </class>
    <class>        <name>HoverVehicleData</name>
        <base>VehicleData</base>
        <field>            <name>brakingActivationSpeed</name>
            <desc>float brakingActivationSpeed</desc>
        </field>
        <field>            <name>brakingForce</name>
            <desc>float brakingForce</desc>
        </field>
        <field>            <name>dragForce</name>
            <desc>float dragForce</desc>
        </field>
        <field>            <name>dustTrailEmitter</name>
            <desc>ParticleEmitterData dustTrailEmitter</desc>
        </field>
        <field>            <name>dustTrailFreqMod</name>
            <desc>float dustTrailFreqMod</desc>
        </field>
        <field>            <name>dustTrailOffset</name>
            <desc>Point3F dustTrailOffset</desc>
        </field>
        <field>            <name>engineSound</name>
            <desc>SFXProfile engineSound</desc>
        </field>
        <field>            <name>floatingGravMag</name>
            <desc>float floatingGravMag</desc>
        </field>
        <field>            <name>floatingThrustFactor</name>
            <desc>float floatingThrustFactor</desc>
        </field>
        <field>            <name>floatSound</name>
            <desc>SFXProfile floatSound</desc>
        </field>
        <field>            <name>forwardJetEmitter</name>
            <desc>ParticleEmitterData forwardJetEmitter</desc>
        </field>
        <field>            <name>gyroDrag</name>
            <desc>float gyroDrag</desc>
        </field>
        <field>            <name>jetSound</name>
            <desc>SFXProfile jetSound</desc>
        </field>
        <field>            <name>mainThrustForce</name>
            <desc>float mainThrustForce</desc>
        </field>
        <field>            <name>normalForce</name>
            <desc>float normalForce</desc>
        </field>
        <field>            <name>pitchForce</name>
            <desc>float pitchForce</desc>
        </field>
        <field>            <name>restorativeForce</name>
            <desc>float restorativeForce</desc>
        </field>
        <field>            <name>reverseThrustForce</name>
            <desc>float reverseThrustForce</desc>
        </field>
        <field>            <name>rollForce</name>
            <desc>float rollForce</desc>
        </field>
        <field>            <name>stabDampingConstant</name>
            <desc>float stabDampingConstant</desc>
        </field>
        <field>            <name>stabLenMax</name>
            <desc>float stabLenMax</desc>
        </field>
        <field>            <name>stabLenMin</name>
            <desc>float stabLenMin</desc>
        </field>
        <field>            <name>stabSpringConstant</name>
            <desc>float stabSpringConstant</desc>
        </field>
        <field>            <name>steeringForce</name>
            <desc>float steeringForce</desc>
        </field>
        <field>            <name>strafeThrustForce</name>
            <desc>float strafeThrustForce</desc>
        </field>
        <field>            <name>triggerTrailHeight</name>
            <desc>float triggerTrailHeight</desc>
        </field>
        <field>            <name>turboFactor</name>
            <desc>float turboFactor</desc>
        </field>
        <field>            <name>vertFactor</name>
            <desc>float vertFactor</desc>
        </field>
    </class>
    <class>        <name>HTTPObject</name>
        <base>TCPObject</base>
        <method>            <name>get</name>
            <args>TransportAddress addr, string requirstURI, string query=NULL</args>
        </method>
        <method>            <name>post</name>
            <args>TransportAddress addr, string requestURI, string query, string post</args>
        </method>
    </class>
    <class>        <name>InteriorInstance</name>
        <base>SceneObject</base>
        <method>            <name>getNumDetailLevels</name>
        </method>
        <method>            <name>setAlarmMode</name>
            <args>string mode</args>
            <desc>Mode is 'On' or 'Off'</desc>
        </method>
        <method>            <name>setDetailLevel</name>
            <args>int level</args>
        </method>
        <method>            <name>setSkinBase</name>
            <args>string basename</args>
        </method>
        <field>            <name>audioEnvironment</name>
            <desc>SFXEnvironment audioEnvironment</desc>
        </field>
        <field>            <name>audioProfile</name>
            <desc>SFXProfile audioProfile</desc>
        </field>
        <field>            <name>interiorFile</name>
            <desc>filename interiorFile</desc>
        </field>
        <field>            <name>showTerrainInside</name>
            <desc>bool showTerrainInside</desc>
        </field>
    </class>
    <class>        <name>InteriorMap</name>
        <base>SceneObject</base>
        <field>            <name>File</name>
            <desc>filename File</desc>
        </field>
    </class>
    <class>        <name>Item</name>
        <base>ShapeBase</base>
        <method>            <name>getLastStickyNormal</name>
            <desc>Get the normal of the surface on which the object is stuck.</desc>
        </method>
        <method>            <name>getLastStickyPos</name>
            <desc>Get the position on the surface on which the object is stuck.</desc>
        </method>
        <method>            <name>isRotating</name>
            <desc>Is the object still rotating?</desc>
        </method>
        <method>            <name>isStatic</name>
            <desc>Is the object static (ie, non-movable)?</desc>
        </method>
        <method>            <name>setBuddy</name>
            <args>bool buddyOn</args>
        </method>
        <method>            <name>setClientHidden</name>
            <args>int timer</args>
        </method>
        <method>            <name>setCollisionTimeout</name>
            <args>ShapeBase obj</args>
            <desc>Temporarily disable collisions against obj.</desc>
        </method>
        <field>            <name>collideable</name>
            <desc>bool collideable</desc>
        </field>
        <field>            <name>permanent</name>
            <desc>bool permanent</desc>
        </field>
        <field>            <name>rotate</name>
            <desc>bool rotate</desc>
        </field>
        <field>            <name>rotate2</name>
            <desc>bool rotate2</desc>
        </field>
        <field>            <name>static</name>
            <desc>bool static</desc>
        </field>
    </class>
    <class>        <name>ItemData</name>
        <base>ShapeBaseData</base>
        <field>            <name>addToHUDRadar</name>
            <desc>bool addToHUDRadar</desc>
        </field>
        <field>            <name>buddySequence</name>
            <desc>string buddySequence</desc>
        </field>
        <field>            <name>buddyShapeName</name>
            <desc>string buddyShapeName</desc>
        </field>
        <field>            <name>dynamicType</name>
            <desc>int dynamicType</desc>
        </field>
        <field>            <name>elasticity</name>
            <desc>float elasticity</desc>
        </field>
        <field>            <name>friction</name>
            <desc>float friction</desc>
        </field>
        <field>            <name>gravityMod</name>
            <desc>float gravityMod</desc>
        </field>
        <field>            <name>lightColor</name>
            <desc>ColorF lightColor</desc>
        </field>
        <field>            <name>lightOnlyStatic</name>
            <desc>bool lightOnlyStatic</desc>
        </field>
        <field>            <name>lightRadius</name>
            <desc>float lightRadius</desc>
        </field>
        <field>            <name>LightTime</name>
            <desc>int LightTime</desc>
        </field>
        <field>            <name>lightType</name>
            <desc>enumval lightType</desc>
        </field>
        <field>            <name>maxVelocity</name>
            <desc>float maxVelocity</desc>
        </field>
        <field>            <name>pickUpName</name>
            <desc>string pickUpName</desc>
        </field>
        <field>            <name>powerupId</name>
            <desc>int powerupId</desc>
        </field>
        <field>            <name>scaleFactor</name>
            <desc>float scaleFactor</desc>
        </field>
        <field>            <name>sticky</name>
            <desc>bool sticky</desc>
        </field>
    </class>
    <class>        <name>LangTable</name>
        <base>SimObject</base>
        <method>            <name>addLanguage</name>
            <args>string filename, [string languageName]</args>
        </method>
        <method>            <name>getCurrentLanguage</name>
        </method>
        <method>            <name>getLangName</name>
            <args>int language</args>
        </method>
        <method>            <name>getNumLang</name>
        </method>
        <method>            <name>getString</name>
            <args>string filename</args>
        </method>
        <method>            <name>setCurrentLanguage</name>
            <args>int language</args>
        </method>
        <method>            <name>setDefaultLanguage</name>
            <args>int language</args>
        </method>
    </class>
    <class>        <name>Marble</name>
        <base>ShapeBase</base>
        <method>            <name>cameraLookAtPt</name>
            <args>point</args>
        </method>
        <method>            <name>clearLastContactPosition</name>
        </method>
        <method>            <name>doPowerUp</name>
            <args>powerup</args>
        </method>
        <method>            <name>getBlastEnergy</name>
        </method>
        <method>            <name>getFullMarbleTime</name>
        </method>
        <method>            <name>getGravityDir</name>
        </method>
        <method>            <name>getLastContactPosition</name>
        </method>
        <method>            <name>getMarbleBonusTime</name>
        </method>
        <method>            <name>getMarbleTime</name>
        </method>
        <method>            <name>getPad</name>
        </method>
        <method>            <name>getPosition</name>
        </method>
        <method>            <name>getPowerUpId</name>
        </method>
        <method>            <name>isFrozen</name>
        </method>
        <method>            <name>setBlastEnergy</name>
            <args>energy</args>
        </method>
        <method>            <name>setGravityDir</name>
            <args>gravity, snap</args>
        </method>
        <method>            <name>setMarbleBonusTime</name>
            <args>time</args>
        </method>
        <method>            <name>setMarbleTime</name>
            <args>time</args>
        </method>
        <method>            <name>setMode</name>
            <args>mode</args>
        </method>
        <method>            <name>setOOB</name>
            <args>oob</args>
        </method>
        <method>            <name>setPad</name>
            <args>pad</args>
        </method>
        <method>            <name>setPosition</name>
            <args>transform, mouseY</args>
        </method>
        <method>            <name>setPowerUpId</name>
            <args>id</args>
        </method>
        <method>            <name>setUseFullMarbleTime</name>
            <args>flag</args>
        </method>
        <method>            <name>setVelocityRot</name>
            <args>vel</args>
        </method>
        <method>            <name>startCameraCenter</name>
        </method>
        <field>            <name>Controllable</name>
            <desc>bool Controllable</desc>
        </field>
    </class>
    <class>        <name>MarbleData</name>
        <base>ShapeBaseData</base>
        <field>            <name>airAcceleration</name>
            <desc>float airAcceleration</desc>
        </field>
        <field>            <name>angularAcceleration</name>
            <desc>float angularAcceleration</desc>
        </field>
        <field>            <name>blastRechargeTime</name>
            <desc>int blastRechargeTime</desc>
        </field>
        <field>            <name>Bounce1</name>
            <desc>SFXProfile Bounce1</desc>
        </field>
        <field>            <name>Bounce2</name>
            <desc>SFXProfile Bounce2</desc>
        </field>
        <field>            <name>Bounce3</name>
            <desc>SFXProfile Bounce3</desc>
        </field>
        <field>            <name>Bounce4</name>
            <desc>SFXProfile Bounce4</desc>
        </field>
        <field>            <name>bounceEmitter</name>
            <desc>ParticleEmitterData bounceEmitter</desc>
        </field>
        <field>            <name>bounceKineticFriction</name>
            <desc>float bounceKineticFriction</desc>
        </field>
        <field>            <name>bounceRestitution</name>
            <desc>float bounceRestitution</desc>
        </field>
        <field>            <name>brakingAcceleration</name>
            <desc>float brakingAcceleration</desc>
        </field>
        <field>            <name>cameraDistance</name>
            <desc>float cameraDistance</desc>
        </field>
        <field>            <name>energyRechargeRate</name>
            <desc>float energyRechargeRate</desc>
        </field>
        <field>            <name>grassEmitter</name>
            <desc>ParticleEmitterData grassEmitter</desc>
        </field>
        <field>            <name>gravity</name>
            <desc>float gravity</desc>
        </field>
        <field>            <name>jumpImpulse</name>
            <desc>float jumpImpulse</desc>
        </field>
        <field>            <name>JumpSound</name>
            <desc>SFXProfile JumpSound</desc>
        </field>
        <field>            <name>kineticFriction</name>
            <desc>float kineticFriction</desc>
        </field>
        <field>            <name>maxDotSlide</name>
            <desc>float maxDotSlide</desc>
        </field>
        <field>            <name>maxForceRadius</name>
            <desc>float maxForceRadius</desc>
        </field>
        <field>            <name>maxNaturalBlastRecharge</name>
            <desc>int maxNaturalBlastRecharge</desc>
        </field>
        <field>            <name>maxRollVelocity</name>
            <desc>float maxRollVelocity</desc>
        </field>
        <field>            <name>MegaBounce1</name>
            <desc>SFXProfile MegaBounce1</desc>
        </field>
        <field>            <name>MegaBounce2</name>
            <desc>SFXProfile MegaBounce2</desc>
        </field>
        <field>            <name>MegaBounce3</name>
            <desc>SFXProfile MegaBounce3</desc>
        </field>
        <field>            <name>MegaBounce4</name>
            <desc>SFXProfile MegaBounce4</desc>
        </field>
        <field>            <name>megaSize</name>
            <desc>float megaSize</desc>
        </field>
        <field>            <name>minBounceSpeed</name>
            <desc>float minBounceSpeed</desc>
        </field>
        <field>            <name>minBounceVel</name>
            <desc>float minBounceVel</desc>
        </field>
        <field>            <name>minTrailSpeed</name>
            <desc>float minTrailSpeed</desc>
        </field>
        <field>            <name>mudEmitter</name>
            <desc>ParticleEmitterData mudEmitter</desc>
        </field>
        <field>            <name>powerUps</name>
            <desc>GameBaseData powerUps</desc>
        </field>
        <field>            <name>RollHardSound</name>
            <desc>SFXProfile RollHardSound</desc>
        </field>
        <field>            <name>RollIceSound</name>
            <desc>SFXProfile RollIceSound</desc>
        </field>
        <field>            <name>RollMegaSound</name>
            <desc>SFXProfile RollMegaSound</desc>
        </field>
        <field>            <name>size</name>
            <desc>float size</desc>
        </field>
        <field>            <name>SlipSound</name>
            <desc>SFXProfile SlipSound</desc>
        </field>
        <field>            <name>staticFriction</name>
            <desc>float staticFriction</desc>
        </field>
        <field>            <name>trailEmitter</name>
            <desc>ParticleEmitterData trailEmitter</desc>
        </field>
    </class>
    <class>        <name>Marker</name>
        <base>SceneObject</base>
        <field>            <name>msToNext</name>
            <desc>int msToNext</desc>
        </field>
        <field>            <name>seqNum</name>
            <desc>int seqNum</desc>
        </field>
        <field>            <name>smoothingType</name>
            <desc>enumval smoothingType</desc>
        </field>
        <field>            <name>type</name>
            <desc>enumval type</desc>
        </field>
    </class>
    <class>        <name>Material</name>
        <base>SimObject</base>
        <field>            <name>animFlags</name>
            <desc>int animFlags</desc>
        </field>
        <field>            <name>baseTex</name>
            <desc>filename baseTex</desc>
        </field>
        <field>            <name>breakable</name>
            <desc>bool breakable</desc>
        </field>
        <field>            <name>bumpTex</name>
            <desc>filename bumpTex</desc>
        </field>
        <field>            <name>castsShadow</name>
            <desc>bool castsShadow</desc>
        </field>
        <field>            <name>cubemap</name>
            <desc>string cubemap</desc>
        </field>
        <field>            <name>detailTex</name>
            <desc>filename detailTex</desc>
        </field>
        <field>            <name>diffuse</name>
            <desc>ColorF diffuse</desc>
        </field>
        <field>            <name>doubleSided</name>
            <desc>bool doubleSided</desc>
        </field>
        <field>            <name>dynamicCubemap</name>
            <desc>bool dynamicCubemap</desc>
        </field>
        <field>            <name>emissive</name>
            <desc>bool emissive</desc>
        </field>
        <field>            <name>envTex</name>
            <desc>filename envTex</desc>
        </field>
        <field>            <name>exposure</name>
            <desc>int exposure</desc>
        </field>
        <field>            <name>force</name>
            <desc>float force</desc>
        </field>
        <field>            <name>friction</name>
            <desc>float friction</desc>
        </field>
        <field>            <name>glow</name>
            <desc>bool glow</desc>
        </field>
        <field>            <name>mapTo</name>
            <desc>string mapTo</desc>
        </field>
        <field>            <name>noiseTexFileName</name>
            <desc>filename noiseTexFileName</desc>
        </field>
        <field>            <name>pixelSpecular</name>
            <desc>bool pixelSpecular</desc>
        </field>
        <field>            <name>planarReflection</name>
            <desc>bool planarReflection</desc>
        </field>
        <field>            <name>renderBin</name>
            <desc>enumval renderBin</desc>
        </field>
        <field>            <name>restitution</name>
            <desc>float restitution</desc>
        </field>
        <field>            <name>rotPivotOffset</name>
            <desc>Point2F rotPivotOffset</desc>
        </field>
        <field>            <name>rotSpeed</name>
            <desc>float rotSpeed</desc>
        </field>
        <field>            <name>scrollDir</name>
            <desc>Point2F scrollDir</desc>
        </field>
        <field>            <name>scrollSpeed</name>
            <desc>float scrollSpeed</desc>
        </field>
        <field>            <name>sequenceFramePerSec</name>
            <desc>float sequenceFramePerSec</desc>
        </field>
        <field>            <name>sequenceSegmentSize</name>
            <desc>float sequenceSegmentSize</desc>
        </field>
        <field>            <name>softwareMipOffset</name>
            <desc>float softwareMipOffset</desc>
        </field>
        <field>            <name>sound</name>
            <desc>int sound</desc>
        </field>
        <field>            <name>specular</name>
            <desc>ColorF specular</desc>
        </field>
        <field>            <name>specularPower</name>
            <desc>float specularPower</desc>
        </field>
        <field>            <name>texCompression</name>
            <desc>enumval texCompression</desc>
        </field>
        <field>            <name>translucent</name>
            <desc>bool translucent</desc>
        </field>
        <field>            <name>translucentBlendOp</name>
            <desc>enumval translucentBlendOp</desc>
        </field>
        <field>            <name>translucentZWrite</name>
            <desc>bool translucentZWrite</desc>
        </field>
        <field>            <name>waveAmp</name>
            <desc>float waveAmp</desc>
        </field>
        <field>            <name>waveFreq</name>
            <desc>float waveFreq</desc>
        </field>
        <field>            <name>waveType</name>
            <desc>enumval waveType</desc>
        </field>
    </class>
    <class>        <name>MaterialPropertyMap</name>
        <base>SimObject</base>
    </class>
    <class>        <name>MessageVector</name>
        <base>SimObject</base>
        <method>            <name>clear</name>
            <desc>Clear the message vector.</desc>
        </method>
        <method>            <name>deleteLine</name>
            <args>int deletePos</args>
            <desc>Delete the line at the specified position.</desc>
        </method>
        <method>            <name>dump</name>
            <args>string filename, string header=NULL</args>
            <desc>Dump the message vector to a file, optionally prefixing a header.</desc>
        </method>
        <method>            <name>getLineIndexByTag</name>
            <args>int tag</args>
            <desc>Scan through the vector, returning the line number of the first line that matches the specified tag; else returns -1 if no match was found.</desc>
        </method>
        <method>            <name>getLineTag</name>
            <args>int line</args>
            <desc>Get the tag of a specified line.</desc>
        </method>
        <method>            <name>getLineText</name>
            <args>int line</args>
            <desc>Get the text at a specified line.</desc>
        </method>
        <method>            <name>getLineTextByTag</name>
            <args>int tag</args>
            <desc>Scan through the lines in the vector, returning the first line that has a matching tag.</desc>
        </method>
        <method>            <name>getNumLines</name>
            <desc>Get the number of lines in the vector.</desc>
        </method>
        <method>            <name>insertLine</name>
            <args>int insertPos, string msg, int tag=0</args>
            <desc>Insert a new line into the vector at the specified position.</desc>
        </method>
        <method>            <name>popBackLine</name>
            <desc>Pop a line from the back of the list; destroys the line.</desc>
        </method>
        <method>            <name>popFrontLine</name>
            <desc>Pop a line from the front of the vector, destroying the line.</desc>
        </method>
        <method>            <name>pushBackLine</name>
            <args>string msg, int tag=0</args>
            <desc>Push a line onto the back of the list.</desc>
        </method>
        <method>            <name>pushFrontLine</name>
            <args>string msg, int tag=0</args>
            <desc>Push a line onto the front of the vector.</desc>
        </method>
    </class>
    <class>        <name>MirrorSubObject</name>
        <base>SceneObject</base>
    </class>
    <class>        <name>MissionArea</name>
        <base>NetObject</base>
        <method>            <name>getArea</name>
            <desc>Returns 4 fields: starting x, starting y, extents x, extents y</desc>
        </method>
        <method>            <name>setArea</name>
            <args>int x, int y, int width, int height</args>
        </method>
        <field>            <name>Area</name>
            <desc>RectI Area</desc>
        </field>
        <field>            <name>flightCeiling</name>
            <desc>float flightCeiling</desc>
        </field>
        <field>            <name>flightCeilingRange</name>
            <desc>float flightCeilingRange</desc>
        </field>
    </class>
    <class>        <name>MissionAreaEditor</name>
        <base>GuiBitmapCtrl</base>
        <method>            <name>centerWorld</name>
            <args>including terrain</args>
            <desc>in the world so that the center of the world is the center of the mission area.</desc>
        </method>
        <method>            <name>getArea</name>
            <desc>Return a 4-tuple: area_x area_y area_width are_height</desc>
        </method>
        <method>            <name>setArea</name>
            <args>int x, int y, int w, int h</args>
            <desc>Set the mission area to the specified co-ordinates/extents.</desc>
        </method>
        <method>            <name>updateTerrain</name>
            <desc>Update the terrain bitmap that is rendered as background in the control.</desc>
        </method>
        <field>            <name>cameraColor</name>
            <desc>ColorI cameraColor</desc>
        </field>
        <field>            <name>defaultObjectColor</name>
            <desc>ColorI defaultObjectColor</desc>
        </field>
        <field>            <name>enableEditing</name>
            <desc>bool enableEditing</desc>
        </field>
        <field>            <name>enableMirroring</name>
            <desc>bool enableMirroring</desc>
        </field>
        <field>            <name>handleFillColor</name>
            <desc>ColorI handleFillColor</desc>
        </field>
        <field>            <name>handleFrameColor</name>
            <desc>ColorI handleFrameColor</desc>
        </field>
        <field>            <name>mirrorArrowColor</name>
            <desc>ColorI mirrorArrowColor</desc>
        </field>
        <field>            <name>mirrorIndex</name>
            <desc>int mirrorIndex</desc>
        </field>
        <field>            <name>mirrorLineColor</name>
            <desc>ColorI mirrorLineColor</desc>
        </field>
        <field>            <name>missionBoundsColor</name>
            <desc>ColorI missionBoundsColor</desc>
        </field>
        <field>            <name>renderCamera</name>
            <desc>bool renderCamera</desc>
        </field>
        <field>            <name>squareBitmap</name>
            <desc>bool squareBitmap</desc>
        </field>
        <field>            <name>waterObjectColor</name>
            <desc>ColorI waterObjectColor</desc>
        </field>
    </class>
    <class>        <name>MissionMarker</name>
        <base>ShapeBase</base>
    </class>
    <class>        <name>MissionMarkerData</name>
        <base>ShapeBaseData</base>
    </class>
    <class>        <name>NetConnection</name>
        <base>SimGroup</base>
        <method>            <name>checkMaxRate</name>
        </method>
        <method>            <name>clearPaths</name>
        </method>
        <method>            <name>connect</name>
            <args>string remoteAddress</args>
            <desc>Connects this NC object to the remote address.</desc>
        </method>
        <method>            <name>connectLocal</name>
            <desc>Connects a connection to the server running in the same process.</desc>
        </method>
        <method>            <name>getAddress</name>
            <desc>Returns the address we're connected to.</desc>
        </method>
        <method>            <name>getGhostID</name>
            <args> S32 realID </args>
            <desc>Convert a real id to the ghost id for this connection.</desc>
        </method>
        <method>            <name>getGhostsActive</name>
            <desc>Returns number of ghosts active.</desc>
        </method>
        <method>            <name>getPacketLoss</name>
        </method>
        <method>            <name>getPing</name>
        </method>
        <method>            <name>resolveGhostID</name>
            <args> S32 ghostID </args>
            <desc>Convert a ghost id from this connection to a real id.</desc>
        </method>
        <method>            <name>resolveObjectFromGhostIndex</name>
            <args> S32 ghostIdx</args>
            <desc>Convert a ghost index from this connection to a real id.</desc>
        </method>
        <method>            <name>setSimulatedNetParams</name>
            <args>float packetLoss, int delay</args>
        </method>
        <method>            <name>transmitPaths</name>
        </method>
    </class>
    <class>        <name>NetObject</name>
        <base>SimObject</base>
        <method>            <name>clearScopeToClient</name>
            <args>%client</args>
            <desc>Undo the effects of a scopeToClient() call.</desc>
        </method>
        <method>            <name>getGhostID</name>
        </method>
        <method>            <name>isSPModeObject</name>
        </method>
        <method>            <name>scopeToClient</name>
            <args>NetConnection %client</args>
            <desc>Cause the NetObject to be forced as scoped on the specified NetConnection.</desc>
        </method>
        <method>            <name>setScopeAlways</name>
            <desc>Always scope this object on all connections.</desc>
        </method>
    </class>
    <class>        <name>NetStringEvent</name>
    </class>
    <class>        <name>ParticleData</name>
        <base>SimDataBlock</base>
        <field>            <name>animateTexture</name>
            <desc>bool animateTexture</desc>
        </field>
        <field>            <name>animTexName</name>
            <desc>filename animTexName</desc>
        </field>
        <field>            <name>Colors</name>
            <desc>ColorF Colors</desc>
        </field>
        <field>            <name>constantAcceleration</name>
            <desc>float constantAcceleration</desc>
        </field>
        <field>            <name>dragCoefficient</name>
            <desc>float dragCoefficient</desc>
        </field>
        <field>            <name>framesPerSec</name>
            <desc>int framesPerSec</desc>
        </field>
        <field>            <name>gravityCoefficient</name>
            <desc>float gravityCoefficient</desc>
        </field>
        <field>            <name>inheritedVelFactor</name>
            <desc>float inheritedVelFactor</desc>
        </field>
        <field>            <name>lifetimeMS</name>
            <desc>int lifetimeMS</desc>
        </field>
        <field>            <name>lifetimeVarianceMS</name>
            <desc>int lifetimeVarianceMS</desc>
        </field>
        <field>            <name>sizes</name>
            <desc>float sizes</desc>
        </field>
        <field>            <name>spinRandomMax</name>
            <desc>float spinRandomMax</desc>
        </field>
        <field>            <name>spinRandomMin</name>
            <desc>float spinRandomMin</desc>
        </field>
        <field>            <name>spinSpeed</name>
            <desc>float spinSpeed</desc>
        </field>
        <field>            <name>textureName</name>
            <desc>filename textureName</desc>
        </field>
        <field>            <name>times</name>
            <desc>float times</desc>
        </field>
        <field>            <name>useInvAlpha</name>
            <desc>bool useInvAlpha</desc>
        </field>
        <field>            <name>windCoefficient</name>
            <desc>float windCoefficient</desc>
        </field>
    </class>
    <class>        <name>ParticleEmitterData</name>
        <base>GameBaseData</base>
        <field>            <name>ejectionOffset</name>
            <desc>float ejectionOffset</desc>
        </field>
        <field>            <name>ejectionPeriodMS</name>
            <desc>int ejectionPeriodMS</desc>
        </field>
        <field>            <name>ejectionVelocity</name>
            <desc>float ejectionVelocity</desc>
        </field>
        <field>            <name>lifetimeMS</name>
            <desc>int lifetimeMS</desc>
        </field>
        <field>            <name>lifetimeVarianceMS</name>
            <desc>int lifetimeVarianceMS</desc>
        </field>
        <field>            <name>orientOnVelocity</name>
            <desc>bool orientOnVelocity</desc>
        </field>
        <field>            <name>orientParticles</name>
            <desc>bool orientParticles</desc>
        </field>
        <field>            <name>overrideAdvance</name>
            <desc>bool overrideAdvance</desc>
        </field>
        <field>            <name>particles</name>
            <desc>string particles</desc>
        </field>
        <field>            <name>periodVarianceMS</name>
            <desc>int periodVarianceMS</desc>
        </field>
        <field>            <name>phiReferenceVel</name>
            <desc>float phiReferenceVel</desc>
        </field>
        <field>            <name>phiVariance</name>
            <desc>float phiVariance</desc>
        </field>
        <field>            <name>thetaMax</name>
            <desc>float thetaMax</desc>
        </field>
        <field>            <name>thetaMin</name>
            <desc>float thetaMin</desc>
        </field>
        <field>            <name>useEmitterColors</name>
            <desc>bool useEmitterColors</desc>
        </field>
        <field>            <name>useEmitterSizes</name>
            <desc>bool useEmitterSizes</desc>
        </field>
        <field>            <name>velocityVariance</name>
            <desc>float velocityVariance</desc>
        </field>
    </class>
    <class>        <name>ParticleEmitterNode</name>
        <base>GameBase</base>
        <field>            <name>emitter</name>
            <desc>ParticleEmitterData emitter</desc>
        </field>
        <field>            <name>velocity</name>
            <desc>float velocity</desc>
        </field>
    </class>
    <class>        <name>ParticleEmitterNodeData</name>
        <base>GameBaseData</base>
        <field>            <name>timeMultiple</name>
            <desc>float timeMultiple</desc>
        </field>
    </class>
    <class>        <name>Path</name>
        <base>SimGroup</base>
        <method>            <name>getPathId</name>
        </method>
        <field>            <name>isLooping</name>
            <desc>bool isLooping</desc>
        </field>
    </class>
    <class>        <name>PathCamera</name>
        <base>ShapeBase</base>
        <method>            <name>popFront</name>
        </method>
        <method>            <name>pushBack</name>
            <args>transform,speed,type,path</args>
        </method>
        <method>            <name>pushFront</name>
            <args>transform,speed,type,path</args>
        </method>
        <method>            <name>reset</name>
            <args>speed=0</args>
        </method>
        <method>            <name>setPosition</name>
            <args>pos</args>
        </method>
        <method>            <name>setState</name>
            <args>{forward,backward,stop}</args>
        </method>
        <method>            <name>setTarget</name>
            <args>pos</args>
        </method>
    </class>
    <class>        <name>PathCameraData</name>
        <base>ShapeBaseData</base>
    </class>
    <class>        <name>PathedInterior</name>
        <base>GameBase</base>
        <method>            <name>setPathPosition</name>
        </method>
        <method>            <name>setTargetPosition</name>
        </method>
        <field>            <name>basePosition</name>
            <desc>MatrixPosition basePosition</desc>
        </field>
        <field>            <name>baseRotation</name>
            <desc>MatrixRotation baseRotation</desc>
        </field>
        <field>            <name>baseScale</name>
            <desc>Point3F baseScale</desc>
        </field>
        <field>            <name>interiorIndex</name>
            <desc>int interiorIndex</desc>
        </field>
        <field>            <name>interiorResource</name>
            <desc>filename interiorResource</desc>
        </field>
    </class>
    <class>        <name>PathedInteriorData</name>
        <base>GameBaseData</base>
        <field>            <name>StartSound</name>
            <desc>SFXProfile StartSound</desc>
        </field>
        <field>            <name>StopSound</name>
            <desc>SFXProfile StopSound</desc>
        </field>
        <field>            <name>SustainSound</name>
            <desc>SFXProfile SustainSound</desc>
        </field>
    </class>
    <class>        <name>PathManagerEvent</name>
    </class>
    <class>        <name>PhysicalZone</name>
        <base>SceneObject</base>
        <method>            <name>activate</name>
            <desc>Activate the physical zone's effects.</desc>
        </method>
        <method>            <name>deactivate</name>
            <desc>Deactivate the physical zone's effects.</desc>
        </method>
        <field>            <name>appliedForce</name>
            <desc>Point3F appliedForce</desc>
        </field>
        <field>            <name>gravityMod</name>
            <desc>float gravityMod</desc>
        </field>
        <field>            <name>polyhedron</name>
            <desc>TriggerPolyhedron polyhedron</desc>
        </field>
        <field>            <name>velocityMod</name>
            <desc>float velocityMod</desc>
        </field>
    </class>
    <class>        <name>Player</name>
        <base>ShapeBase</base>
        <method>            <name>checkDismountPoint</name>
            <args>Point3F oldPos, Point3F pos</args>
        </method>
        <method>            <name>clearControlObject</name>
        </method>
        <method>            <name>getControlObject</name>
            <desc>Get the current control object.</desc>
        </method>
        <method>            <name>getDamageLocation</name>
            <args>Point3F pos</args>
        </method>
        <method>            <name>getState</name>
            <desc>Return the current state name.</desc>
        </method>
        <method>            <name>setActionThread</name>
            <args>string sequenceName, bool hold, bool fsp</args>
        </method>
        <method>            <name>setArmThread</name>
            <args>string sequenceName</args>
        </method>
        <method>            <name>setControlObject</name>
            <args>ShapeBase obj</args>
        </method>
    </class>
    <class>        <name>PlayerData</name>
        <base>ShapeBaseData</base>
        <field>            <name>boundingBox</name>
            <desc>Point3F boundingBox</desc>
        </field>
        <field>            <name>boxHeadBackPercentage</name>
            <desc>int boxHeadBackPercentage</desc>
        </field>
        <field>            <name>boxHeadFrontPercentage</name>
            <desc>int boxHeadFrontPercentage</desc>
        </field>
        <field>            <name>boxHeadLeftPercentage</name>
            <desc>int boxHeadLeftPercentage</desc>
        </field>
        <field>            <name>boxHeadPercentage</name>
            <desc>float boxHeadPercentage</desc>
        </field>
        <field>            <name>boxHeadRightPercentage</name>
            <desc>int boxHeadRightPercentage</desc>
        </field>
        <field>            <name>boxTorsoPercentage</name>
            <desc>float boxTorsoPercentage</desc>
        </field>
        <field>            <name>bubbleEmitTime</name>
            <desc>float bubbleEmitTime</desc>
        </field>
        <field>            <name>decalOffset</name>
            <desc>float decalOffset</desc>
        </field>
        <field>            <name>dustEmitter</name>
            <desc>ParticleEmitterData dustEmitter</desc>
        </field>
        <field>            <name>exitingWater</name>
            <desc>SFXProfile exitingWater</desc>
        </field>
        <field>            <name>exitSplashSoundVelocity</name>
            <desc>float exitSplashSoundVelocity</desc>
        </field>
        <field>            <name>FootBubblesSound</name>
            <desc>SFXProfile FootBubblesSound</desc>
        </field>
        <field>            <name>FootHardSound</name>
            <desc>SFXProfile FootHardSound</desc>
        </field>
        <field>            <name>FootMetalSound</name>
            <desc>SFXProfile FootMetalSound</desc>
        </field>
        <field>            <name>footPuffEmitter</name>
            <desc>ParticleEmitterData footPuffEmitter</desc>
        </field>
        <field>            <name>footPuffNumParts</name>
            <desc>int footPuffNumParts</desc>
        </field>
        <field>            <name>footPuffRadius</name>
            <desc>float footPuffRadius</desc>
        </field>
        <field>            <name>FootShallowSound</name>
            <desc>SFXProfile FootShallowSound</desc>
        </field>
        <field>            <name>FootSnowSound</name>
            <desc>SFXProfile FootSnowSound</desc>
        </field>
        <field>            <name>FootSoftSound</name>
            <desc>SFXProfile FootSoftSound</desc>
        </field>
        <field>            <name>footstepSplashHeight</name>
            <desc>float footstepSplashHeight</desc>
        </field>
        <field>            <name>FootUnderwaterSound</name>
            <desc>SFXProfile FootUnderwaterSound</desc>
        </field>
        <field>            <name>FootWadingSound</name>
            <desc>SFXProfile FootWadingSound</desc>
        </field>
        <field>            <name>groundImpactMinSpeed</name>
            <desc>float groundImpactMinSpeed</desc>
        </field>
        <field>            <name>groundImpactShakeAmp</name>
            <desc>Point3F groundImpactShakeAmp</desc>
        </field>
        <field>            <name>groundImpactShakeDuration</name>
            <desc>float groundImpactShakeDuration</desc>
        </field>
        <field>            <name>groundImpactShakeFalloff</name>
            <desc>float groundImpactShakeFalloff</desc>
        </field>
        <field>            <name>groundImpactShakeFreq</name>
            <desc>Point3F groundImpactShakeFreq</desc>
        </field>
        <field>            <name>hardSplashSoundVelocity</name>
            <desc>float hardSplashSoundVelocity</desc>
        </field>
        <field>            <name>horizMaxSpeed</name>
            <desc>float horizMaxSpeed</desc>
        </field>
        <field>            <name>horizResistFactor</name>
            <desc>float horizResistFactor</desc>
        </field>
        <field>            <name>horizResistSpeed</name>
            <desc>float horizResistSpeed</desc>
        </field>
        <field>            <name>impactHardSound</name>
            <desc>SFXProfile impactHardSound</desc>
        </field>
        <field>            <name>impactMetalSound</name>
            <desc>SFXProfile impactMetalSound</desc>
        </field>
        <field>            <name>impactSnowSound</name>
            <desc>SFXProfile impactSnowSound</desc>
        </field>
        <field>            <name>impactSoftSound</name>
            <desc>SFXProfile impactSoftSound</desc>
        </field>
        <field>            <name>impactWaterEasy</name>
            <desc>SFXProfile impactWaterEasy</desc>
        </field>
        <field>            <name>impactWaterHard</name>
            <desc>SFXProfile impactWaterHard</desc>
        </field>
        <field>            <name>impactWaterMedium</name>
            <desc>SFXProfile impactWaterMedium</desc>
        </field>
        <field>            <name>jumpDelay</name>
            <desc>int jumpDelay</desc>
        </field>
        <field>            <name>jumpEnergyDrain</name>
            <desc>float jumpEnergyDrain</desc>
        </field>
        <field>            <name>jumpForce</name>
            <desc>float jumpForce</desc>
        </field>
        <field>            <name>jumpSurfaceAngle</name>
            <desc>float jumpSurfaceAngle</desc>
        </field>
        <field>            <name>maxBackwardSpeed</name>
            <desc>float maxBackwardSpeed</desc>
        </field>
        <field>            <name>maxForwardSpeed</name>
            <desc>float maxForwardSpeed</desc>
        </field>
        <field>            <name>maxFreelookAngle</name>
            <desc>float maxFreelookAngle</desc>
        </field>
        <field>            <name>maxJumpSpeed</name>
            <desc>float maxJumpSpeed</desc>
        </field>
        <field>            <name>maxLookAngle</name>
            <desc>float maxLookAngle</desc>
        </field>
        <field>            <name>maxSideSpeed</name>
            <desc>float maxSideSpeed</desc>
        </field>
        <field>            <name>maxStepHeight</name>
            <desc>float maxStepHeight</desc>
        </field>
        <field>            <name>maxTimeScale</name>
            <desc>float maxTimeScale</desc>
        </field>
        <field>            <name>maxUnderwaterBackwardSpeed</name>
            <desc>float maxUnderwaterBackwardSpeed</desc>
        </field>
        <field>            <name>maxUnderwaterForwardSpeed</name>
            <desc>float maxUnderwaterForwardSpeed</desc>
        </field>
        <field>            <name>maxUnderwaterSideSpeed</name>
            <desc>float maxUnderwaterSideSpeed</desc>
        </field>
        <field>            <name>mediumSplashSoundVelocity</name>
            <desc>float mediumSplashSoundVelocity</desc>
        </field>
        <field>            <name>minImpactSpeed</name>
            <desc>float minImpactSpeed</desc>
        </field>
        <field>            <name>minJumpEnergy</name>
            <desc>float minJumpEnergy</desc>
        </field>
        <field>            <name>minJumpSpeed</name>
            <desc>float minJumpSpeed</desc>
        </field>
        <field>            <name>minLookAngle</name>
            <desc>float minLookAngle</desc>
        </field>
        <field>            <name>minRunEnergy</name>
            <desc>float minRunEnergy</desc>
        </field>
        <field>            <name>movingBubblesSound</name>
            <desc>SFXProfile movingBubblesSound</desc>
        </field>
        <field>            <name>pickupRadius</name>
            <desc>float pickupRadius</desc>
        </field>
        <field>            <name>recoverDelay</name>
            <desc>int recoverDelay</desc>
        </field>
        <field>            <name>recoverRunForceScale</name>
            <desc>float recoverRunForceScale</desc>
        </field>
        <field>            <name>renderFirstPerson</name>
            <desc>bool renderFirstPerson</desc>
        </field>
        <field>            <name>runEnergyDrain</name>
            <desc>float runEnergyDrain</desc>
        </field>
        <field>            <name>runForce</name>
            <desc>float runForce</desc>
        </field>
        <field>            <name>runSurfaceAngle</name>
            <desc>float runSurfaceAngle</desc>
        </field>
        <field>            <name>splashAngle</name>
            <desc>float splashAngle</desc>
        </field>
        <field>            <name>splashEmitter</name>
            <desc>ParticleEmitterData splashEmitter</desc>
        </field>
        <field>            <name>splashFreqMod</name>
            <desc>float splashFreqMod</desc>
        </field>
        <field>            <name>splashVelEpsilon</name>
            <desc>float splashVelEpsilon</desc>
        </field>
        <field>            <name>splashVelocity</name>
            <desc>float splashVelocity</desc>
        </field>
        <field>            <name>upMaxSpeed</name>
            <desc>float upMaxSpeed</desc>
        </field>
        <field>            <name>upResistFactor</name>
            <desc>float upResistFactor</desc>
        </field>
        <field>            <name>upResistSpeed</name>
            <desc>float upResistSpeed</desc>
        </field>
        <field>            <name>waterBreathSound</name>
            <desc>SFXProfile waterBreathSound</desc>
        </field>
    </class>
    <class>        <name>PowerUpData</name>
        <base>GameBaseData</base>
        <field>            <name>activateTime</name>
            <desc>int activateTime</desc>
        </field>
        <field>            <name>airAccel</name>
            <desc>float airAccel</desc>
        </field>
        <field>            <name>blastRecharge</name>
            <desc>bool blastRecharge</desc>
        </field>
        <field>            <name>boostAmount</name>
            <desc>float boostAmount</desc>
        </field>
        <field>            <name>boostDir</name>
            <desc>Point3F boostDir</desc>
        </field>
        <field>            <name>boostMassless</name>
            <desc>float boostMassless</desc>
        </field>
        <field>            <name>bounce</name>
            <desc>float bounce</desc>
        </field>
        <field>            <name>duration</name>
            <desc>int duration</desc>
        </field>
        <field>            <name>emitter</name>
            <desc>ParticleEmitterData emitter</desc>
        </field>
        <field>            <name>gravityMod</name>
            <desc>float gravityMod</desc>
        </field>
        <field>            <name>image</name>
            <desc>GameBaseData image</desc>
        </field>
        <field>            <name>massScale</name>
            <desc>float massScale</desc>
        </field>
        <field>            <name>repulseDist</name>
            <desc>float repulseDist</desc>
        </field>
        <field>            <name>repulseMax</name>
            <desc>float repulseMax</desc>
        </field>
        <field>            <name>sizeScale</name>
            <desc>float sizeScale</desc>
        </field>
        <field>            <name>timeFreeze</name>
            <desc>int timeFreeze</desc>
        </field>
    </class>
    <class>        <name>Precipitation</name>
        <base>GameBase</base>
        <method>            <name>modifyStorm</name>
            <args>Percentage &lt;0.0 to 1.0&gt;, Time&lt;sec&gt;</args>
        </method>
        <method>            <name>setPercentange</name>
            <args>percentage &lt;0.0 to 1.0&gt;</args>
        </method>
        <method>            <name>setTurbulence</name>
            <args>max, speed, seconds</args>
        </method>
        <field>            <name>animateSplashes</name>
            <desc>bool animateSplashes</desc>
        </field>
        <field>            <name>boxHeight</name>
            <desc>float boxHeight</desc>
        </field>
        <field>            <name>boxWidth</name>
            <desc>float boxWidth</desc>
        </field>
        <field>            <name>doCollision</name>
            <desc>bool doCollision</desc>
        </field>
        <field>            <name>dropAnimateMS</name>
            <desc>int dropAnimateMS</desc>
        </field>
        <field>            <name>dropSize</name>
            <desc>float dropSize</desc>
        </field>
        <field>            <name>fadeDist</name>
            <desc>float fadeDist</desc>
        </field>
        <field>            <name>fadeDistEnd</name>
            <desc>float fadeDistEnd</desc>
        </field>
        <field>            <name>followCam</name>
            <desc>bool followCam</desc>
        </field>
        <field>            <name>glowIntensity</name>
            <desc>ColorF glowIntensity</desc>
        </field>
        <field>            <name>hitPlayers</name>
            <desc>bool hitPlayers</desc>
        </field>
        <field>            <name>hitVehicles</name>
            <desc>bool hitVehicles</desc>
        </field>
        <field>            <name>maxMass</name>
            <desc>float maxMass</desc>
        </field>
        <field>            <name>maxSpeed</name>
            <desc>float maxSpeed</desc>
        </field>
        <field>            <name>maxTurbulence</name>
            <desc>float maxTurbulence</desc>
        </field>
        <field>            <name>minMass</name>
            <desc>float minMass</desc>
        </field>
        <field>            <name>minSpeed</name>
            <desc>float minSpeed</desc>
        </field>
        <field>            <name>numDrops</name>
            <desc>int numDrops</desc>
        </field>
        <field>            <name>reflect</name>
            <desc>bool reflect</desc>
        </field>
        <field>            <name>rotateWithCamVel</name>
            <desc>bool rotateWithCamVel</desc>
        </field>
        <field>            <name>splashMS</name>
            <desc>int splashMS</desc>
        </field>
        <field>            <name>splashSize</name>
            <desc>float splashSize</desc>
        </field>
        <field>            <name>turbulenceSpeed</name>
            <desc>float turbulenceSpeed</desc>
        </field>
        <field>            <name>useLighting</name>
            <desc>bool useLighting</desc>
        </field>
        <field>            <name>useTrueBillboards</name>
            <desc>bool useTrueBillboards</desc>
        </field>
        <field>            <name>useTurbulence</name>
            <desc>bool useTurbulence</desc>
        </field>
        <field>            <name>useWind</name>
            <desc>bool useWind</desc>
        </field>
    </class>
    <class>        <name>PrecipitationData</name>
        <base>GameBaseData</base>
        <field>            <name>dropShader</name>
            <desc>string dropShader</desc>
        </field>
        <field>            <name>dropsPerSide</name>
            <desc>int dropsPerSide</desc>
        </field>
        <field>            <name>dropTexture</name>
            <desc>filename dropTexture</desc>
        </field>
        <field>            <name>soundProfile</name>
            <desc>SFXProfile soundProfile</desc>
        </field>
        <field>            <name>splashesPerSide</name>
            <desc>int splashesPerSide</desc>
        </field>
        <field>            <name>splashShader</name>
            <desc>string splashShader</desc>
        </field>
        <field>            <name>splashTexture</name>
            <desc>filename splashTexture</desc>
        </field>
    </class>
    <class>        <name>Projectile</name>
        <base>GameBase</base>
        <field>            <name>initialPosition</name>
            <desc>Point3F initialPosition</desc>
        </field>
        <field>            <name>initialVelocity</name>
            <desc>Point3F initialVelocity</desc>
        </field>
        <field>            <name>sourceObject</name>
            <desc>int sourceObject</desc>
        </field>
        <field>            <name>sourceSlot</name>
            <desc>int sourceSlot</desc>
        </field>
    </class>
    <class>        <name>ProjectileData</name>
        <base>GameBaseData</base>
        <field>            <name>armingDelay</name>
            <desc>int armingDelay</desc>
        </field>
        <field>            <name>bounceElasticity</name>
            <desc>float bounceElasticity</desc>
        </field>
        <field>            <name>bounceFriction</name>
            <desc>float bounceFriction</desc>
        </field>
        <field>            <name>Explosion</name>
            <desc>ExplosionData Explosion</desc>
        </field>
        <field>            <name>fadeDelay</name>
            <desc>int fadeDelay</desc>
        </field>
        <field>            <name>gravityMod</name>
            <desc>float gravityMod</desc>
        </field>
        <field>            <name>hasLight</name>
            <desc>bool hasLight</desc>
        </field>
        <field>            <name>isBallistic</name>
            <desc>bool isBallistic</desc>
        </field>
        <field>            <name>lifetime</name>
            <desc>int lifetime</desc>
        </field>
        <field>            <name>lightColor</name>
            <desc>ColorF lightColor</desc>
        </field>
        <field>            <name>lightRadius</name>
            <desc>float lightRadius</desc>
        </field>
        <field>            <name>muzzleVelocity</name>
            <desc>float muzzleVelocity</desc>
        </field>
        <field>            <name>particleEmitter</name>
            <desc>ParticleEmitterData particleEmitter</desc>
        </field>
        <field>            <name>projectileShapeName</name>
            <desc>filename projectileShapeName</desc>
        </field>
        <field>            <name>scale</name>
            <desc>Point3F scale</desc>
        </field>
        <field>            <name>sound</name>
            <desc>SFXProfile sound</desc>
        </field>
        <field>            <name>velInheritFactor</name>
            <desc>float velInheritFactor</desc>
        </field>
    </class>
    <class>        <name>RemoteCommandEvent</name>
    </class>
    <class>        <name>SceneObject</name>
        <base>NetObject</base>
        <method>            <name>getForwardVector</name>
            <desc>Returns a vector indicating the direction this object is facing.</desc>
        </method>
        <method>            <name>getObjectBox</name>
            <desc>Returns the bounding box relative to the object's origin.</desc>
        </method>
        <method>            <name>getPosition</name>
            <desc>Get position of object.</desc>
        </method>
        <method>            <name>getScale</name>
            <desc>Get scaling as a Point3F.</desc>
        </method>
        <method>            <name>getTransform</name>
            <desc>Get transform of object.</desc>
        </method>
        <method>            <name>getWorldBox</name>
            <desc>Returns six fields, two Point3Fs, containing the min and max points of the worldbox.</desc>
        </method>
        <method>            <name>getWorldBoxCenter</name>
            <desc>Returns the center of the world bounding box.</desc>
        </method>
        <method>            <name>isHidden</name>
        </method>
        <method>            <name>setHidden</name>
            <args>bool show</args>
        </method>
        <method>            <name>setScale</name>
            <args>Point3F scale</args>
        </method>
        <method>            <name>setTransform</name>
            <args>Transform T</args>
        </method>
        <field>            <name>hidden</name>
            <desc>bool hidden</desc>
        </field>
        <field>            <name>position</name>
            <desc>MatrixPosition position</desc>
        </field>
        <field>            <name>reanderShadow</name>
            <desc>bool reanderShadow</desc>
        </field>
        <field>            <name>rotation</name>
            <desc>MatrixRotation rotation</desc>
        </field>
        <field>            <name>scale</name>
            <desc>Point3F scale</desc>
        </field>
    </class>
    <class>        <name>ScopeAlwaysShape</name>
        <base>StaticShape</base>
    </class>
    <class>        <name>ScriptGroup</name>
        <base>SimGroup</base>
        <field>            <name>class</name>
            <desc>string class</desc>
        </field>
        <field>            <name>superClass</name>
            <desc>string superClass</desc>
        </field>
    </class>
    <class>        <name>ScriptObject</name>
        <base>SimObject</base>
        <field>            <name>class</name>
            <desc>Class of object.</desc>
        </field>
        <field>            <name>superClass</name>
            <desc>Superclass of object.</desc>
        </field>
    </class>
    <class>        <name>SetMissionCRCEvent</name>
    </class>
    <class>        <name>SFXDescription</name>
        <base>SimDataBlock</base>
        <field>            <name>channel</name>
            <desc>int channel</desc>
        </field>
        <field>            <name>coneInsideAngle</name>
            <desc>int coneInsideAngle</desc>
        </field>
        <field>            <name>coneOutsideAngle</name>
            <desc>int coneOutsideAngle</desc>
        </field>
        <field>            <name>coneOutsideVolume</name>
            <desc>float coneOutsideVolume</desc>
        </field>
        <field>            <name>coneVector</name>
            <desc>Point3F coneVector</desc>
        </field>
        <field>            <name>is3D</name>
            <desc>bool is3D</desc>
        </field>
        <field>            <name>isLooping</name>
            <desc>bool isLooping</desc>
        </field>
        <field>            <name>isStreaming</name>
            <desc>bool isStreaming</desc>
        </field>
        <field>            <name>maxDistance</name>
            <desc>float maxDistance</desc>
        </field>
        <field>            <name>referenceDistance</name>
            <desc>float referenceDistance</desc>
        </field>
        <field>            <name>volume</name>
            <desc>float volume</desc>
        </field>
    </class>
    <class>        <name>SFXEnvironment</name>
        <base>SimDataBlock</base>
    </class>
    <class>        <name>SFXProfile</name>
        <base>SimDataBlock</base>
        <field>            <name>description</name>
            <desc>SFXDescription description</desc>
        </field>
        <field>            <name>fileName</name>
            <desc>filename fileName</desc>
        </field>
        <field>            <name>preload</name>
            <desc>bool preload</desc>
        </field>
    </class>
    <class>        <name>SFXSource</name>
        <base>SimObject</base>
        <method>            <name>getChannel</name>
            <desc>Returns the volume channel.</desc>
        </method>
        <method>            <name>isPaused</name>
            <desc>Returns true if the source is paused or false if not.</desc>
        </method>
        <method>            <name>isPlaying</name>
            <desc>Returns true if the source is playing or false if not.</desc>
        </method>
        <method>            <name>pause</name>
            <desc>Pauses playback of the source.</desc>
        </method>
        <method>            <name>play</name>
            <desc>Starts playback of the source.</desc>
        </method>
        <method>            <name>setCallback</name>
            <args> string callbackFunction </args>
            <desc>Sets the  the pitch of the source.</desc>
        </method>
        <method>            <name>setPitch</name>
            <args> F32 pitch </args>
            <desc>Scales the pitch of the source.</desc>
        </method>
        <method>            <name>setTransform</name>
            <args> xform </args>
        </method>
        <method>            <name>setVolume</name>
            <args> F32 volume </args>
            <desc>Sets the playback volume of the source.</desc>
        </method>
        <method>            <name>stop</name>
            <desc>Ends playback of the source.</desc>
        </method>
    </class>
    <class>        <name>sgDecalProjector</name>
        <base>GameBase</base>
    </class>
    <class>        <name>sgGuiTexTestCtrl</name>
        <base>GuiControl</base>
        <field>            <name>textureLevel</name>
            <desc>int textureLevel</desc>
        </field>
    </class>
    <class>        <name>sgLightObject</name>
        <base>fxLight</base>
        <method>            <name>attachToObject</name>
            <args>SimObject obj</args>
            <desc>Attach to the SimObject obj.</desc>
        </method>
        <method>            <name>detachFromObject</name>
            <desc>Detach from the object previously set by attachToObject.</desc>
        </method>
        <field>            <name>ParticleColorAttenuation</name>
            <desc>float ParticleColorAttenuation</desc>
        </field>
        <field>            <name>ParticleEmitterName</name>
            <desc>string ParticleEmitterName</desc>
        </field>
    </class>
    <class>        <name>sgLightObjectData</name>
        <base>fxLightData</base>
        <field>            <name>AdvancedLightingModel</name>
            <desc>bool AdvancedLightingModel</desc>
        </field>
        <field>            <name>AmbientRestrictZone</name>
            <desc>bool AmbientRestrictZone</desc>
        </field>
        <field>            <name>castsShadows</name>
            <desc>bool castsShadows</desc>
        </field>
        <field>            <name>DiffuseRestrictZone</name>
            <desc>bool DiffuseRestrictZone</desc>
        </field>
        <field>            <name>DoubleSidedAmbient</name>
            <desc>bool DoubleSidedAmbient</desc>
        </field>
        <field>            <name>EffectsDTSObjects</name>
            <desc>bool EffectsDTSObjects</desc>
        </field>
        <field>            <name>LightingModelName</name>
            <desc>string LightingModelName</desc>
        </field>
        <field>            <name>LocalAmbientAmount</name>
            <desc>float LocalAmbientAmount</desc>
        </field>
        <field>            <name>MountPoint</name>
            <desc>int MountPoint</desc>
        </field>
        <field>            <name>MountPosition</name>
            <desc>MatrixPosition MountPosition</desc>
        </field>
        <field>            <name>MountRotation</name>
            <desc>MatrixRotation MountRotation</desc>
        </field>
        <field>            <name>SmoothSpotLight</name>
            <desc>bool SmoothSpotLight</desc>
        </field>
        <field>            <name>SpotAngle</name>
            <desc>float SpotAngle</desc>
        </field>
        <field>            <name>SpotLight</name>
            <desc>bool SpotLight</desc>
        </field>
        <field>            <name>StaticLight</name>
            <desc>bool StaticLight</desc>
        </field>
        <field>            <name>SupportedFeatures</name>
            <desc>enumval SupportedFeatures</desc>
        </field>
        <field>            <name>UseNormals</name>
            <desc>bool UseNormals</desc>
        </field>
    </class>
    <class>        <name>sgMissionLightingFilter</name>
        <base>GameBase</base>
    </class>
    <class>        <name>sgMissionLightingFilterData</name>
        <base>GameBaseData</base>
        <field>            <name>CinematicFilter</name>
            <desc>bool CinematicFilter</desc>
        </field>
        <field>            <name>CinematicFilterAmount</name>
            <desc>float CinematicFilterAmount</desc>
        </field>
        <field>            <name>CinematicFilterReferenceColor</name>
            <desc>ColorF CinematicFilterReferenceColor</desc>
        </field>
        <field>            <name>CinematicFilterReferenceIntensity</name>
            <desc>float CinematicFilterReferenceIntensity</desc>
        </field>
        <field>            <name>LightingFilter</name>
            <desc>ColorF LightingFilter</desc>
        </field>
        <field>            <name>LightingIntensity</name>
            <desc>float LightingIntensity</desc>
        </field>
    </class>
    <class>        <name>sgUniversalStaticLight</name>
        <base>sgLightObject</base>
    </class>
    <class>        <name>sgUniversalStaticLightData</name>
        <base>sgLightObjectData</base>
    </class>
    <class>        <name>ShaderData</name>
        <base>SimObject</base>
        <method>            <name>reload</name>
            <desc>Rebuilds both the vertex and pixel shaders.</desc>
        </method>
        <field>            <name>DXPixelShaderFile</name>
            <desc>filename DXPixelShaderFile</desc>
        </field>
        <field>            <name>DXVertexShaderFile</name>
            <desc>string DXVertexShaderFile</desc>
        </field>
        <field>            <name>OGLPixelShaderFile</name>
            <desc>filename OGLPixelShaderFile</desc>
        </field>
        <field>            <name>OGLVertexShaderFile</name>
            <desc>string OGLVertexShaderFile</desc>
        </field>
        <field>            <name>pixVersion</name>
            <desc>float pixVersion</desc>
        </field>
    </class>
    <class>        <name>ShapeBase</name>
        <base>GameBase</base>
        <method>            <name>applyDamage</name>
            <args>float amt</args>
        </method>
        <method>            <name>applyImpulse</name>
            <args>Point3F Pos, VectorF vel</args>
        </method>
        <method>            <name>applyRepair</name>
            <args>float amt</args>
        </method>
        <method>            <name>canCloak</name>
        </method>
        <method>            <name>getAIRepairPoint</name>
            <desc>Get the position at which the AI should stand to repair things.</desc>
        </method>
        <method>            <name>getCameraFov</name>
        </method>
        <method>            <name>getControllingClient</name>
            <desc>Returns a GameConnection.</desc>
        </method>
        <method>            <name>getControllingObject</name>
        </method>
        <method>            <name>getDamageFlash</name>
        </method>
        <method>            <name>getDamageLevel</name>
        </method>
        <method>            <name>getDamagePercent</name>
        </method>
        <method>            <name>getDamageState</name>
        </method>
        <method>            <name>getEnergyLevel</name>
        </method>
        <method>            <name>getEnergyPercent</name>
        </method>
        <method>            <name>getEyePoint</name>
        </method>
        <method>            <name>getEyeTransform</name>
        </method>
        <method>            <name>getEyeVector</name>
        </method>
        <method>            <name>getImageAmmo</name>
            <args>int slot</args>
        </method>
        <method>            <name>getImageLoaded</name>
            <args>int slot</args>
        </method>
        <method>            <name>getImageSkinTag</name>
            <args>int slot</args>
        </method>
        <method>            <name>getImageState</name>
            <args>int slot</args>
        </method>
        <method>            <name>getImageTrigger</name>
            <args>int slot</args>
        </method>
        <method>            <name>getMountedImage</name>
            <args>int slot</args>
        </method>
        <method>            <name>getMountedObject</name>
            <args>int slot</args>
        </method>
        <method>            <name>getMountedObjectCount</name>
        </method>
        <method>            <name>getMountedObjectNode</name>
            <args>int node</args>
        </method>
        <method>            <name>getMountNodeObject</name>
            <args>int node</args>
        </method>
        <method>            <name>getMountSlot</name>
            <args>ShapeBaseImageData db</args>
        </method>
        <method>            <name>getMuzzlePoint</name>
            <args>int slot</args>
        </method>
        <method>            <name>getMuzzleVector</name>
            <args>int slot</args>
        </method>
        <method>            <name>getObjectMount</name>
            <desc>Returns the ShapeBase we're mounted on.</desc>
        </method>
        <method>            <name>getPendingImage</name>
            <args>int slot</args>
        </method>
        <method>            <name>getRechargeRate</name>
        </method>
        <method>            <name>getRepairRate</name>
        </method>
        <method>            <name>getShapeName</name>
        </method>
        <method>            <name>getSkinName</name>
        </method>
        <method>            <name>getSlotTransform</name>
            <args>int slot</args>
        </method>
        <method>            <name>getVelocity</name>
        </method>
        <method>            <name>getWhiteOut</name>
        </method>
        <method>            <name>isCloaked</name>
        </method>
        <method>            <name>isDestroyed</name>
        </method>
        <method>            <name>isDisabled</name>
            <desc>True if the state is not Enabled.</desc>
        </method>
        <method>            <name>isEnabled</name>
        </method>
        <method>            <name>isImageFiring</name>
            <args>int slot</args>
        </method>
        <method>            <name>isImageMounted</name>
            <args>ShapeBaseImageData db</args>
        </method>
        <method>            <name>isMounted</name>
            <desc>Are we mounted?</desc>
        </method>
        <method>            <name>mountImage</name>
            <args>ShapeBaseImageData image, int slot, bool loaded=true, string skinTag=NULL</args>
        </method>
        <method>            <name>mountObject</name>
            <args> ShapeBase object, int slot </args>
            <desc>Mount ourselves on an object in the specified slot.</desc>
        </method>
        <method>            <name>pauseThread</name>
            <args>int slot</args>
        </method>
        <method>            <name>playAudio</name>
            <args>int slot, SFXProfile profile</args>
        </method>
        <method>            <name>playThread</name>
            <args>int slot, string sequenceName</args>
        </method>
        <method>            <name>setCameraFov</name>
            <args>float fov</args>
        </method>
        <method>            <name>setCloaked</name>
            <args>bool isCloaked</args>
        </method>
        <method>            <name>setDamageFlash</name>
            <args>float lvl</args>
        </method>
        <method>            <name>setDamageLevel</name>
            <args>float level</args>
        </method>
        <method>            <name>setDamageState</name>
            <args>string state</args>
        </method>
        <method>            <name>setDamageVector</name>
            <args>Vector3F origin</args>
        </method>
        <method>            <name>setEnergyLevel</name>
            <args>float level</args>
        </method>
        <method>            <name>setImageAmmo</name>
            <args>int slot, bool hasAmmo</args>
        </method>
        <method>            <name>setImageLoaded</name>
            <args>int slot, bool loaded</args>
        </method>
        <method>            <name>setImageTrigger</name>
            <args>int slot, bool isTriggered</args>
        </method>
        <method>            <name>setInvincibleMode</name>
            <args>float time, float speed</args>
        </method>
        <method>            <name>setRechargeRate</name>
            <args>float rate</args>
        </method>
        <method>            <name>setRepairRate</name>
            <args>float amt</args>
        </method>
        <method>            <name>setShapeName</name>
            <args>string tag</args>
        </method>
        <method>            <name>setSkinName</name>
            <args>string tag</args>
        </method>
        <method>            <name>setThreadDir</name>
            <args>int slot, bool isForward</args>
        </method>
        <method>            <name>setVelocity</name>
            <args>Vector3F vel</args>
        </method>
        <method>            <name>setWhiteOut</name>
            <args>float flashLevel</args>
        </method>
        <method>            <name>startFade</name>
            <args> int fadeTimeMS, int fadeDelayMS, bool fadeOut </args>
        </method>
        <method>            <name>stopAudio</name>
            <args>int slot</args>
        </method>
        <method>            <name>stopThread</name>
            <args>int slot</args>
        </method>
        <method>            <name>unmount</name>
            <desc>Unmount from the currently mounted object if any.</desc>
        </method>
        <method>            <name>unmountImage</name>
            <args>int slot</args>
        </method>
        <method>            <name>unmountObject</name>
            <args>ShapeBase obj</args>
            <desc>Unmount an object from ourselves.</desc>
        </method>
    </class>
    <class>        <name>ShapeBaseData</name>
        <base>GameBaseData</base>
        <method>            <name>checkDeployPos</name>
            <args>Transform xform</args>
        </method>
        <method>            <name>getDeployTransform</name>
            <args>Point3F pos, Point3F normal</args>
        </method>
        <field>            <name>aiAvoidThis</name>
            <desc>bool aiAvoidThis</desc>
        </field>
        <field>            <name>astrolabe</name>
            <desc>bool astrolabe</desc>
        </field>
        <field>            <name>astrolabePrime</name>
            <desc>bool astrolabePrime</desc>
        </field>
        <field>            <name>cameraDefaultFov</name>
            <desc>float cameraDefaultFov</desc>
        </field>
        <field>            <name>cameraMaxDist</name>
            <desc>float cameraMaxDist</desc>
        </field>
        <field>            <name>cameraMaxFov</name>
            <desc>float cameraMaxFov</desc>
        </field>
        <field>            <name>cameraMinDist</name>
            <desc>float cameraMinDist</desc>
        </field>
        <field>            <name>cameraMinFov</name>
            <desc>float cameraMinFov</desc>
        </field>
        <field>            <name>computeCRC</name>
            <desc>bool computeCRC</desc>
        </field>
        <field>            <name>Debris</name>
            <desc>DebrisData Debris</desc>
        </field>
        <field>            <name>debrisShapeName</name>
            <desc>filename debrisShapeName</desc>
        </field>
        <field>            <name>density</name>
            <desc>float density</desc>
        </field>
        <field>            <name>destroyedLevel</name>
            <desc>float destroyedLevel</desc>
        </field>
        <field>            <name>disabledLevel</name>
            <desc>float disabledLevel</desc>
        </field>
        <field>            <name>drag</name>
            <desc>float drag</desc>
        </field>
        <field>            <name>dynamicReflection</name>
            <desc>bool dynamicReflection</desc>
        </field>
        <field>            <name>emap</name>
            <desc>bool emap</desc>
        </field>
        <field>            <name>Explosion</name>
            <desc>ExplosionData Explosion</desc>
        </field>
        <field>            <name>firstPersonOnly</name>
            <desc>bool firstPersonOnly</desc>
        </field>
        <field>            <name>gemAuraTextureName</name>
            <desc>filename gemAuraTextureName</desc>
        </field>
        <field>            <name>glass</name>
            <desc>bool glass</desc>
        </field>
        <field>            <name>hudImageName</name>
            <desc>filename hudImageName</desc>
        </field>
        <field>            <name>hudImageNameEnemy</name>
            <desc>filename hudImageNameEnemy</desc>
        </field>
        <field>            <name>hudImageNameFriendly</name>
            <desc>filename hudImageNameFriendly</desc>
        </field>
        <field>            <name>hudRenderAlways</name>
            <desc>bool hudRenderAlways</desc>
        </field>
        <field>            <name>hudRenderCenter</name>
            <desc>bool hudRenderCenter</desc>
        </field>
        <field>            <name>hudRenderDistance</name>
            <desc>bool hudRenderDistance</desc>
        </field>
        <field>            <name>hudRenderModulated</name>
            <desc>bool hudRenderModulated</desc>
        </field>
        <field>            <name>hudRenderName</name>
            <desc>bool hudRenderName</desc>
        </field>
        <field>            <name>inheritEnergyFromMount</name>
            <desc>bool inheritEnergyFromMount</desc>
        </field>
        <field>            <name>isInvincible</name>
            <desc>bool isInvincible</desc>
        </field>
        <field>            <name>mass</name>
            <desc>float mass</desc>
        </field>
        <field>            <name>maxDamage</name>
            <desc>float maxDamage</desc>
        </field>
        <field>            <name>maxEnergy</name>
            <desc>float maxEnergy</desc>
        </field>
        <field>            <name>observeThroughObject</name>
            <desc>bool observeThroughObject</desc>
        </field>
        <field>            <name>referenceColor</name>
            <desc>ColorF referenceColor</desc>
        </field>
        <field>            <name>renderGemAura</name>
            <desc>bool renderGemAura</desc>
        </field>
        <field>            <name>renderWhenDestroyed</name>
            <desc>bool renderWhenDestroyed</desc>
        </field>
        <field>            <name>repairRate</name>
            <desc>float repairRate</desc>
        </field>
        <field>            <name>shadowAnimationFrameSkip</name>
            <desc>int shadowAnimationFrameSkip</desc>
        </field>
        <field>            <name>shadowBias</name>
            <desc>float shadowBias</desc>
        </field>
        <field>            <name>shadowCanAnimate</name>
            <desc>bool shadowCanAnimate</desc>
        </field>
        <field>            <name>shadowCanMove</name>
            <desc>bool shadowCanMove</desc>
        </field>
        <field>            <name>shadowEnable</name>
            <desc>bool shadowEnable</desc>
        </field>
        <field>            <name>shadowMaxVisibleDistance</name>
            <desc>float shadowMaxVisibleDistance</desc>
        </field>
        <field>            <name>shadowProjectionDistance</name>
            <desc>float shadowProjectionDistance</desc>
        </field>
        <field>            <name>shadowSelfShadow</name>
            <desc>bool shadowSelfShadow</desc>
        </field>
        <field>            <name>shadowSize</name>
            <desc>int shadowSize</desc>
        </field>
        <field>            <name>shadowSphereAdjust</name>
            <desc>float shadowSphereAdjust</desc>
        </field>
        <field>            <name>shapeFile</name>
            <desc>filename shapeFile</desc>
        </field>
        <field>            <name>underwaterExplosion</name>
            <desc>ExplosionData underwaterExplosion</desc>
        </field>
        <field>            <name>useEyePoint</name>
            <desc>bool useEyePoint</desc>
        </field>
    </class>
    <class>        <name>ShapeBaseImageData</name>
        <base>GameBaseData</base>
        <field>            <name>accuFire</name>
            <desc>bool accuFire</desc>
        </field>
        <field>            <name>casing</name>
            <desc>DebrisData casing</desc>
        </field>
        <field>            <name>cloakable</name>
            <desc>bool cloakable</desc>
        </field>
        <field>            <name>computeCRC</name>
            <desc>bool computeCRC</desc>
        </field>
        <field>            <name>correctMuzzleVector</name>
            <desc>bool correctMuzzleVector</desc>
        </field>
        <field>            <name>emap</name>
            <desc>bool emap</desc>
        </field>
        <field>            <name>eyeOffset</name>
            <desc>MatrixPosition eyeOffset</desc>
        </field>
        <field>            <name>eyeRotation</name>
            <desc>MatrixRotation eyeRotation</desc>
        </field>
        <field>            <name>firstPerson</name>
            <desc>bool firstPerson</desc>
        </field>
        <field>            <name>lightColor</name>
            <desc>ColorF lightColor</desc>
        </field>
        <field>            <name>lightRadius</name>
            <desc>float lightRadius</desc>
        </field>
        <field>            <name>LightTime</name>
            <desc>int LightTime</desc>
        </field>
        <field>            <name>lightType</name>
            <desc>enumval lightType</desc>
        </field>
        <field>            <name>mass</name>
            <desc>float mass</desc>
        </field>
        <field>            <name>minEnergy</name>
            <desc>float minEnergy</desc>
        </field>
        <field>            <name>MountPoint</name>
            <desc>int MountPoint</desc>
        </field>
        <field>            <name>offset</name>
            <desc>MatrixPosition offset</desc>
        </field>
        <field>            <name>Projectile</name>
            <desc>ProjectileData Projectile</desc>
        </field>
        <field>            <name>rotation</name>
            <desc>MatrixRotation rotation</desc>
        </field>
        <field>            <name>shapeFile</name>
            <desc>filename shapeFile</desc>
        </field>
        <field>            <name>shellExitDir</name>
            <desc>Point3F shellExitDir</desc>
        </field>
        <field>            <name>shellExitVariance</name>
            <desc>float shellExitVariance</desc>
        </field>
        <field>            <name>shellVelocity</name>
            <desc>float shellVelocity</desc>
        </field>
        <field>            <name>stateAllowImageChange</name>
            <desc>bool stateAllowImageChange</desc>
        </field>
        <field>            <name>stateDirection</name>
            <desc>bool stateDirection</desc>
        </field>
        <field>            <name>stateEjectShell</name>
            <desc>bool stateEjectShell</desc>
        </field>
        <field>            <name>stateEmitter</name>
            <desc>ParticleEmitterData stateEmitter</desc>
        </field>
        <field>            <name>stateEmitterNode</name>
            <desc>int stateEmitterNode</desc>
        </field>
        <field>            <name>stateEmitterTime</name>
            <desc>float stateEmitterTime</desc>
        </field>
        <field>            <name>stateEnergyDrain</name>
            <desc>float stateEnergyDrain</desc>
        </field>
        <field>            <name>stateFire</name>
            <desc>bool stateFire</desc>
        </field>
        <field>            <name>stateIgnoreLoadedForReady</name>
            <desc>bool stateIgnoreLoadedForReady</desc>
        </field>
        <field>            <name>stateLoadedFlag</name>
            <desc>enumval stateLoadedFlag</desc>
        </field>
        <field>            <name>stateName</name>
            <desc>caseString stateName</desc>
        </field>
        <field>            <name>stateRecoil</name>
            <desc>enumval stateRecoil</desc>
        </field>
        <field>            <name>stateScript</name>
            <desc>caseString stateScript</desc>
        </field>
        <field>            <name>stateSequence</name>
            <desc>string stateSequence</desc>
        </field>
        <field>            <name>stateSequenceRandomFlash</name>
            <desc>bool stateSequenceRandomFlash</desc>
        </field>
        <field>            <name>stateSound</name>
            <desc>SFXProfile stateSound</desc>
        </field>
        <field>            <name>stateSpinThread</name>
            <desc>enumval stateSpinThread</desc>
        </field>
        <field>            <name>stateTimeoutValue</name>
            <desc>float stateTimeoutValue</desc>
        </field>
        <field>            <name>stateTransitionOnAmmo</name>
            <desc>string stateTransitionOnAmmo</desc>
        </field>
        <field>            <name>stateTransitionOnLoaded</name>
            <desc>string stateTransitionOnLoaded</desc>
        </field>
        <field>            <name>stateTransitionOnNoAmmo</name>
            <desc>string stateTransitionOnNoAmmo</desc>
        </field>
        <field>            <name>stateTransitionOnNoTarget</name>
            <desc>string stateTransitionOnNoTarget</desc>
        </field>
        <field>            <name>stateTransitionOnNotLoaded</name>
            <desc>string stateTransitionOnNotLoaded</desc>
        </field>
        <field>            <name>stateTransitionOnNotWet</name>
            <desc>string stateTransitionOnNotWet</desc>
        </field>
        <field>            <name>stateTransitionOnTarget</name>
            <desc>string stateTransitionOnTarget</desc>
        </field>
        <field>            <name>stateTransitionOnTimeout</name>
            <desc>string stateTransitionOnTimeout</desc>
        </field>
        <field>            <name>stateTransitionOnTriggerDown</name>
            <desc>string stateTransitionOnTriggerDown</desc>
        </field>
        <field>            <name>stateTransitionOnTriggerUp</name>
            <desc>string stateTransitionOnTriggerUp</desc>
        </field>
        <field>            <name>stateTransitionOnWet</name>
            <desc>string stateTransitionOnWet</desc>
        </field>
        <field>            <name>stateWaitForTimeout</name>
            <desc>bool stateWaitForTimeout</desc>
        </field>
        <field>            <name>usesEnergy</name>
            <desc>bool usesEnergy</desc>
        </field>
    </class>
    <class>        <name>ShowTSCtrl</name>
        <base>GuiTSCtrl</base>
    </class>
    <class>        <name>Sim2DAudioEvent</name>
    </class>
    <class>        <name>Sim3DAudioEvent</name>
    </class>
    <class>        <name>SimChunk</name>
        <base>SimGroup</base>
    </class>
    <class>        <name>SimDataBlock</name>
        <base>SimObject</base>
    </class>
    <class>        <name>SimDataBlockEvent</name>
    </class>
    <class>        <name>SimGroup</name>
        <base>SimSet</base>
    </class>
    <class>        <name>SimObject</name>
        <method>            <name>delete</name>
        </method>
        <method>            <name>dump</name>
            <desc>: dump available fields and functions of object to console.  use dumpF for just the fields.</desc>
        </method>
        <method>            <name>dumpF</name>
            <desc>: dump available fields of object to console.</desc>
        </method>
        <method>            <name>getClassName</name>
        </method>
        <method>            <name>getGroup</name>
        </method>
        <method>            <name>getId</name>
        </method>
        <method>            <name>getName</name>
        </method>
        <method>            <name>getType</name>
        </method>
        <method>            <name>hasFunction</name>
            <args>funcName</args>
        </method>
        <method>            <name>isMethod</name>
            <args>string method name</args>
        </method>
        <method>            <name>save</name>
            <args>fileName, &lt;selectedOnly&gt;</args>
        </method>
        <method>            <name>schedule</name>
            <args>time, command, &lt;arg1...argN&gt;</args>
        </method>
        <method>            <name>setName</name>
            <args>newName</args>
        </method>
    </class>
    <class>        <name>SimpleMessageEvent</name>
    </class>
    <class>        <name>SimpleNetObject</name>
        <base>NetObject</base>
        <method>            <name>setMessage</name>
            <args>string msg</args>
        </method>
    </class>
    <class>        <name>SimSet</name>
        <base>SimObject</base>
        <method>            <name>add</name>
            <args>obj1,...</args>
        </method>
        <method>            <name>bringToFront</name>
            <args>object</args>
        </method>
        <method>            <name>clear</name>
        </method>
        <method>            <name>getCount</name>
        </method>
        <method>            <name>getObject</name>
            <args>objIndex</args>
        </method>
        <method>            <name>isMember</name>
            <args>object</args>
        </method>
        <method>            <name>listObjects</name>
        </method>
        <method>            <name>pushToBack</name>
            <args>object</args>
        </method>
        <method>            <name>remove</name>
            <args>obj1,...</args>
        </method>
        <method>            <name>setHidden</name>
            <args>bool show</args>
        </method>
    </class>
    <class>        <name>Sky</name>
        <base>SceneObject</base>
        <method>            <name>getWindVelocity</name>
        </method>
        <method>            <name>realFog</name>
            <args> bool show, float max, float min, float speed </args>
        </method>
        <method>            <name>setSkyMaterial</name>
            <args>material</args>
        </method>
        <method>            <name>setWindVelocity</name>
            <args>float x, float y, float z</args>
        </method>
        <method>            <name>stormClouds</name>
            <args>bool show, float duration</args>
        </method>
        <method>            <name>stormCloudsShow</name>
            <args>bool showClouds</args>
        </method>
        <method>            <name>stormFog</name>
            <args>float percent, float duration</args>
        </method>
        <method>            <name>stormFogShow</name>
            <args>bool show</args>
        </method>
        <field>            <name>cloudHeightPer</name>
            <desc>float cloudHeightPer</desc>
        </field>
        <field>            <name>cloudSpeed1</name>
            <desc>float cloudSpeed1</desc>
        </field>
        <field>            <name>cloudSpeed2</name>
            <desc>float cloudSpeed2</desc>
        </field>
        <field>            <name>cloudSpeed3</name>
            <desc>float cloudSpeed3</desc>
        </field>
        <field>            <name>cloudText</name>
            <desc>string cloudText</desc>
        </field>
        <field>            <name>fogColor</name>
            <desc>ColorF fogColor</desc>
        </field>
        <field>            <name>fogDistance</name>
            <desc>float fogDistance</desc>
        </field>
        <field>            <name>fogStorm1</name>
            <desc>bool fogStorm1</desc>
        </field>
        <field>            <name>fogStorm2</name>
            <desc>bool fogStorm2</desc>
        </field>
        <field>            <name>fogStorm3</name>
            <desc>bool fogStorm3</desc>
        </field>
        <field>            <name>fogVolume1</name>
            <desc>Point3F fogVolume1</desc>
        </field>
        <field>            <name>fogVolume2</name>
            <desc>Point3F fogVolume2</desc>
        </field>
        <field>            <name>fogVolume3</name>
            <desc>Point3F fogVolume3</desc>
        </field>
        <field>            <name>materialList</name>
            <desc>filename materialList</desc>
        </field>
        <field>            <name>noRenderBans</name>
            <desc>bool noRenderBans</desc>
        </field>
        <field>            <name>renderBanOffsetHeight</name>
            <desc>float renderBanOffsetHeight</desc>
        </field>
        <field>            <name>renderBottomTexture</name>
            <desc>bool renderBottomTexture</desc>
        </field>
        <field>            <name>skyGlow</name>
            <desc>bool skyGlow</desc>
        </field>
        <field>            <name>skyGlowColor</name>
            <desc>ColorF skyGlowColor</desc>
        </field>
        <field>            <name>SkySolidColor</name>
            <desc>ColorF SkySolidColor</desc>
        </field>
        <field>            <name>useSkyTextures</name>
            <desc>bool useSkyTextures</desc>
        </field>
        <field>            <name>visibleDistance</name>
            <desc>float visibleDistance</desc>
        </field>
        <field>            <name>windVelocity</name>
            <desc>Point3F windVelocity</desc>
        </field>
    </class>
    <class>        <name>SpawnSphere</name>
        <base>MissionMarker</base>
        <method>            <name>getGemDatablock</name>
            <desc>- gets the gem datablock</desc>
        </method>
        <field>            <name>gemDataBlock</name>
            <desc>GameBaseData gemDataBlock</desc>
        </field>
        <field>            <name>indoorWeight</name>
            <desc>float indoorWeight</desc>
        </field>
        <field>            <name>outdoorWeight</name>
            <desc>float outdoorWeight</desc>
        </field>
        <field>            <name>Radius</name>
            <desc>float Radius</desc>
        </field>
        <field>            <name>sphereWeight</name>
            <desc>float sphereWeight</desc>
        </field>
    </class>
    <class>        <name>StaticShape</name>
        <base>ShapeBase</base>
        <method>            <name>getPoweredState</name>
        </method>
        <method>            <name>setPoweredState</name>
            <args>bool isPowered</args>
        </method>
        <field>            <name>customAmbientLighting</name>
            <desc>ColorF customAmbientLighting</desc>
        </field>
        <field>            <name>lightGroupName</name>
            <desc>string lightGroupName</desc>
        </field>
        <field>            <name>receiveLMLighting</name>
            <desc>bool receiveLMLighting</desc>
        </field>
        <field>            <name>receiveSunLight</name>
            <desc>bool receiveSunLight</desc>
        </field>
        <field>            <name>useCustomAmbientLighting</name>
            <desc>bool useCustomAmbientLighting</desc>
        </field>
    </class>
    <class>        <name>StaticShapeData</name>
        <base>ShapeBaseData</base>
        <field>            <name>dynamicType</name>
            <desc>int dynamicType</desc>
        </field>
        <field>            <name>forceArc</name>
            <desc>float forceArc</desc>
        </field>
        <field>            <name>forceNode</name>
            <desc>int forceNode</desc>
        </field>
        <field>            <name>forceRadius</name>
            <desc>float forceRadius</desc>
        </field>
        <field>            <name>forceStrength</name>
            <desc>float forceStrength</desc>
        </field>
        <field>            <name>forceType</name>
            <desc>enumval forceType</desc>
        </field>
        <field>            <name>forceVector</name>
            <desc>Point3F forceVector</desc>
        </field>
        <field>            <name>noIndividualDamage</name>
            <desc>bool noIndividualDamage</desc>
        </field>
        <field>            <name>scopeAlways</name>
            <desc>bool scopeAlways</desc>
        </field>
    </class>
    <class>        <name>Sun</name>
        <base>NetObject</base>
        <method>            <name>apply</name>
        </method>
        <field>            <name>ambient</name>
            <desc>ColorF ambient</desc>
        </field>
        <field>            <name>bloomAmount</name>
            <desc>float bloomAmount</desc>
        </field>
        <field>            <name>bloomCutOff</name>
            <desc>float bloomCutOff</desc>
        </field>
        <field>            <name>bloomSeedAmount</name>
            <desc>float bloomSeedAmount</desc>
        </field>
        <field>            <name>castsShadows</name>
            <desc>bool castsShadows</desc>
        </field>
        <field>            <name>color</name>
            <desc>ColorF color</desc>
        </field>
        <field>            <name>direction</name>
            <desc>Point3F direction</desc>
        </field>
        <field>            <name>DRLHighDynamicRange</name>
            <desc>bool DRLHighDynamicRange</desc>
        </field>
        <field>            <name>DRLMax</name>
            <desc>float DRLMax</desc>
        </field>
        <field>            <name>DRLMin</name>
            <desc>float DRLMin</desc>
        </field>
        <field>            <name>DRLMultiplier</name>
            <desc>float DRLMultiplier</desc>
        </field>
        <field>            <name>DRLTarget</name>
            <desc>float DRLTarget</desc>
        </field>
        <field>            <name>useBloom</name>
            <desc>bool useBloom</desc>
        </field>
        <field>            <name>useDynamicRangeLighting</name>
            <desc>bool useDynamicRangeLighting</desc>
        </field>
        <field>            <name>useToneMapping</name>
            <desc>bool useToneMapping</desc>
        </field>
    </class>
    <class>        <name>TCPObject</name>
        <base>SimObject</base>
        <method>            <name>connect</name>
            <args>string addr</args>
            <desc>Connect to the given address.</desc>
        </method>
        <method>            <name>disconnect</name>
            <desc>Disconnect from whatever we're connected to, if anything.</desc>
        </method>
        <method>            <name>listen</name>
            <args>int port</args>
            <desc>Start listening on the specified ports for connections.</desc>
        </method>
        <method>            <name>send</name>
            <args>...</args>
            <desc>Parameters are transmitted as strings, one at a time.</desc>
        </method>
    </class>
    <class>        <name>Terraformer</name>
        <base>SimObject</base>
        <method>            <name>blend</name>
            <args>int srcA, int srcB, int dest_register, float factor, string operation</args>
            <desc>Perform a blending operation on the terrain.

@param   srcA           First source for operation.
@param   srcB           Second source for operation.
@param   dest_register  Destination register for blend.
@param   factor         Blending factor, from 0-1.
@param   operation      One of: add, subtract, max, min, multiply. Default is add.</desc>
        </method>
        <method>            <name>canyon</name>
            <args>int dest_register, int frequency, float turbulence, int seed</args>
        </method>
        <method>            <name>clearRegister</name>
            <args>int r</args>
        </method>
        <method>            <name>erodeHydraulic</name>
            <args>int src_register, int dst_register, int iterations, Filter arr </args>
        </method>
        <method>            <name>erodeThermal</name>
            <args>int src_register, int dst_register, float slope, float materialLoss, int iterations </args>
        </method>
        <method>            <name>fBm</name>
            <args>int r, int freq, float roughness, string detail, int seed</args>
            <desc>Run an fBm pass.

@param   roughness   From 0.0-1.0
@param   detail      One of 'Very Low', 'Low', 'Normal', 'High', or 'Very High'</desc>
        </method>
        <method>            <name>filter</name>
            <args>int src_register, int dst_register, Filter arr</args>
        </method>
        <method>            <name>generateSeed</name>
        </method>
        <method>            <name>getCameraPosition</name>
            <desc>Get the position of the camera.</desc>
        </method>
        <method>            <name>loadGreyscale</name>
            <args>int register, string filename</args>
        </method>
        <method>            <name>maskFBm</name>
            <args>int dest_register, int frequency, float roughness, int seed, Filter arr, bool distort_factor, int distort_reg</args>
        </method>
        <method>            <name>maskHeight</name>
            <args>int src_register, int dst_register, Filter arr, bool distort_factor, int distort_register</args>
        </method>
        <method>            <name>maskSlope</name>
            <args>int src_register, int dst_register, Filter arr, bool distort_factor, int distort_register</args>
        </method>
        <method>            <name>maskWater</name>
            <args>int src_register, int dst_register, bool distort_factor, int distort_reg</args>
        </method>
        <method>            <name>mergeMasks</name>
            <args> src_array, int dst_register</args>
        </method>
        <method>            <name>preview</name>
            <args>GuiTerrPreviewCtrl destination, int register</args>
        </method>
        <method>            <name>previewScaled</name>
            <args>GuiTerrPreviewCtrl destination, int source</args>
        </method>
        <method>            <name>rigidMultiFractal</name>
            <args>int r, int freq, float roughness, string detail, int seed</args>
            <desc>Run a rigid multi fractal pass.

@param   roughness   From 0.0-1.0
@param   detail      One of 'Very Low', 'Low', 'Normal', 'High', or 'Very High'</desc>
        </method>
        <method>            <name>saveGreyscale</name>
            <args>int register, string filename</args>
        </method>
        <method>            <name>saveHeightField</name>
            <args>int register, string filename</args>
        </method>
        <method>            <name>scale</name>
            <args>int src_register, int dst_register, float min, float max</args>
        </method>
        <method>            <name>setCameraPosition</name>
            <args>float x, float y, float z=0</args>
        </method>
        <method>            <name>setMaterials</name>
            <args> src_array, material_array </args>
        </method>
        <method>            <name>setShift</name>
            <args>int x, int y</args>
        </method>
        <method>            <name>setTerrain</name>
            <args>int register</args>
        </method>
        <method>            <name>setTerrainInfo</name>
            <args>int blockSize, int tileSize, float minHeight, float heightRange, float waterPercent</args>
        </method>
        <method>            <name>sinus</name>
            <args>int r, Filter a, int seed</args>
        </method>
        <method>            <name>smooth</name>
            <args>int src_register, int dst_register, float factor, int iterations</args>
        </method>
        <method>            <name>smoothRidges</name>
            <args>int src_register, int dst_register, float factor, int iterations</args>
        </method>
        <method>            <name>smoothWater</name>
            <args>int src_register, int dst_register, float factor, int iterations</args>
        </method>
        <method>            <name>terrainData</name>
            <args>int register</args>
        </method>
        <method>            <name>terrainFile</name>
            <args>int register, string filename</args>
        </method>
        <method>            <name>turbulence</name>
            <args>int src_register, int dst_register, float factor, float radius</args>
        </method>
    </class>
    <class>        <name>TerrainBlock</name>
        <base>SceneObject</base>
        <method>            <name>getHeightfieldScript</name>
            <desc>- gets the heightfield script associated with the terrain file.</desc>
        </method>
        <method>            <name>getTextureScript</name>
            <desc>- gets the texture script associated with the terrain file.</desc>
        </method>
        <method>            <name>save</name>
            <args>string fileName</args>
            <desc>- saves the terrain block's terrain file to the specified file name.</desc>
        </method>
        <method>            <name>setHeightfieldScript</name>
            <args>string script</args>
            <desc>- sets the heightfield script associated with this terrain file.</desc>
        </method>
        <method>            <name>setTextureScript</name>
            <args>string script</args>
            <desc>- sets the texture script associated with this terrain file.</desc>
        </method>
        <field>            <name>bumpOffset</name>
            <desc>float bumpOffset</desc>
        </field>
        <field>            <name>bumpScale</name>
            <desc>float bumpScale</desc>
        </field>
        <field>            <name>bumpTexture</name>
            <desc>filename bumpTexture</desc>
        </field>
        <field>            <name>detailTexture</name>
            <desc>filename detailTexture</desc>
        </field>
        <field>            <name>emptySquares</name>
            <desc>intList emptySquares</desc>
        </field>
        <field>            <name>squareSize</name>
            <desc>int squareSize</desc>
        </field>
        <field>            <name>terrainFile</name>
            <desc>filename terrainFile</desc>
        </field>
        <field>            <name>zeroBumpScale</name>
            <desc>int zeroBumpScale</desc>
        </field>
    </class>
    <class>        <name>TerrainEditor</name>
        <base>EditTSCtrl</base>
        <method>            <name>attachTerrain</name>
            <args>TerrainBlock terrain</args>
        </method>
        <method>            <name>buildMaterialMap</name>
        </method>
        <method>            <name>clearModifiedFlags</name>
        </method>
        <method>            <name>clearSelection</name>
        </method>
        <method>            <name>getActionName</name>
            <args>int num</args>
        </method>
        <method>            <name>getBrushPos</name>
            <desc>Returns a Point2I.</desc>
        </method>
        <method>            <name>getCurrentAction</name>
        </method>
        <method>            <name>getNumActions</name>
        </method>
        <method>            <name>getNumTextures</name>
        </method>
        <method>            <name>getTerrainMaterials</name>
            <desc>gets the list of current terrain materials.</desc>
        </method>
        <method>            <name>getTextureName</name>
            <args>int index</args>
        </method>
        <method>            <name>markEmptySquares</name>
        </method>
        <method>            <name>mirrorTerrain</name>
        </method>
        <method>            <name>popBaseMaterialInfo</name>
        </method>
        <method>            <name>processAction</name>
            <args>string action=NULL</args>
        </method>
        <method>            <name>pushBaseMaterialInfo</name>
        </method>
        <method>            <name>redo</name>
        </method>
        <method>            <name>resetSelWeights</name>
            <args>bool clear</args>
        </method>
        <method>            <name>setAction</name>
            <args>string action_name</args>
        </method>
        <method>            <name>setBrushPos</name>
            <args>int x, int y</args>
        </method>
        <method>            <name>setBrushSize</name>
            <args>int w, int h</args>
        </method>
        <method>            <name>setBrushType</name>
            <args>string type</args>
            <desc>One of box, ellipse, selection.</desc>
        </method>
        <method>            <name>setLoneBaseMaterial</name>
            <args>string materialListBaseName</args>
        </method>
        <method>            <name>setTerraformOverlay</name>
            <args>bool overlayEnable</args>
            <desc>- sets the terraformer current heightmap to draw as an overlay over the current terrain.</desc>
        </method>
        <method>            <name>setTerrainMaterials</name>
            <args>string matList</args>
            <desc>sets the list of current terrain materials.</desc>
        </method>
        <method>            <name>undo</name>
        </method>
        <field>            <name>adjustHeightMouseScale</name>
            <desc>float adjustHeightMouseScale</desc>
        </field>
        <field>            <name>adjustHeightVal</name>
            <desc>float adjustHeightVal</desc>
        </field>
        <field>            <name>borderFillColor</name>
            <desc>ColorI borderFillColor</desc>
        </field>
        <field>            <name>borderFrameColor</name>
            <desc>ColorI borderFrameColor</desc>
        </field>
        <field>            <name>borderHeight</name>
            <desc>float borderHeight</desc>
        </field>
        <field>            <name>borderLineMode</name>
            <desc>bool borderLineMode</desc>
        </field>
        <field>            <name>enableSoftBrushes</name>
            <desc>bool enableSoftBrushes</desc>
        </field>
        <field>            <name>isDirty</name>
            <desc>bool isDirty</desc>
        </field>
        <field>            <name>isMissionDirty</name>
            <desc>bool isMissionDirty</desc>
        </field>
        <field>            <name>materialGroup</name>
            <desc>int materialGroup</desc>
        </field>
        <field>            <name>paintMaterial</name>
            <desc>caseString paintMaterial</desc>
        </field>
        <field>            <name>processUsesBrush</name>
            <desc>bool processUsesBrush</desc>
        </field>
        <field>            <name>renderBorder</name>
            <desc>bool renderBorder</desc>
        </field>
        <field>            <name>renderVertexSelection</name>
            <desc>bool renderVertexSelection</desc>
        </field>
        <field>            <name>scaleVal</name>
            <desc>float scaleVal</desc>
        </field>
        <field>            <name>selectionHidden</name>
            <desc>bool selectionHidden</desc>
        </field>
        <field>            <name>setHeightVal</name>
            <desc>float setHeightVal</desc>
        </field>
        <field>            <name>smoothFactor</name>
            <desc>float smoothFactor</desc>
        </field>
        <field>            <name>softSelectDefaultFilter</name>
            <desc>string softSelectDefaultFilter</desc>
        </field>
        <field>            <name>softSelectFilter</name>
            <desc>string softSelectFilter</desc>
        </field>
        <field>            <name>softSelectRadius</name>
            <desc>float softSelectRadius</desc>
        </field>
    </class>
    <class>        <name>TextChunk</name>
        <base>SimChunk</base>
        <field>            <name>textData</name>
            <desc>string textData</desc>
        </field>
    </class>
    <class>        <name>Trigger</name>
        <base>GameBase</base>
        <method>            <name>getNumObjects</name>
        </method>
        <method>            <name>getObject</name>
            <args>int idx</args>
        </method>
        <field>            <name>polyhedron</name>
            <desc>TriggerPolyhedron polyhedron</desc>
        </field>
    </class>
    <class>        <name>TriggerData</name>
        <base>GameBaseData</base>
        <method>            <name>onEnterTrigger</name>
            <args> Trigger t, SimObject intruder</args>
        </method>
        <method>            <name>onLeaveTrigger</name>
            <args> Trigger t, SimObject intruder</args>
        </method>
        <method>            <name>onTickTrigger</name>
            <args>Trigger t</args>
        </method>
        <field>            <name>marbleGravityCheck</name>
            <desc>bool marbleGravityCheck</desc>
        </field>
        <field>            <name>tickPeriodMS</name>
            <desc>int tickPeriodMS</desc>
        </field>
    </class>
    <class>        <name>TSShapeConstructor</name>
        <base>SimDataBlock</base>
        <field>            <name>baseShape</name>
            <desc>filename baseShape</desc>
        </field>
        <field>            <name>sequence0</name>
            <desc>filename sequence0</desc>
        </field>
        <field>            <name>sequence1</name>
            <desc>filename sequence1</desc>
        </field>
        <field>            <name>sequence10</name>
            <desc>filename sequence10</desc>
        </field>
        <field>            <name>sequence100</name>
            <desc>filename sequence100</desc>
        </field>
        <field>            <name>sequence101</name>
            <desc>filename sequence101</desc>
        </field>
        <field>            <name>sequence102</name>
            <desc>filename sequence102</desc>
        </field>
        <field>            <name>sequence103</name>
            <desc>filename sequence103</desc>
        </field>
        <field>            <name>sequence104</name>
            <desc>filename sequence104</desc>
        </field>
        <field>            <name>sequence105</name>
            <desc>filename sequence105</desc>
        </field>
        <field>            <name>sequence106</name>
            <desc>filename sequence106</desc>
        </field>
        <field>            <name>sequence107</name>
            <desc>filename sequence107</desc>
        </field>
        <field>            <name>sequence108</name>
            <desc>filename sequence108</desc>
        </field>
        <field>            <name>sequence109</name>
            <desc>filename sequence109</desc>
        </field>
        <field>            <name>sequence11</name>
            <desc>filename sequence11</desc>
        </field>
        <field>            <name>sequence110</name>
            <desc>filename sequence110</desc>
        </field>
        <field>            <name>sequence111</name>
            <desc>filename sequence111</desc>
        </field>
        <field>            <name>sequence112</name>
            <desc>filename sequence112</desc>
        </field>
        <field>            <name>sequence113</name>
            <desc>filename sequence113</desc>
        </field>
        <field>            <name>sequence114</name>
            <desc>filename sequence114</desc>
        </field>
        <field>            <name>sequence115</name>
            <desc>filename sequence115</desc>
        </field>
        <field>            <name>sequence116</name>
            <desc>filename sequence116</desc>
        </field>
        <field>            <name>sequence117</name>
            <desc>filename sequence117</desc>
        </field>
        <field>            <name>sequence118</name>
            <desc>filename sequence118</desc>
        </field>
        <field>            <name>sequence119</name>
            <desc>filename sequence119</desc>
        </field>
        <field>            <name>sequence12</name>
            <desc>filename sequence12</desc>
        </field>
        <field>            <name>sequence120</name>
            <desc>filename sequence120</desc>
        </field>
        <field>            <name>sequence121</name>
            <desc>filename sequence121</desc>
        </field>
        <field>            <name>sequence122</name>
            <desc>filename sequence122</desc>
        </field>
        <field>            <name>sequence123</name>
            <desc>filename sequence123</desc>
        </field>
        <field>            <name>sequence124</name>
            <desc>filename sequence124</desc>
        </field>
        <field>            <name>sequence125</name>
            <desc>filename sequence125</desc>
        </field>
        <field>            <name>sequence126</name>
            <desc>filename sequence126</desc>
        </field>
        <field>            <name>sequence13</name>
            <desc>filename sequence13</desc>
        </field>
        <field>            <name>sequence14</name>
            <desc>filename sequence14</desc>
        </field>
        <field>            <name>sequence15</name>
            <desc>filename sequence15</desc>
        </field>
        <field>            <name>sequence16</name>
            <desc>filename sequence16</desc>
        </field>
        <field>            <name>sequence17</name>
            <desc>filename sequence17</desc>
        </field>
        <field>            <name>sequence18</name>
            <desc>filename sequence18</desc>
        </field>
        <field>            <name>sequence19</name>
            <desc>filename sequence19</desc>
        </field>
        <field>            <name>sequence2</name>
            <desc>filename sequence2</desc>
        </field>
        <field>            <name>sequence20</name>
            <desc>filename sequence20</desc>
        </field>
        <field>            <name>sequence21</name>
            <desc>filename sequence21</desc>
        </field>
        <field>            <name>sequence22</name>
            <desc>filename sequence22</desc>
        </field>
        <field>            <name>sequence23</name>
            <desc>filename sequence23</desc>
        </field>
        <field>            <name>sequence24</name>
            <desc>filename sequence24</desc>
        </field>
        <field>            <name>sequence25</name>
            <desc>filename sequence25</desc>
        </field>
        <field>            <name>sequence26</name>
            <desc>filename sequence26</desc>
        </field>
        <field>            <name>sequence27</name>
            <desc>filename sequence27</desc>
        </field>
        <field>            <name>sequence28</name>
            <desc>filename sequence28</desc>
        </field>
        <field>            <name>sequence29</name>
            <desc>filename sequence29</desc>
        </field>
        <field>            <name>sequence3</name>
            <desc>filename sequence3</desc>
        </field>
        <field>            <name>sequence30</name>
            <desc>filename sequence30</desc>
        </field>
        <field>            <name>sequence31</name>
            <desc>filename sequence31</desc>
        </field>
        <field>            <name>sequence32</name>
            <desc>filename sequence32</desc>
        </field>
        <field>            <name>sequence33</name>
            <desc>filename sequence33</desc>
        </field>
        <field>            <name>sequence34</name>
            <desc>filename sequence34</desc>
        </field>
        <field>            <name>sequence35</name>
            <desc>filename sequence35</desc>
        </field>
        <field>            <name>sequence36</name>
            <desc>filename sequence36</desc>
        </field>
        <field>            <name>sequence37</name>
            <desc>filename sequence37</desc>
        </field>
        <field>            <name>sequence38</name>
            <desc>filename sequence38</desc>
        </field>
        <field>            <name>sequence39</name>
            <desc>filename sequence39</desc>
        </field>
        <field>            <name>sequence4</name>
            <desc>filename sequence4</desc>
        </field>
        <field>            <name>sequence40</name>
            <desc>filename sequence40</desc>
        </field>
        <field>            <name>sequence41</name>
            <desc>filename sequence41</desc>
        </field>
        <field>            <name>sequence42</name>
            <desc>filename sequence42</desc>
        </field>
        <field>            <name>sequence43</name>
            <desc>filename sequence43</desc>
        </field>
        <field>            <name>sequence44</name>
            <desc>filename sequence44</desc>
        </field>
        <field>            <name>sequence45</name>
            <desc>filename sequence45</desc>
        </field>
        <field>            <name>sequence46</name>
            <desc>filename sequence46</desc>
        </field>
        <field>            <name>sequence47</name>
            <desc>filename sequence47</desc>
        </field>
        <field>            <name>sequence48</name>
            <desc>filename sequence48</desc>
        </field>
        <field>            <name>sequence49</name>
            <desc>filename sequence49</desc>
        </field>
        <field>            <name>sequence5</name>
            <desc>filename sequence5</desc>
        </field>
        <field>            <name>sequence50</name>
            <desc>filename sequence50</desc>
        </field>
        <field>            <name>sequence51</name>
            <desc>filename sequence51</desc>
        </field>
        <field>            <name>sequence52</name>
            <desc>filename sequence52</desc>
        </field>
        <field>            <name>sequence53</name>
            <desc>filename sequence53</desc>
        </field>
        <field>            <name>sequence54</name>
            <desc>filename sequence54</desc>
        </field>
        <field>            <name>sequence55</name>
            <desc>filename sequence55</desc>
        </field>
        <field>            <name>sequence56</name>
            <desc>filename sequence56</desc>
        </field>
        <field>            <name>sequence57</name>
            <desc>filename sequence57</desc>
        </field>
        <field>            <name>sequence58</name>
            <desc>filename sequence58</desc>
        </field>
        <field>            <name>sequence59</name>
            <desc>filename sequence59</desc>
        </field>
        <field>            <name>sequence6</name>
            <desc>filename sequence6</desc>
        </field>
        <field>            <name>sequence60</name>
            <desc>filename sequence60</desc>
        </field>
        <field>            <name>sequence61</name>
            <desc>filename sequence61</desc>
        </field>
        <field>            <name>sequence62</name>
            <desc>filename sequence62</desc>
        </field>
        <field>            <name>sequence63</name>
            <desc>filename sequence63</desc>
        </field>
        <field>            <name>sequence64</name>
            <desc>filename sequence64</desc>
        </field>
        <field>            <name>sequence65</name>
            <desc>filename sequence65</desc>
        </field>
        <field>            <name>sequence66</name>
            <desc>filename sequence66</desc>
        </field>
        <field>            <name>sequence67</name>
            <desc>filename sequence67</desc>
        </field>
        <field>            <name>sequence68</name>
            <desc>filename sequence68</desc>
        </field>
        <field>            <name>sequence69</name>
            <desc>filename sequence69</desc>
        </field>
        <field>            <name>sequence7</name>
            <desc>filename sequence7</desc>
        </field>
        <field>            <name>sequence70</name>
            <desc>filename sequence70</desc>
        </field>
        <field>            <name>sequence71</name>
            <desc>filename sequence71</desc>
        </field>
        <field>            <name>sequence72</name>
            <desc>filename sequence72</desc>
        </field>
        <field>            <name>sequence73</name>
            <desc>filename sequence73</desc>
        </field>
        <field>            <name>sequence74</name>
            <desc>filename sequence74</desc>
        </field>
        <field>            <name>sequence75</name>
            <desc>filename sequence75</desc>
        </field>
        <field>            <name>sequence76</name>
            <desc>filename sequence76</desc>
        </field>
        <field>            <name>sequence77</name>
            <desc>filename sequence77</desc>
        </field>
        <field>            <name>sequence78</name>
            <desc>filename sequence78</desc>
        </field>
        <field>            <name>sequence79</name>
            <desc>filename sequence79</desc>
        </field>
        <field>            <name>sequence8</name>
            <desc>filename sequence8</desc>
        </field>
        <field>            <name>sequence80</name>
            <desc>filename sequence80</desc>
        </field>
        <field>            <name>sequence81</name>
            <desc>filename sequence81</desc>
        </field>
        <field>            <name>sequence82</name>
            <desc>filename sequence82</desc>
        </field>
        <field>            <name>sequence83</name>
            <desc>filename sequence83</desc>
        </field>
        <field>            <name>sequence84</name>
            <desc>filename sequence84</desc>
        </field>
        <field>            <name>sequence85</name>
            <desc>filename sequence85</desc>
        </field>
        <field>            <name>sequence86</name>
            <desc>filename sequence86</desc>
        </field>
        <field>            <name>sequence87</name>
            <desc>filename sequence87</desc>
        </field>
        <field>            <name>sequence88</name>
            <desc>filename sequence88</desc>
        </field>
        <field>            <name>sequence89</name>
            <desc>filename sequence89</desc>
        </field>
        <field>            <name>sequence9</name>
            <desc>filename sequence9</desc>
        </field>
        <field>            <name>sequence90</name>
            <desc>filename sequence90</desc>
        </field>
        <field>            <name>sequence91</name>
            <desc>filename sequence91</desc>
        </field>
        <field>            <name>sequence92</name>
            <desc>filename sequence92</desc>
        </field>
        <field>            <name>sequence93</name>
            <desc>filename sequence93</desc>
        </field>
        <field>            <name>sequence94</name>
            <desc>filename sequence94</desc>
        </field>
        <field>            <name>sequence95</name>
            <desc>filename sequence95</desc>
        </field>
        <field>            <name>sequence96</name>
            <desc>filename sequence96</desc>
        </field>
        <field>            <name>sequence97</name>
            <desc>filename sequence97</desc>
        </field>
        <field>            <name>sequence98</name>
            <desc>filename sequence98</desc>
        </field>
        <field>            <name>sequence99</name>
            <desc>filename sequence99</desc>
        </field>
    </class>
    <class>        <name>TSStatic</name>
        <base>SceneObject</base>
        <field>            <name>customAmbientLighting</name>
            <desc>ColorF customAmbientLighting</desc>
        </field>
        <field>            <name>lightGroupName</name>
            <desc>string lightGroupName</desc>
        </field>
        <field>            <name>receiveLMLighting</name>
            <desc>bool receiveLMLighting</desc>
        </field>
        <field>            <name>receiveSunLight</name>
            <desc>bool receiveSunLight</desc>
        </field>
        <field>            <name>shapeName</name>
            <desc>filename shapeName</desc>
        </field>
        <field>            <name>useCustomAmbientLighting</name>
            <desc>bool useCustomAmbientLighting</desc>
        </field>
    </class>
    <class>        <name>UnknownChunk</name>
        <base>SimChunk</base>
    </class>
    <class>        <name>Vehicle</name>
        <base>ShapeBase</base>
        <field>            <name>disableMove</name>
            <desc>bool disableMove</desc>
        </field>
    </class>
    <class>        <name>VehicleBlocker</name>
        <base>SceneObject</base>
        <field>            <name>Dimensions</name>
            <desc>Point3F Dimensions</desc>
        </field>
    </class>
    <class>        <name>VehicleData</name>
        <base>ShapeBaseData</base>
        <field>            <name>bodyFriction</name>
            <desc>float bodyFriction</desc>
        </field>
        <field>            <name>bodyRestitution</name>
            <desc>float bodyRestitution</desc>
        </field>
        <field>            <name>cameraDecay</name>
            <desc>float cameraDecay</desc>
        </field>
        <field>            <name>cameraLag</name>
            <desc>float cameraLag</desc>
        </field>
        <field>            <name>cameraOffset</name>
            <desc>float cameraOffset</desc>
        </field>
        <field>            <name>cameraRoll</name>
            <desc>bool cameraRoll</desc>
        </field>
        <field>            <name>collDamageMultiplier</name>
            <desc>float collDamageMultiplier</desc>
        </field>
        <field>            <name>collDamageThresholdVel</name>
            <desc>float collDamageThresholdVel</desc>
        </field>
        <field>            <name>collisionTol</name>
            <desc>float collisionTol</desc>
        </field>
        <field>            <name>contactTol</name>
            <desc>float contactTol</desc>
        </field>
        <field>            <name>damageEmitter</name>
            <desc>ParticleEmitterData damageEmitter</desc>
        </field>
        <field>            <name>damageEmitterOffset</name>
            <desc>Point3F damageEmitterOffset</desc>
        </field>
        <field>            <name>damageLevelTolerance</name>
            <desc>float damageLevelTolerance</desc>
        </field>
        <field>            <name>dustEmitter</name>
            <desc>ParticleEmitterData dustEmitter</desc>
        </field>
        <field>            <name>dustHeight</name>
            <desc>float dustHeight</desc>
        </field>
        <field>            <name>exitingWater</name>
            <desc>SFXProfile exitingWater</desc>
        </field>
        <field>            <name>exitSplashSoundVelocity</name>
            <desc>float exitSplashSoundVelocity</desc>
        </field>
        <field>            <name>hardImpactSound</name>
            <desc>SFXProfile hardImpactSound</desc>
        </field>
        <field>            <name>hardImpactSpeed</name>
            <desc>float hardImpactSpeed</desc>
        </field>
        <field>            <name>hardSplashSoundVelocity</name>
            <desc>float hardSplashSoundVelocity</desc>
        </field>
        <field>            <name>impactWaterEasy</name>
            <desc>SFXProfile impactWaterEasy</desc>
        </field>
        <field>            <name>impactWaterHard</name>
            <desc>SFXProfile impactWaterHard</desc>
        </field>
        <field>            <name>impactWaterMedium</name>
            <desc>SFXProfile impactWaterMedium</desc>
        </field>
        <field>            <name>integration</name>
            <desc>int integration</desc>
        </field>
        <field>            <name>jetEnergyDrain</name>
            <desc>float jetEnergyDrain</desc>
        </field>
        <field>            <name>jetForce</name>
            <desc>float jetForce</desc>
        </field>
        <field>            <name>massBox</name>
            <desc>Point3F massBox</desc>
        </field>
        <field>            <name>massCenter</name>
            <desc>Point3F massCenter</desc>
        </field>
        <field>            <name>maxDrag</name>
            <desc>float maxDrag</desc>
        </field>
        <field>            <name>maxSteeringAngle</name>
            <desc>float maxSteeringAngle</desc>
        </field>
        <field>            <name>mediumSplashSoundVelocity</name>
            <desc>float mediumSplashSoundVelocity</desc>
        </field>
        <field>            <name>minDrag</name>
            <desc>float minDrag</desc>
        </field>
        <field>            <name>minImpactSpeed</name>
            <desc>float minImpactSpeed</desc>
        </field>
        <field>            <name>minJetEnergy</name>
            <desc>float minJetEnergy</desc>
        </field>
        <field>            <name>minRollSpeed</name>
            <desc>float minRollSpeed</desc>
        </field>
        <field>            <name>numDmgEmitterAreas</name>
            <desc>float numDmgEmitterAreas</desc>
        </field>
        <field>            <name>softImpactSound</name>
            <desc>SFXProfile softImpactSound</desc>
        </field>
        <field>            <name>softImpactSpeed</name>
            <desc>float softImpactSpeed</desc>
        </field>
        <field>            <name>softSplashSoundVelocity</name>
            <desc>float softSplashSoundVelocity</desc>
        </field>
        <field>            <name>splashEmitter</name>
            <desc>ParticleEmitterData splashEmitter</desc>
        </field>
        <field>            <name>splashFreqMod</name>
            <desc>float splashFreqMod</desc>
        </field>
        <field>            <name>splashVelEpsilon</name>
            <desc>float splashVelEpsilon</desc>
        </field>
        <field>            <name>triggerDustHeight</name>
            <desc>float triggerDustHeight</desc>
        </field>
        <field>            <name>waterWakeSound</name>
            <desc>SFXProfile waterWakeSound</desc>
        </field>
    </class>
    <class>        <name>VolumeLight</name>
        <base>sgLightObject</base>
        <field>            <name>footColor</name>
            <desc>ColorF footColor</desc>
        </field>
        <field>            <name>lpDistance</name>
            <desc>float lpDistance</desc>
        </field>
        <field>            <name>shootDistance</name>
            <desc>float shootDistance</desc>
        </field>
        <field>            <name>subdivideU</name>
            <desc>int subdivideU</desc>
        </field>
        <field>            <name>subdivideV</name>
            <desc>int subdivideV</desc>
        </field>
        <field>            <name>tailColor</name>
            <desc>ColorF tailColor</desc>
        </field>
        <field>            <name>texture</name>
            <desc>filename texture</desc>
        </field>
        <field>            <name>xExtent</name>
            <desc>float xExtent</desc>
        </field>
        <field>            <name>yExtent</name>
            <desc>float yExtent</desc>
        </field>
    </class>
    <class>        <name>WaterBlock</name>
        <base>SceneObject</base>
        <field>            <name>baseColor</name>
            <desc>ColorI baseColor</desc>
        </field>
        <field>            <name>clarity</name>
            <desc>float clarity</desc>
        </field>
        <field>            <name>fresnelBias</name>
            <desc>float fresnelBias</desc>
        </field>
        <field>            <name>fresnelPower</name>
            <desc>float fresnelPower</desc>
        </field>
        <field>            <name>fullReflect</name>
            <desc>bool fullReflect</desc>
        </field>
        <field>            <name>gridSize</name>
            <desc>float gridSize</desc>
        </field>
        <field>            <name>reflectTexSize</name>
            <desc>int reflectTexSize</desc>
        </field>
        <field>            <name>renderFogMesh</name>
            <desc>bool renderFogMesh</desc>
        </field>
        <field>            <name>surfMaterial</name>
            <desc>string surfMaterial</desc>
        </field>
        <field>            <name>underwaterColor</name>
            <desc>ColorI underwaterColor</desc>
        </field>
        <field>            <name>waveDir</name>
            <desc>Point2F waveDir</desc>
        </field>
        <field>            <name>waveSpeed</name>
            <desc>float waveSpeed</desc>
        </field>
        <field>            <name>waveTexScale</name>
            <desc>Point2F waveTexScale</desc>
        </field>
    </class>
    <class>        <name>WayPoint</name>
        <base>MissionMarker</base>
        <field>            <name>name</name>
            <desc>caseString name</desc>
        </field>
        <field>            <name>team</name>
            <desc>WayPointTeam team</desc>
        </field>
    </class>
    <class>        <name>WheeledVehicle</name>
        <base>Vehicle</base>
        <method>            <name>getWheelCount</name>
        </method>
        <method>            <name>setWheelPowered</name>
            <args>wheel#,bool</args>
        </method>
        <method>            <name>setWheelSpring</name>
            <args>wheel#,spring</args>
        </method>
        <method>            <name>setWheelSteering</name>
            <args>wheel#,float</args>
        </method>
        <method>            <name>setWheelTire</name>
            <args>wheel#,tire</args>
        </method>
    </class>
    <class>        <name>WheeledVehicleData</name>
        <base>VehicleData</base>
        <field>            <name>brakeTorque</name>
            <desc>float brakeTorque</desc>
        </field>
        <field>            <name>engineBrake</name>
            <desc>float engineBrake</desc>
        </field>
        <field>            <name>engineSound</name>
            <desc>SFXProfile engineSound</desc>
        </field>
        <field>            <name>engineTorque</name>
            <desc>float engineTorque</desc>
        </field>
        <field>            <name>jetSound</name>
            <desc>SFXProfile jetSound</desc>
        </field>
        <field>            <name>maxWheelSpeed</name>
            <desc>float maxWheelSpeed</desc>
        </field>
        <field>            <name>squealSound</name>
            <desc>SFXProfile squealSound</desc>
        </field>
        <field>            <name>tireEmitter</name>
            <desc>ParticleEmitterData tireEmitter</desc>
        </field>
        <field>            <name>WheelImpactSound</name>
            <desc>SFXProfile WheelImpactSound</desc>
        </field>
    </class>
    <class>        <name>WheeledVehicleSpring</name>
        <base>SimDataBlock</base>
        <field>            <name>antiSwayForce</name>
            <desc>float antiSwayForce</desc>
        </field>
        <field>            <name>damping</name>
            <desc>float damping</desc>
        </field>
        <field>            <name>force</name>
            <desc>float force</desc>
        </field>
        <field>            <name>length</name>
            <desc>float length</desc>
        </field>
    </class>
    <class>        <name>WheeledVehicleTire</name>
        <base>SimDataBlock</base>
        <field>            <name>kineticFriction</name>
            <desc>float kineticFriction</desc>
        </field>
        <field>            <name>lateralDamping</name>
            <desc>float lateralDamping</desc>
        </field>
        <field>            <name>lateralForce</name>
            <desc>float lateralForce</desc>
        </field>
        <field>            <name>lateralRelaxation</name>
            <desc>float lateralRelaxation</desc>
        </field>
        <field>            <name>logitudinalRelaxation</name>
            <desc>float logitudinalRelaxation</desc>
        </field>
        <field>            <name>longitudinalDamping</name>
            <desc>float longitudinalDamping</desc>
        </field>
        <field>            <name>longitudinalForce</name>
            <desc>float longitudinalForce</desc>
        </field>
        <field>            <name>mass</name>
            <desc>float mass</desc>
        </field>
        <field>            <name>Radius</name>
            <desc>float Radius</desc>
        </field>
        <field>            <name>restitution</name>
            <desc>float restitution</desc>
        </field>
        <field>            <name>shapeFile</name>
            <desc>filename shapeFile</desc>
        </field>
        <field>            <name>staticFriction</name>
            <desc>float staticFriction</desc>
        </field>
    </class>
    <class>        <name>WorldEditor</name>
        <base>EditTSCtrl</base>
        <method>            <name>addUndoState</name>
        </method>
        <method>            <name>canPasteSelection</name>
        </method>
        <method>            <name>clearIgnoreList</name>
        </method>
        <method>            <name>clearSelection</name>
        </method>
        <method>            <name>copySelection</name>
        </method>
        <method>            <name>deleteSelection</name>
        </method>
        <method>            <name>dropSelection</name>
        </method>
        <method>            <name>getMode</name>
        </method>
        <method>            <name>getSelectedObject</name>
            <args>int index</args>
        </method>
        <method>            <name>getSelectionCentroid</name>
        </method>
        <method>            <name>getSelectionSize</name>
        </method>
        <method>            <name>hideSelection</name>
            <args>bool hide</args>
        </method>
        <method>            <name>ignoreObjClass</name>
            <args>string class_name, ...</args>
        </method>
        <method>            <name>lockSelection</name>
            <args>bool lock</args>
        </method>
        <method>            <name>pasteSelection</name>
        </method>
        <method>            <name>redirectConsole</name>
            <args> int objID </args>
        </method>
        <method>            <name>redo</name>
        </method>
        <method>            <name>selectObject</name>
            <args>SceneObject obj</args>
        </method>
        <method>            <name>setMode</name>
            <args>string newMode</args>
            <desc>Sets the mode to one of move, rotate, scale.</desc>
        </method>
        <method>            <name>undo</name>
        </method>
        <method>            <name>unselectObject</name>
            <args>SceneObject obj</args>
        </method>
        <field>            <name>axisGizmoActive</name>
            <desc>bool axisGizmoActive</desc>
        </field>
        <field>            <name>axisGizmoMaxScreenLen</name>
            <desc>int axisGizmoMaxScreenLen</desc>
        </field>
        <field>            <name>boundingBoxCollision</name>
            <desc>bool boundingBoxCollision</desc>
        </field>
        <field>            <name>defaultHandle</name>
            <desc>filename defaultHandle</desc>
        </field>
        <field>            <name>dragRectColor</name>
            <desc>ColorI dragRectColor</desc>
        </field>
        <field>            <name>dropType</name>
            <desc>enumval dropType</desc>
        </field>
        <field>            <name>faceSelectColor</name>
            <desc>ColorI faceSelectColor</desc>
        </field>
        <field>            <name>gridColor</name>
            <desc>ColorI gridColor</desc>
        </field>
        <field>            <name>gridSize</name>
            <desc>Point3F gridSize</desc>
        </field>
        <field>            <name>isDirty</name>
            <desc>bool isDirty</desc>
        </field>
        <field>            <name>lockedHandle</name>
            <desc>filename lockedHandle</desc>
        </field>
        <field>            <name>maxScaleFactor</name>
            <desc>float maxScaleFactor</desc>
        </field>
        <field>            <name>minScaleFactor</name>
            <desc>float minScaleFactor</desc>
        </field>
        <field>            <name>mouseMoveScale</name>
            <desc>float mouseMoveScale</desc>
        </field>
        <field>            <name>mouseRotateScale</name>
            <desc>float mouseRotateScale</desc>
        </field>
        <field>            <name>mouseScaleScale</name>
            <desc>float mouseScaleScale</desc>
        </field>
        <field>            <name>objectsUseBoxCenter</name>
            <desc>bool objectsUseBoxCenter</desc>
        </field>
        <field>            <name>objectTextColor</name>
            <desc>ColorI objectTextColor</desc>
        </field>
        <field>            <name>objMouseOverColor</name>
            <desc>ColorI objMouseOverColor</desc>
        </field>
        <field>            <name>objMouseOverSelectColor</name>
            <desc>ColorI objMouseOverSelectColor</desc>
        </field>
        <field>            <name>objSelectColor</name>
            <desc>ColorI objSelectColor</desc>
        </field>
        <field>            <name>objTextFormat</name>
            <desc>string objTextFormat</desc>
        </field>
        <field>            <name>planarMovement</name>
            <desc>bool planarMovement</desc>
        </field>
        <field>            <name>planeDim</name>
            <desc>float planeDim</desc>
        </field>
        <field>            <name>popupBackgroundColor</name>
            <desc>ColorI popupBackgroundColor</desc>
        </field>
        <field>            <name>popupTextColor</name>
            <desc>ColorI popupTextColor</desc>
        </field>
        <field>            <name>projectDistance</name>
            <desc>float projectDistance</desc>
        </field>
        <field>            <name>renderNav</name>
            <desc>bool renderNav</desc>
        </field>
        <field>            <name>renderObjHandle</name>
            <desc>bool renderObjHandle</desc>
        </field>
        <field>            <name>renderObjText</name>
            <desc>bool renderObjText</desc>
        </field>
        <field>            <name>renderPlane</name>
            <desc>bool renderPlane</desc>
        </field>
        <field>            <name>renderPlaneHashes</name>
            <desc>bool renderPlaneHashes</desc>
        </field>
        <field>            <name>renderPopupBackground</name>
            <desc>bool renderPopupBackground</desc>
        </field>
        <field>            <name>renderSelectionBox</name>
            <desc>bool renderSelectionBox</desc>
        </field>
        <field>            <name>rotationSnap</name>
            <desc>float rotationSnap</desc>
        </field>
        <field>            <name>selectHandle</name>
            <desc>filename selectHandle</desc>
        </field>
        <field>            <name>selectionBoxColor</name>
            <desc>ColorI selectionBoxColor</desc>
        </field>
        <field>            <name>selectionLocked</name>
            <desc>bool selectionLocked</desc>
        </field>
        <field>            <name>showMousePopupInfo</name>
            <desc>bool showMousePopupInfo</desc>
        </field>
        <field>            <name>snapRotations</name>
            <desc>bool snapRotations</desc>
        </field>
        <field>            <name>snapToGrid</name>
            <desc>bool snapToGrid</desc>
        </field>
        <field>            <name>toggleIgnoreList</name>
            <desc>bool toggleIgnoreList</desc>
        </field>
        <field>            <name>undoLimit</name>
            <desc>int undoLimit</desc>
        </field>
    </class>
    <function>        <name>_sgCreateDecal</name>
        <args>Point3F pos, Point3F tandir, Point3F norm, Point3F scale, decalDataBlock</args>
        <desc>- this method must be called on the client side!</desc>
    </function>
    <function>        <name>_sgDropDecal</name>
        <args>Point3F pos, Point3F tandir, Point3F norm, Point3F scale, decalDataBlock</args>
        <desc>- this method must be called on the client side! This method drops a decal onto the interior or terrain directly below the given position.</desc>
    </function>
    <function>        <name>activateDirectInput</name>
        <desc>Activate input. (ie, grab the mouse again so the user can play our game.</desc>
    </function>
    <function>        <name>activateKeyboard</name>
    </function>
    <function>        <name>activatePackage</name>
        <args>packageName</args>
    </function>
    <function>        <name>addBadWord</name>
        <args>someReallyNastyWord</args>
    </function>
    <function>        <name>addMaterialMapping</name>
        <args>string matName, ...</args>
        <desc>Set up a material mapping. See MaterialPropertyMap for details.</desc>
    </function>
    <function>        <name>addTaggedString</name>
        <args>string str</args>
    </function>
    <function>        <name>aiAddPlayer</name>
        <args> 'playerName'[, 'AIClassType'] </args>
    </function>
    <function>        <name>aiConnect</name>
        <args>...</args>
        <desc>Make a new AIConnection, and pass arguments to the onConnect script callback.</desc>
    </function>
    <function>        <name>allowConnections</name>
        <args>bool</args>
    </function>
    <function>        <name>atlasConvertTextureTOC</name>
        <args>inFile, outFile, format</args>
        <desc>Convert the single texture TOC contained in inFile to be format format, and write the results into new atlas file outFile. Options for format are: 0=JPEG,1=PNG,2=DDS.</desc>
    </function>
    <function>        <name>atlasDumpFileInfo</name>
        <args>atlasFile</args>
        <desc>Dump information about the specified Atlas file, including TOC and efficiency information.</desc>
    </function>
    <function>        <name>atlasEmitCastRayTest</name>
        <args>pos</args>
        <desc>- draw a bunch of debug raycasts from the specified point.</desc>
    </function>
    <function>        <name>atlasGenerateBlenderTerrain</name>
        <args>outFile, inGeometryFile, inOpacityFile, inLightmapFile, virtualTexSize, sourceImage0, sourceImage1, sourceImage2, ..., sourceImageN</args>
    </function>
    <function>        <name>atlasGenerateGeometryFromHeightfield</name>
        <args>atlasOutFile, inHeightfield, hfSize, gridSpacing, patchSize</args>
        <desc>- generate terrain geometry to atlasOutFile based on the heightfield.</desc>
    </function>
    <function>        <name>atlasGenerateTextureTOCFromLargeJPEG</name>
        <args>jpegFile, treeDepth, outFile</args>
        <desc>Generate a texture TOC from a single large JPEG image. The image will be stored into a quadtree treeDepth deep (ie, cut into a grid treeDepth^2 tiles on a side). outFile is the name of a new .atlas file which will be created to store this data.</desc>
    </function>
    <function>        <name>atlasGenerateTextureTOCFromTiles</name>
        <args>leafCount, tileMask, outFile, outFormat</args>
        <desc>- Generate a texture TOC from a set of tiles. leafCount is the size of the grid of tiles on a side. tileMask is the path for the tiles (no extension) with %d for x and y, ie, 'demo/alpha/Alpha1_x%dy%d'. outFile is the file to output a new .atlas file to.</desc>
    </function>
    <function>        <name>atlasGenerateUniqueTerrain</name>
        <args>out, geometry, texture</args>
        <desc>Generate a terrain with a unique texture schema using the specified geometry and texture atlas files.</desc>
    </function>
    <function>        <name>AtlasGeomChunk_dumpIOStatistics</name>
        <desc>- report IO statistics about Atlas geometry chunks.</desc>
    </function>
    <function>        <name>atlasOldGenerateChunkFileFromRaw16</name>
        <args>srcFile, size, squareSize, vertScale, destFile, error, treeDepth</args>
        <desc>Create a chunk file from a raw 16 bit heightfield of the given square size and vertical scale.</desc>
    </function>
    <function>        <name>backtrace</name>
        <desc>Print the call stack.</desc>
    </function>
    <function>        <name>buildTaggedString</name>
        <args>string format, ...</args>
    </function>
    <function>        <name>calcExplosionCoverage</name>
        <args>Point3F source, SceneObject originator, bitset coverageMask</args>
    </function>
    <function>        <name>call</name>
        <args>funcName [,args ...]</args>
    </function>
    <function>        <name>cancel</name>
        <args>eventId</args>
    </function>
    <function>        <name>cancelAll</name>
        <desc>cancel(objectId)</desc>
    </function>
    <function>        <name>cancelServerQuery</name>
    </function>
    <function>        <name>cleanDetailManager</name>
    </function>
    <function>        <name>clearClientPaths</name>
    </function>
    <function>        <name>clearServerPaths</name>
    </function>
    <function>        <name>cls</name>
        <desc>Clear the screen.</desc>
    </function>
    <function>        <name>collapseEscape</name>
        <args>text</args>
    </function>
    <function>        <name>commandToClient</name>
        <args>NetConnection client, string func, ...</args>
    </function>
    <function>        <name>commandToServer</name>
        <args>string func, ...</args>
        <desc>Send a command to the server.</desc>
    </function>
    <function>        <name>compile</name>
        <args>fileName</args>
    </function>
    <function>        <name>containerBoxEmpty</name>
        <args>bitset mask, Point3F center, float xRadius, float yRadius, float zRadius</args>
        <desc>See if any objects of given types are present in box of given extent.

@note Extent parameter is last since only one radius is often needed. If one radius is provided, the yRadius and zRadius are assumed to be the same.
@param  mask   Indicates the type of objects we are checking against.
@param  center Center of box.
@param  xRadius See above.
@param  yRadius See above.
@param  zRadius See above.</desc>
    </function>
    <function>        <name>containerFindFirst</name>
        <args>bitset type, Point3F point, float x, float y, float z</args>
        <desc>Find objects matching the bitmask type within a box centered at point, with extents x, y, z.

Returns the first object found; thereafter, you can get more results using containerFindNext().</desc>
    </function>
    <function>        <name>containerFindNext</name>
        <desc>Get more results from a previous call to containerFindFirst().</desc>
    </function>
    <function>        <name>containerRayCast</name>
        <args> Point3F start, Point3F end, bitset mask, SceneObject exempt=NULL </args>
        <desc>Cast a ray from start to end, checking for collision against items matching mask.

If exempt is specified, then it is temporarily excluded from collision checks (For instance, you might want to exclude the player if said player was firing a weapon.)
@returns A string containing either null, if nothing was struck, or these fields:
- The ID of the object that was struck.
- The x, y, z position that it was struck.
- The x, y, z of the normal of the face that was struck.</desc>
    </function>
    <function>        <name>containerSearchCurrDist</name>
        <desc>Get distance of the center of the current item from the center of the current initContainerRadiusSearch.</desc>
    </function>
    <function>        <name>containerSearchCurrRadiusDist</name>
        <desc>Get the distance of the closest point of the current item from the center of the current initContainerRadiusSearch.</desc>
    </function>
    <function>        <name>containerSearchNext</name>
        <desc>Get next item from a search started with initContainerRadiusSearch.</desc>
    </function>
    <function>        <name>containsBadWords</name>
        <args>text</args>
    </function>
    <function>        <name>ContentQuery</name>
        <args>[contentCategory]</args>
    </function>
    <function>        <name>countBits</name>
        <desc>count the number of bits in the specified 32 bit integer</desc>
    </function>
    <function>        <name>createCanvas</name>
        <args>string windowTitle</args>
        <desc>Create the game window/canvas, with the specified window title.</desc>
    </function>
    <function>        <name>dbgSetParameters</name>
        <args>int port, string password, bool waitForClient</args>
        <desc>Open a debug server port on the specified port, requiring the specified password, and optionally waiting for the debug client to connect.</desc>
    </function>
    <function>        <name>deactivateDirectInput</name>
        <desc>Deactivate input. (ie, ungrab the mouse so the user can do other things.</desc>
    </function>
    <function>        <name>deactivateKeyboard</name>
    </function>
    <function>        <name>deactivatePackage</name>
        <args>packageName</args>
    </function>
    <function>        <name>debug</name>
    </function>
    <function>        <name>deleteDataBlocks</name>
        <desc>Delete all the datablocks we've downloaded. This is usually done in preparation of downloading a new set of datablocks,  such as occurs on a mission change, but it's also good post-mission cleanup.</desc>
    </function>
    <function>        <name>deleteVariables</name>
        <args>wildCard</args>
    </function>
    <function>        <name>detag</name>
        <args>textTagString</args>
    </function>
    <function>        <name>disableJoystick</name>
    </function>
    <function>        <name>disableMouse</name>
    </function>
    <function>        <name>disableXInput</name>
    </function>
    <function>        <name>DNetSetLogging</name>
        <args>bool enabled</args>
    </function>
    <function>        <name>doChunkGen</name>
        <desc>Test chunk generation.</desc>
    </function>
    <function>        <name>doesAllowConnections</name>
    </function>
    <function>        <name>dumpConsoleClasses</name>
        <desc>dumps all declared console classes to the console.</desc>
    </function>
    <function>        <name>dumpConsoleFunctions</name>
        <desc>dumps all declared console functions to the console.</desc>
    </function>
    <function>        <name>dumpFontCacheStatus</name>
        <desc>- Return a full description of all cached fonts, along with info on the codepoints each contains.</desc>
    </function>
    <function>        <name>dumpMemSnapshot</name>
        <args>string fileName</args>
        <desc>Dump a snapshot of current memory to a file.</desc>
    </function>
    <function>        <name>dumpNetStats</name>
    </function>
    <function>        <name>dumpNetStringTable</name>
    </function>
    <function>        <name>dumpProcessList</name>
    </function>
    <function>        <name>dumpResourceStats</name>
        <desc>Dump information about resources. Debug only!</desc>
    </function>
    <function>        <name>dumpTextureStats</name>
        <desc>Dump texture manager statistics. Debug only!</desc>
    </function>
    <function>        <name>DumpUnflaggedAllocs</name>
        <args>filename [optional, if not specified dumps to console]</args>
    </function>
    <function>        <name>duplicateCachedFont</name>
        <args>oldFontName, oldFontSize, newFontName</args>
        <desc>-Copy the specified old font to a new name. The new copy will not have a platform font backing it, and so will never have characters added to it. But this is useful for making copies of fonts to add postprocessing effects to via exportCachedFont.</desc>
    </function>
    <function>        <name>echo</name>
        <args>text [, ... ]</args>
    </function>
    <function>        <name>echoInputState</name>
    </function>
    <function>        <name>enableGamepad</name>
    </function>
    <function>        <name>enableJoystick</name>
    </function>
    <function>        <name>enableMouse</name>
    </function>
    <function>        <name>enableWinConsole</name>
        <args>enable, [showWindow]</args>
    </function>
    <function>        <name>enableXInput</name>
    </function>
    <function>        <name>endswith</name>
        <args>src string, target string</args>
        <desc>case insensitive</desc>
    </function>
    <function>        <name>error</name>
        <args>text [, ... ]</args>
    </function>
    <function>        <name>eval</name>
        <args>consoleString</args>
    </function>
    <function>        <name>exec</name>
        <args>fileName [, nocalls [,journalScript]]</args>
    </function>
    <function>        <name>execPrefs</name>
        <args>relativeFileName [, nocalls [,journalScript]]</args>
    </function>
    <function>        <name>expandEscape</name>
        <args>text</args>
    </function>
    <function>        <name>expandFilename</name>
        <args>string filename</args>
    </function>
    <function>        <name>export</name>
        <args>searchString [, relativeFileName [,append]]</args>
    </function>
    <function>        <name>exportCachedFont</name>
        <args>fontName, size, fileName, padding, kerning</args>
        <desc>- Export specified font to the specified filename as a PNG. The image can then be processed in Photoshop or another tool and reimported using importCachedFont. Characters in the font areexported as one long strip.</desc>
    </function>
    <function>        <name>fileBase</name>
        <args>fileName</args>
    </function>
    <function>        <name>fileExt</name>
        <args>fileName</args>
    </function>
    <function>        <name>fileName</name>
        <args>filePathName</args>
    </function>
    <function>        <name>filePath</name>
        <args>fileName</args>
    </function>
    <function>        <name>filterString</name>
        <args>baseString,replacementChars</args>
    </function>
    <function>        <name>findField</name>
        <args>text, field</args>
    </function>
    <function>        <name>findFirstFile</name>
        <args>string pattern</args>
        <desc>Returns the first file in the directory system matching the given pattern.</desc>
    </function>
    <function>        <name>findNextFile</name>
        <args>string pattern</args>
        <desc>Returns the next file matching a search begun in findFirstFile.</desc>
    </function>
    <function>        <name>findWord</name>
        <args>text, word</args>
    </function>
    <function>        <name>firstWord</name>
        <args>text</args>
    </function>
    <function>        <name>FlagCurrentAllocs</name>
    </function>
    <function>        <name>flushTextureCache</name>
        <desc>Flush the texture cache.</desc>
    </function>
    <function>        <name>FreeMemoryDump</name>
    </function>
    <function>        <name>generateChunkFileFromRaw16</name>
        <args>srcFile, size, squareSize, vertScale, destFile, error, treeDepth</args>
        <desc>Create a chunk file from a raw 16 bit heightfield of the given square size and vert scale.</desc>
    </function>
    <function>        <name>generateTQT</name>
        <args>filename sourceImage, filename tgtFile, treeDepth, tileSize</args>
        <desc>Generate a TQT file with the specified parameters from the given source image.</desc>
    </function>
    <function>        <name>getBoxCenter</name>
        <args>Box b</args>
        <desc>Get the center point of a box.</desc>
    </function>
    <function>        <name>getBuildString</name>
        <desc>Get the type of build, "Debug" or "Release".</desc>
    </function>
    <function>        <name>getClipboard</name>
        <desc>Get text from the clipboard.</desc>
    </function>
    <function>        <name>getCompileTimeString</name>
        <desc>Get the time of compilation.</desc>
    </function>
    <function>        <name>getControlObjectAltitude</name>
        <desc>Get distance from bottom of controlled object to terrain.</desc>
    </function>
    <function>        <name>getControlObjectSpeed</name>
        <desc>Get speed (but not velocity) of controlled object.</desc>
    </function>
    <function>        <name>getCoreLangTable</name>
    </function>
    <function>        <name>getCurrentActionMap</name>
    </function>
    <function>        <name>getDesktopResolution</name>
    </function>
    <function>        <name>getDisplayDeviceList</name>
        <desc>Returns a tab-seperated string of the detected devices.</desc>
    </function>
    <function>        <name>getDisplayDeviceName</name>
        <desc>Returns the name of the current display device</desc>
    </function>
    <function>        <name>getEventTimeLeft</name>
        <args>scheduleId</args>
        <desc>Get the time left in ms until this event will trigger.</desc>
    </function>
    <function>        <name>getExtantDDSFiles</name>
        <desc>- Returns active DDSes in memory!</desc>
    </function>
    <function>        <name>getField</name>
        <args>text, index</args>
    </function>
    <function>        <name>getFieldCount</name>
        <args>text</args>
    </function>
    <function>        <name>getFields</name>
        <args>text, index [,endIndex]</args>
    </function>
    <function>        <name>getFileCount</name>
        <args>string pattern</args>
        <desc>returns the number of files in the directory tree that match the given pattern</desc>
    </function>
    <function>        <name>getFileCRC</name>
        <args>filename</args>
    </function>
    <function>        <name>getGamepadName</name>
    </function>
    <function>        <name>getJoystickAxes</name>
        <args> instance </args>
    </function>
    <function>        <name>getLanguage</name>
    </function>
    <function>        <name>getMaxFrameAllocation</name>
    </function>
    <function>        <name>getModPaths</name>
        <desc>Return the mod paths the resource manager is using.</desc>
    </function>
    <function>        <name>getPixelShaderVersion</name>
        <desc>Get pixel shader version.</desc>
    </function>
    <function>        <name>getPrefsPath</name>
        <args>[relativeFileName]</args>
    </function>
    <function>        <name>getRandom</name>
        <args>int a=1, int b=0</args>
        <desc>Get a random number between a and b.</desc>
    </function>
    <function>        <name>getRandomSeed</name>
        <desc>Return the current random seed.</desc>
    </function>
    <function>        <name>getRealTime</name>
        <desc>Return the current real time in milliseconds.

Real time is platform defined; typically time since the computer booted.</desc>
    </function>
    <function>        <name>getRecord</name>
        <args>text, index</args>
    </function>
    <function>        <name>getRecordCount</name>
        <args>text</args>
    </function>
    <function>        <name>getRecords</name>
        <args>text, index [,endIndex]</args>
    </function>
    <function>        <name>getResolution</name>
        <desc>Returns screen resolution in form "width height bitdepth fullscreen"</desc>
    </function>
    <function>        <name>getResolutionList</name>
        <args>[minimumRes]</args>
        <desc>Returns a tab-seperated list of possible resolutions.</desc>
    </function>
    <function>        <name>getScheduleDuration</name>
        <desc>getTimeSinceStart(%scheduleId);</desc>
    </function>
    <function>        <name>getScreenMode</name>
        <desc>Returns full screen mode (0 = windowed, 1 = fullscreen, 2 = borderless)</desc>
    </function>
    <function>        <name>getServerCount</name>
    </function>
    <function>        <name>getSimTime</name>
        <desc>Return the current sim time in milliseconds.

Sim time is time since the game started.</desc>
    </function>
    <function>        <name>getStrWidthPrecise</name>
        <args>string</args>
    </function>
    <function>        <name>getSubStr</name>
        <args>string str, int start, int numChars</args>
        <desc>Returns the substring of str, starting at start, and continuing to either the end of the string, or numChars characters, whichever comes first.</desc>
    </function>
    <function>        <name>getTag</name>
        <args>textTagString</args>
    </function>
    <function>        <name>getTaggedString</name>
        <args>int tag</args>
    </function>
    <function>        <name>getTerrainHeight</name>
        <args>Point2I pos</args>
        <desc>- gets the terrain height at the specified position.</desc>
    </function>
    <function>        <name>getTimeSinceStart</name>
        <args>%scheduleId</args>
    </function>
    <function>        <name>getUserDataDirectory</name>
    </function>
    <function>        <name>getUserHomeDirectory</name>
    </function>
    <function>        <name>getVersionNumber</name>
        <desc>Get the version of the build, as a string.</desc>
    </function>
    <function>        <name>getVersionString</name>
        <desc>Get the version of the build, as a string.</desc>
    </function>
    <function>        <name>getWord</name>
        <args>string text, int index</args>
    </function>
    <function>        <name>getWordCount</name>
        <args>text</args>
    </function>
    <function>        <name>getWords</name>
        <args>string text, int index, int endIndex=INF</args>
    </function>
    <function>        <name>getXInputState</name>
        <args> int controllerID, string property, bool current </args>
    </function>
    <function>        <name>gotoWebPage</name>
        <args> address </args>
        <desc>- Open a web page in the user's favorite web browser.</desc>
    </function>
    <function>        <name>importCachedFont</name>
        <args>fontName, size, fileName, padding, kerning</args>
        <desc>- Import an image strip from exportCachedFont. Call with the same parameters you called exportCachedFont.</desc>
    </function>
    <function>        <name>importOldAtlasCHU</name>
        <args>oldCHU, newAtlasFile</args>
    </function>
    <function>        <name>importOldAtlasTQT</name>
        <args>oldTQT, newAtlasFile</args>
    </function>
    <function>        <name>initContainerRadiusSearch</name>
        <args>Point3F pos, float radius, bitset mask</args>
        <desc>Start a search for items within radius of pos, filtering by bitset mask.</desc>
    </function>
    <function>        <name>isalnum</name>
        <args>string, index</args>
        <desc>: return true if character at specified index in string is alnum</desc>
    </function>
    <function>        <name>isDebugBuild</name>
        <desc>- Returns true if the script is running in a debug Torque executable</desc>
    </function>
    <function>        <name>isDefined</name>
        <args>variable name [, value if not defined]</args>
    </function>
    <function>        <name>isDemoLaunch</name>
    </function>
    <function>        <name>IsDirectory</name>
        <args> string: directory of form "foo/bar", do not include trailing /, case insensitive, directory must have files in it if you expect the directory to be in a zip </args>
    </function>
    <function>        <name>isEventPending</name>
        <args>%scheduleId</args>
    </function>
    <function>        <name>isFile</name>
        <args>fileName</args>
    </function>
    <function>        <name>isJoystickDetected</name>
    </function>
    <function>        <name>isJoystickEnabled</name>
    </function>
    <function>        <name>isKoreanBuild</name>
    </function>
    <function>        <name>isObject</name>
        <args>object</args>
    </function>
    <function>        <name>isPackage</name>
        <args>packageName</args>
    </function>
    <function>        <name>isPointInside</name>
        <args>Point3F pos</args>
        <desc>or (float x, float y, float z)</desc>
    </function>
    <function>        <name>isResourceBGLoaded</name>
        <args>file</args>
    </function>
    <function>        <name>isShippingBuild</name>
        <desc>Returns true if this is a shipping build, false otherwise</desc>
    </function>
    <function>        <name>isSinglePlayerMode</name>
        <desc>- Checks if singleplayer only mode is enabled.</desc>
    </function>
    <function>        <name>isspace</name>
        <args>string, index</args>
        <desc>: return true if character at specified index in string is whitespace</desc>
    </function>
    <function>        <name>isWriteableFileName</name>
        <args>fileName</args>
    </function>
    <function>        <name>isXInputConnected</name>
        <args> int controllerID </args>
    </function>
    <function>        <name>lightScene</name>
        <args>script_function completeCallback=NULL, string mode=""</args>
        <desc>Relight the scene.

If mode is "forceAlways", the lightmaps will be regenerated regardless of whether lighting cache files can be written to. If mode is "forceWritable", then the lightmaps will be regenerated only if the lighting cache files can be written.</desc>
    </function>
    <function>        <name>loadChunkFile</name>
        <args>Filename file</args>
        <desc>Read a chunk hierarchy from a file.</desc>
    </function>
    <function>        <name>loadZip</name>
        <args>zipName</args>
    </function>
    <function>        <name>lockMouse</name>
        <args>bool isLocked</args>
        <desc>Lock the mouse (or not, depending on the argument's value) to the window.</desc>
    </function>
    <function>        <name>ltrim</name>
        <args>string value</args>
    </function>
    <function>        <name>mAbs</name>
        <args>float v</args>
        <desc>Returns the absolute value of the argument.</desc>
    </function>
    <function>        <name>mAcos</name>
        <args>float th</args>
        <desc>Returns the arc-cosine of th, which is in radians.</desc>
    </function>
    <function>        <name>makeTestTerrain</name>
        <args>string fileName, ...</args>
        <desc>- makes a test terrain file - arguments after the fileName are the names of the initial terrain materials.</desc>
    </function>
    <function>        <name>mAsin</name>
        <args>float th</args>
        <desc>Returns the arc-sine of th, which is in radians.</desc>
    </function>
    <function>        <name>mAtan</name>
        <args>float rise, float run</args>
        <desc>Returns the slope in radians (the arc-tangent) of a line with the given rise and run.</desc>
    </function>
    <function>        <name>mathInit</name>
        <args> ... </args>
        <desc>Install the math library with specified extensions.

Possible parameters are:
- 'DETECT' Autodetect math lib settings.
- 'C' Enable the C math routines. C routines are always enabled.
- 'FPU' Enable floating point unit routines.
- 'MMX' Enable MMX math routines.
- '3DNOW' Enable 3dNow! math routines.
- 'SSE' Enable SSE math routines.</desc>
    </function>
    <function>        <name>MatrixCreate</name>
        <args>Vector3F pos, Vector3F rot</args>
        <desc>Create a matrix representing the given translation and rotation.</desc>
    </function>
    <function>        <name>MatrixCreateFromEuler</name>
        <args>Vector3F e</args>
        <desc>Create a matrix from the given rotations.</desc>
    </function>
    <function>        <name>MatrixMulPoint</name>
        <args>MatrixF xfrm, Point3F pnt</args>
        <desc>Multiply pnt by xfrm.</desc>
    </function>
    <function>        <name>MatrixMultiply</name>
        <args>Matrix4F left, Matrix4F right</args>
        <desc>Multiply the two matrices.</desc>
    </function>
    <function>        <name>MatrixMulVector</name>
        <args>MatrixF xfrm, Point3F vector</args>
        <desc>Multiply the vector by the transform.</desc>
    </function>
    <function>        <name>mCeil</name>
        <args>float v</args>
        <desc>Round v up to the nearest whole number.</desc>
    </function>
    <function>        <name>mClamp</name>
        <args>float number, float min, float max</args>
        <desc>Clamp a value between two other values.</desc>
    </function>
    <function>        <name>mCos</name>
        <args>float th</args>
        <desc>Returns the cosine of th, which is in radians.</desc>
    </function>
    <function>        <name>mDegToRad</name>
        <args>float degrees</args>
        <desc>Convert a measure in degrees to radians.</desc>
    </function>
    <function>        <name>mergeTQT</name>
        <args>filename tqt00, filename tqt01, filename tqt10, filename tqt11, filename outputTQT</args>
        <desc>Merge the four supplied TQT files into one larger one. NOT CURRENTLY WORKING.</desc>
    </function>
    <function>        <name>mFloatLength</name>
        <args>float v, int numDecimals</args>
        <desc>Return a string containing v formatted with the specified number of decimal places.</desc>
    </function>
    <function>        <name>mFloor</name>
        <args>float v</args>
        <desc>Round v down to the nearest whole number.</desc>
    </function>
    <function>        <name>mLog</name>
        <args>float v</args>
        <desc>Returns the natural logarithm of the argument.</desc>
    </function>
    <function>        <name>mPow</name>
        <args>float b, float p</args>
        <desc>Returns the b raised to the pth power.</desc>
    </function>
    <function>        <name>mRadToDeg</name>
        <args>float radians</args>
        <desc>Converts a measure in radians to degrees.</desc>
    </function>
    <function>        <name>msg</name>
        <args>NetConnection id, string message</args>
        <desc>Send a SimpleNetObject message to the specified connection.</desc>
    </function>
    <function>        <name>mSin</name>
        <args>float th</args>
        <desc>Returns the sine of th, which is in radians.</desc>
    </function>
    <function>        <name>mSolveCubic</name>
        <args>float a, float b, float c, float d</args>
        <desc>Solve a cubic equation of form a*x^3 + b*x^2 + c*x + d = 0.

@returns A 4-tuple, contanining: sol x0 x1 x2. sol is the number of solutions (being 0, 1, 2, or 3), and x0, x1, x2 are the solutions, if any. Unused x's are undefined.</desc>
    </function>
    <function>        <name>mSolveQuadratic</name>
        <args>float a, float b, float c</args>
        <desc>Solve a quadratic equation of form a*x^2 + b*x + c = 0.

@returns A triple, contanining: sol x0 x1. sol is the number of solutions (being 0, 1, or 2), and x0 and x1 are the solutions, if any. Unused x's are undefined.</desc>
    </function>
    <function>        <name>mSolveQuartic</name>
        <args>float a, float b, float c, float d, float e</args>
        <desc>Solve a quartic equation of form a*x^4 + b*x^3 + c*x^2 + d*x + e = 0.

@returns A 5-tuple, contanining: sol x0 x1 x2 x3. sol is the number of solutions (ranging from 0-4), and x0, x1, x2 and x3 are the solutions, if any. Unused x's are undefined.</desc>
    </function>
    <function>        <name>mSqrt</name>
        <args>float v</args>
        <desc>Returns the square root of the argument.</desc>
    </function>
    <function>        <name>mTan</name>
        <args>float th</args>
        <desc>Returns the tangent of th, which is in radians.</desc>
    </function>
    <function>        <name>nameToID</name>
        <args>object</args>
    </function>
    <function>        <name>NextToken</name>
        <desc>nextToken(str,token,delim)</desc>
    </function>
    <function>        <name>panoramaScreenShot</name>
        <args>string file, string format</args>
        <desc>Take a panoramic screenshot.

@param format This is either JPEG or PNG.</desc>
    </function>
    <function>        <name>pathOnMissionLoadDone</name>
        <desc>Load all path information from interiors.</desc>
    </function>
    <function>        <name>PDLCAllowMission</name>
        <args>levelId</args>
    </function>
    <function>        <name>playJournal</name>
        <args>string filename, bool break=false</args>
        <desc>Begin playback of a journal from a specified field, optionally breaking at the start.</desc>
    </function>
    <function>        <name>populateAllFontCacheRange</name>
        <args>rangeStart, rangeEnd</args>
        <desc>- Populate the font cache for all fonts with Unicode code points in the specified range. Note we only support BMP-0, so code points range from 0 to 65535.</desc>
    </function>
    <function>        <name>populateAllFontCacheString</name>
        <args>string</args>
        <desc>- Populate the font cache for all fonts with characters from the specified string.</desc>
    </function>
    <function>        <name>populateFontCacheRange</name>
        <args>faceName, size, rangeStart, rangeEnd</args>
        <desc>- Populate the font cache for the specified font with Unicode code points in the specified range. Note we only support BMP-0, so code points range from 0 to 65535.</desc>
    </function>
    <function>        <name>populateFontCacheString</name>
        <args>faceName, size, string</args>
        <desc>- Populate the font cache for the specified font with characters from the specified string.</desc>
    </function>
    <function>        <name>preloadClientDataBlocks</name>
        <args>Server parameter is set to false</args>
        <desc>.  This will take some time to complete.</desc>
    </function>
    <function>        <name>profilerDump</name>
        <desc>Dump the current state of the profiler.</desc>
    </function>
    <function>        <name>profilerDumpToFile</name>
        <args>string filename</args>
        <desc>Dump profiling stats to a file.</desc>
    </function>
    <function>        <name>profilerEnable</name>
        <args>bool enable</args>
    </function>
    <function>        <name>profilerMarkerEnable</name>
        <args>string markerName, bool enable</args>
    </function>
    <function>        <name>profilerReset</name>
        <desc>Resets the profiler, clearing all of its data.</desc>
    </function>
    <function>        <name>purgeResources</name>
        <desc>Purge resources from the resource manager.</desc>
    </function>
    <function>        <name>queryLanServers</name>
        <args>...</args>
    </function>
    <function>        <name>queryMasterServer</name>
        <args>...</args>
    </function>
    <function>        <name>querySingleServer</name>
        <args>address, flags</args>
    </function>
    <function>        <name>quit</name>
        <desc>End execution of Torque.</desc>
    </function>
    <function>        <name>quitWithErrorMessage</name>
        <args>msg</args>
        <desc>- Quit, showing the provided error message. This is equivalent to an AssertISV.</desc>
    </function>
    <function>        <name>readDDS</name>
        <args>file ddsFile</args>
    </function>
    <function>        <name>redbookClose</name>
        <desc>Close the current Redbook device.</desc>
    </function>
    <function>        <name>redbookGetDeviceCount</name>
        <desc>get the number of redbook devices.</desc>
    </function>
    <function>        <name>redbookGetDeviceName</name>
        <args>int index</args>
        <desc>Get name of specified Redbook device.</desc>
    </function>
    <function>        <name>redbookGetLastError</name>
        <desc>Get a string explaining the last redbook error.</desc>
    </function>
    <function>        <name>redbookGetTrackCount</name>
        <desc>Return the number of tracks.</desc>
    </function>
    <function>        <name>redbookGetVolume</name>
        <desc>Get the volume.</desc>
    </function>
    <function>        <name>redbookOpen</name>
        <args>string device=NULL</args>
    </function>
    <function>        <name>redbookPlay</name>
        <args>int track</args>
        <desc>Play the selected track.</desc>
    </function>
    <function>        <name>redbookSetVolume</name>
        <args>float volume</args>
        <desc>Set playback volume.</desc>
    </function>
    <function>        <name>redbookStop</name>
        <desc>Stop playing.</desc>
    </function>
    <function>        <name>registerLights</name>
    </function>
    <function>        <name>reInitMaterials</name>
    </function>
    <function>        <name>reloadTextures</name>
    </function>
    <function>        <name>removeField</name>
        <args>text, index</args>
    </function>
    <function>        <name>removeRecord</name>
        <args>text, index</args>
    </function>
    <function>        <name>removeTaggedString</name>
        <args>int tag</args>
    </function>
    <function>        <name>removeWord</name>
        <args>text, index</args>
    </function>
    <function>        <name>resetXInput</name>
    </function>
    <function>        <name>restWords</name>
        <args>text</args>
    </function>
    <function>        <name>rtrim</name>
        <args>string value</args>
    </function>
    <function>        <name>rumble</name>
        <args>string device, float xRumble, float yRumble</args>
        <desc>Rumbles the specified controller with constant force feedback in the (x, y) direction.
Valid inputs for xRumble/yRumble are [0 - 1].</desc>
    </function>
    <function>        <name>saveChunkFile</name>
        <args>SimChunk chunk, Filename file</args>
        <desc>Write a chunk hierarchy to a file.</desc>
    </function>
    <function>        <name>saveJournal</name>
        <args>string filename</args>
        <desc>Save the journal to the specified file.</desc>
    </function>
    <function>        <name>schedule</name>
        <args>time, refobject|0, command, &lt;arg1...argN&gt;</args>
    </function>
    <function>        <name>screenShot</name>
        <args>string file, string format</args>
        <desc>Take a screenshot.

@param format One of JPEG or PNG.</desc>
    </function>
    <function>        <name>sendAutosplitterData</name>
    </function>
    <function>        <name>setClipboard</name>
        <args>string text</args>
        <desc>Set the system clipboard.</desc>
    </function>
    <function>        <name>setCoreLangTable</name>
        <args>LangTable</args>
    </function>
    <function>        <name>setDefaultFov</name>
        <args>defaultFov</args>
        <desc>- Set the default FOV for a camera.</desc>
    </function>
    <function>        <name>setEchoFileLoads</name>
        <args>bool</args>
    </function>
    <function>        <name>setField</name>
        <args>text, index, replace</args>
    </function>
    <function>        <name>setFov</name>
        <args>fov</args>
        <desc>- Set the FOV of the camera.</desc>
    </function>
    <function>        <name>setInteriorFocusedDebug</name>
        <args>bool enable</args>
    </function>
    <function>        <name>setInteriorRenderMode</name>
        <args>int modeNum</args>
    </function>
    <function>        <name>setLogMode</name>
        <args>mode</args>
    </function>
    <function>        <name>setModPaths</name>
        <args>string paths</args>
        <desc>Set the mod paths the resource manager is using. These are semicolon delimited.</desc>
    </function>
    <function>        <name>setNetPort</name>
        <args>int port</args>
        <desc>Set the network port for the game to use.</desc>
    </function>
    <function>        <name>setRandomSeed</name>
        <args>int seed=-1</args>
        <desc>Set the current random seed. If no seed is provided, then the current time in ms is used.</desc>
    </function>
    <function>        <name>setRecord</name>
        <args>text, index, replace</args>
    </function>
    <function>        <name>setServerInfo</name>
        <args>index</args>
    </function>
    <function>        <name>setShadowDetailLevel</name>
        <args>val 0...1</args>
    </function>
    <function>        <name>setSinglePlayerMode</name>
        <args> flag </args>
        <desc>- Enable or disable singleplayer only mode.</desc>
    </function>
    <function>        <name>SetupGemSpawnGroups</name>
        <args>gemGroupRadius, maxGemsPerGroup</args>
        <desc>- Sets up gem spawn groups</desc>
    </function>
    <function>        <name>setVerticalSync</name>
        <args> bool f </args>
    </function>
    <function>        <name>setVideoMode</name>
        <args>width, height, bit depth, fullscreen</args>
    </function>
    <function>        <name>setWord</name>
        <args>text, index, replace</args>
    </function>
    <function>        <name>setZoomSpeed</name>
        <args>speed</args>
        <desc>- Set the zoom speed of the camera, in ms per 90deg FOV change.</desc>
    </function>
    <function>        <name>sfxCreateDevice</name>
        <args> string provider, string device, bool useHardware, S32 maxBuffers </args>
        <desc>Initializes the requested device.  This must be called successfully before any sounds will be heard.
@param provider The provider name.
@param device The device name.
@param useHardware A boolean which toggles the use of hardware processing when available.
@param maxBuffers The maximum buffers for this device to use or -1 for the device to pick its own reasonable default.</desc>
    </function>
    <function>        <name>sfxCreateSource</name>
        <args>profile</args>
        <desc>sfxCreateSource(profile, x,y,z)
sfxCreateSource(description, filename)
sfxCreateSource(description, filename, x,y,z)

Creates a new paused sound source using a profile or a description and filename.  The return value is the source which must be released by delete().</desc>
    </function>
    <function>        <name>sfxDeleteDevice</name>
        <desc>Destroys the currently initialized device.  Sounds will still play, but not be heard.</desc>
    </function>
    <function>        <name>sfxGetAvailableDevices</name>
        <desc>Returns a list of available devices in the form:

provider1 [tab] device1 [tab] hasHardware1 [tab] maxBuffers1 [nl] provider2 ... etc.</desc>
    </function>
    <function>        <name>sfxGetChannelVolume</name>
        <args>S32 channel</args>
        <desc>@param channel The channel index to fetch the volume from.
@return The volume of the channel.</desc>
    </function>
    <function>        <name>sfxGetDeviceInfo</name>
        <desc>Returns a newline delimited string containing information on the current device.</desc>
    </function>
    <function>        <name>sfxGetMasterVolume</name>
        <desc>@return The sound system master volume.</desc>
    </function>
    <function>        <name>sfxPlay</name>
        <args> source </args>
        <desc>sfxPlay( profile, &lt;x, y, z&gt; )</desc>
    </function>
    <function>        <name>sfxPlayOnce</name>
        <args>profile</args>
        <desc>sfxPlayOnce(profile, x,y,z)
sfxPlayOnce(description, filename)
sfxPlayOnce(description, filename, x,y,z)

Creates a new sound source using a profile or a description and filename and plays it once.  Once playback is finished the source is deleted.  The return value is the temporary source id.</desc>
    </function>
    <function>        <name>sfxSetChannelVolume</name>
        <args>S32 channel, F32 volume</args>
        <desc>@param channel The channel index to set volume on.
@param volume New 0 to 1 channel volume.</desc>
    </function>
    <function>        <name>sfxSetMasterVolume</name>
        <args>F32 volume</args>
        <desc>@param volume The new 0 to 1 sound system master volume.</desc>
    </function>
    <function>        <name>sfxStop</name>
        <args>S32 id</args>
        <desc>: stop a source, equivalent to id.stop()</desc>
    </function>
    <function>        <name>sfxStopAll</name>
        <args>S32 channel = -1</args>
        <desc>@param channel The optional channel index of which sources to stop.
@return The volume of the channel.</desc>
    </function>
    <function>        <name>sgLightingModelCount</name>
        <desc>Get the number of Lighting Pack Lighting Models.</desc>
    </function>
    <function>        <name>sgLightingModelName</name>
        <desc>Get the name of the Lighting Pack Lighting Model.</desc>
    </function>
    <function>        <name>showDeleteThread</name>
        <args>int threadNum</args>
    </function>
    <function>        <name>showNewThread</name>
    </function>
    <function>        <name>showPlay</name>
        <args>int threadNum = -1</args>
    </function>
    <function>        <name>showSelectSequence</name>
    </function>
    <function>        <name>showSequenceLoad</name>
        <args>string sequenceFile, string sequenceName=NULL</args>
    </function>
    <function>        <name>showSetCamera</name>
        <args>char orbitShape</args>
        <desc>t or T to orbit, else free-fly.</desc>
    </function>
    <function>        <name>showSetDetailSlider</name>
    </function>
    <function>        <name>showSetKeyboard</name>
        <args>char moveShape</args>
        <desc>Set to t or T.</desc>
    </function>
    <function>        <name>showSetLightDirection</name>
    </function>
    <function>        <name>showSetPos</name>
        <args>int threadNum, float pos</args>
    </function>
    <function>        <name>showSetScale</name>
        <args>int threadNum, float scale</args>
    </function>
    <function>        <name>showShapeLoad</name>
        <args>string shapeName, bool faceCamera</args>
    </function>
    <function>        <name>showStop</name>
        <args>int threadNum = -1</args>
    </function>
    <function>        <name>showToggleRoot</name>
    </function>
    <function>        <name>showToggleStick</name>
    </function>
    <function>        <name>showTurnLeft</name>
        <args>float amt</args>
    </function>
    <function>        <name>showTurnRight</name>
        <args>float amt</args>
    </function>
    <function>        <name>showUpdateThreadControl</name>
    </function>
    <function>        <name>snapToggle</name>
    </function>
    <function>        <name>StartFoliageReplication</name>
    </function>
    <function>        <name>startHeartbeat</name>
    </function>
    <function>        <name>startswith</name>
        <args>src string, target string</args>
        <desc>case insensitive</desc>
    </function>
    <function>        <name>stopHeartbeat</name>
    </function>
    <function>        <name>stopServerQuery</name>
    </function>
    <function>        <name>strasc</name>
        <args>char</args>
    </function>
    <function>        <name>strchr</name>
        <args>string,char</args>
    </function>
    <function>        <name>strcmp</name>
        <args>string one, string two</args>
        <desc>Case sensitive string compare.</desc>
    </function>
    <function>        <name>strformat</name>
        <args>string format, value</args>
        <desc>Formats the given given value as a string, given the printf-style format string.</desc>
    </function>
    <function>        <name>stricmp</name>
        <args>string one, string two</args>
        <desc>Case insensitive string compare.</desc>
    </function>
    <function>        <name>stripChars</name>
        <args>string value, string chars</args>
        <desc>Remove all the characters in chars from value.</desc>
    </function>
    <function>        <name>stripColorCodes</name>
        <args>stringtoStrip</args>
        <desc>- remove TorqueML color codes from the string.</desc>
    </function>
    <function>        <name>StripMLControlChars</name>
        <args>string val</args>
        <desc>Strip TorqueML control characters from the specified string, returning a 'clean' version.</desc>
    </function>
    <function>        <name>stripTrailingSpaces</name>
        <args> string </args>
    </function>
    <function>        <name>strlen</name>
        <args>string str</args>
        <desc>Calculate the length of a string in characters.</desc>
    </function>
    <function>        <name>strlwr</name>
        <args>string</args>
        <desc>Convert string to lower case.</desc>
    </function>
    <function>        <name>strpos</name>
        <args>string hay, string needle, int offset=0</args>
        <desc>Find needle in hay, starting offset bytes in.</desc>
    </function>
    <function>        <name>strrchr</name>
        <args>string,char</args>
    </function>
    <function>        <name>strrchrpos</name>
        <args>string,char</args>
    </function>
    <function>        <name>strreplace</name>
        <args>string source, string from, string to</args>
    </function>
    <function>        <name>strstr</name>
        <args>string one, string two</args>
        <desc>Returns the start of the sub string two in one or -1 if not found.</desc>
    </function>
    <function>        <name>strswiz</name>
        <args>string,len</args>
    </function>
    <function>        <name>strToPlayerName</name>
        <args> string </args>
    </function>
    <function>        <name>strupr</name>
        <args>string</args>
        <desc>Convert string to upper case.</desc>
    </function>
    <function>        <name>telnetSetParameters</name>
        <args>int port, string consolePass, string listenPass</args>
        <desc>Initialize and open the telnet console.

@param port        Port to listen on for console connections (0 will shut down listening).
@param consolePass Password for read/write access to console.
@param listenPass  Password for read access to console.@param remoteEcho  [optional] Enable echoing back to the client, off by default.</desc>
    </function>
    <function>        <name>testCHF</name>
        <desc>Benchmark the AtlasHeightfield query speed.</desc>
    </function>
    <function>        <name>testPNGCompression</name>
    </function>
    <function>        <name>toggleFullScreen</name>
    </function>
    <function>        <name>trace</name>
        <args>bool</args>
    </function>
    <function>        <name>trim</name>
        <args>string</args>
    </function>
    <function>        <name>updateVideoMode</name>
    </function>
    <function>        <name>ValidateMemory</name>
    </function>
    <function>        <name>VectorAdd</name>
        <args>Vector3F a, Vector3F b</args>
        <desc>Returns a+b.</desc>
    </function>
    <function>        <name>VectorCross</name>
        <args>Vector3F a, Vector3F b</args>
        <desc>Calculate the cross product of a and b.</desc>
    </function>
    <function>        <name>VectorDist</name>
        <args>Vector3F a, Vector3F b</args>
        <desc>Calculate the distance between a and b.</desc>
    </function>
    <function>        <name>VectorDot</name>
        <args>Vector3F a, Vector3F b</args>
        <desc>Calculate the dot product of a and b.</desc>
    </function>
    <function>        <name>VectorLen</name>
        <args>Vector3F v</args>
        <desc>Calculate the length of a vector.</desc>
    </function>
    <function>        <name>VectorNormalize</name>
        <args>Vector3F a</args>
        <desc>Returns a scaled such that length(a) = 1.</desc>
    </function>
    <function>        <name>VectorOrthoBasis</name>
        <args>AngAxisF aaf</args>
        <desc>Create an orthogonal basis from the given vector. Return a matrix.</desc>
    </function>
    <function>        <name>VectorScale</name>
        <args>Vector3F a, float scalar</args>
        <desc>Returns a scaled by scalar (ie, a*scalar).</desc>
    </function>
    <function>        <name>VectorSub</name>
        <args>Vector3F a, Vector3F b</args>
        <desc>Returns a-b.</desc>
    </function>
    <function>        <name>videoSetGammaCorrection</name>
        <desc>setGammaCorrection(gamma);</desc>
    </function>
    <function>        <name>warn</name>
        <args>text [, ... ]</args>
    </function>
    <function>        <name>writeFontCache</name>
        <desc>- force all cached fonts toserialize themselves to the cache.</desc>
    </function>
    <function>        <name>XBLiveGetSignInPort</name>
    </function>
    <function>        <name>XBLiveGetUserId</name>
    </function>
    <function>        <name>XBLiveGetUserName</name>
    </function>
    <function>        <name>XBLiveIsSignedIn</name>
        <args>[port]</args>
    </function>
    <function>        <name>XBLiveIsSignedInGold</name>
    </function>
    <function>        <name>XBLiveIsSignedInSilver</name>
    </function>
</exports>
